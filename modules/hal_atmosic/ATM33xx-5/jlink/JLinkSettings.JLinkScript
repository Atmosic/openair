/*********************************************************************
*               (c) SEGGER Microcontroller GmbH & Co. KG             *
*                        The Embedded Experts                        *
*                           www.segger.com                           *
**********************************************************************

-------------------------- END-OF-HEADER -----------------------------

File    : Template_ExcludeIllegalRegions.JLinkScript
Purpose : Script which shows how to exclude specific memory regions
Literature:
  [1]  J-Link User Guide

Additional information:
  For more information about public functions that can be implemented in order to customize J-Link actions, please refer to [1]
*/

/*********************************************************************
*
*       Global functions
*
**********************************************************************
*/

int ConfigTargetSettings(void) {
	return 0;
}

U32 _aPINMode[8]; // JLINK_PIN_MAX_NUM_PINS
U32 _aPINState[8]; // JLINK_PIN_MAX_NUM_PINS
int InitTarget(void) {
	int i;
	int r;
	i = 0;

	Report("atmosic - InitTarget");
	do {
		_aPINMode[i] = JLINK_PIN_OVERRIDE_MODE_RELEASE;
		// Do not override any pin by default
		i += 1;
	} while(i < JLINK_PIN_MAX_NUM_PINS);

	//
	// Initially, we check if pin override is supported
	//
	r = JLINK_PIN_Override(&_aPINMode[0], &_aPINState[0]);
	if (r < 0) {
		JLINK_SYS_Report("ERROR: Pin override is not supported by the connected JLink");
		return r;
	}
	Report("	Stage 1: BBOOT(pin5) High, PWD(pin11&13) High");
	_aPINMode[1] = JLINK_PIN_OVERRIDE_MODE_PIO_OUT_HIGH;
	_aPINMode[4] = JLINK_PIN_OVERRIDE_MODE_PIO_OUT_HIGH;
	_aPINMode[5] = JLINK_PIN_OVERRIDE_MODE_PIO_OUT_HIGH;
	r = JLINK_PIN_Override(&_aPINMode[0], &_aPINState[0]);
	if (r < 0) {
		JLINK_SYS_Report("ERROR: Stage 1");
		return r;
	}
	JLINK_SYS_Sleep(500);

	Report("	Stage 2: BBOOT(pin5) High, PWD(pin11&13) Low");
	_aPINMode[1] = JLINK_PIN_OVERRIDE_MODE_PIO_OUT_HIGH;
	_aPINMode[4] = JLINK_PIN_OVERRIDE_MODE_PIO_OUT_LOW;
	_aPINMode[5] = JLINK_PIN_OVERRIDE_MODE_PIO_OUT_LOW;
	r = JLINK_PIN_Override(&_aPINMode[0], &_aPINState[0]);
	if (r < 0) {
		JLINK_SYS_Report("ERROR: Stage 2");
		return r;
	}
	JLINK_SYS_Sleep(500);

	Report("	Stage 3: BBOOT(pin5) Low,  PWD(pin11&13) Low");
	_aPINMode[1] = JLINK_PIN_OVERRIDE_MODE_PIO_OUT_LOW;
	_aPINMode[4] = JLINK_PIN_OVERRIDE_MODE_PIO_OUT_LOW;
	_aPINMode[5] = JLINK_PIN_OVERRIDE_MODE_PIO_OUT_LOW;
	r = JLINK_PIN_Override(&_aPINMode[0], &_aPINState[0]);
	if (r < 0) {
		JLINK_SYS_Report("ERROR: Stage 3");
		return r;
	}

	//
	// Restore pin configuration of J-Link
	//
	i = 0;
	do {
		_aPINMode[i] = JLINK_PIN_OVERRIDE_MODE_RELEASE;
		// Do not override any pin by default
		i += 1;
	} while(i < JLINK_PIN_MAX_NUM_PINS);
	JLINK_PIN_Override(&_aPINMode[0], &_aPINState[0]);
	return 0;
}

/*************************** end of file ****************************/