/*                                                                           */
/* File:       at_lc_regs_core_macro.h                                       */
/*                                                                           */
/* Arguments:  /cad/tools/cadence/blueprint_3.7.5/Linux-64bit/blueprint -eval*/
/*             $DEFINE_PROPERTY=1; -ansic at_lc_regs_core.rdl                */
/*                                                                           */
/* Blueprint:   3.7.5 (Wed Feb 1 23:58:40 PST 2012)                          */
/* Machine:    gull                                                          */
/* OS:         Linux 2.6.32-696.13.2.el6.x86_64                              */
/* Description:                                                              */
/*                                                                           */
/* No Description Provided                                                   */
/*                                                                           */
/* Copyright (C) 2025 Atmosic Technologies.  All rights reserved             */
/*                                                                           */


#ifndef __REG_AT_LC_REGS_CORE_H__
#define __REG_AT_LC_REGS_CORE_H__

/**
 *****************************************************************************
 * @defgroup AT_LC_REGS_CORE at_lc_regs_core
 * @ingroup AT_REG
 * @brief at_lc_regs_core definitions.
 * @{
 *****************************************************************************
 */

/* macros for BlueprintGlobalNameSpace::ATLC_dbg_ctrl0 */
/**
 * @defgroup at_lc_regs_core_dbg_ctrl0 dbg_ctrl0
 * @brief Contains register fields associated with dbg_ctrl0. definitions.
 * @{
 */
#ifndef __ATLC_DBG_CTRL0_MACRO__
#define __ATLC_DBG_CTRL0_MACRO__

/* macros for field dbg_sel0 */
/**
 * @defgroup at_lc_regs_core_dbg_sel0_field dbg_sel0_field
 * @brief macros for field dbg_sel0
 * @details debug bus select
 * @{
 */
#define ATLC_DBG_CTRL0__DBG_SEL0__SHIFT                                       0
#define ATLC_DBG_CTRL0__DBG_SEL0__WIDTH                                       6
#define ATLC_DBG_CTRL0__DBG_SEL0__MASK                              0x0000003fU
#define ATLC_DBG_CTRL0__DBG_SEL0__READ(src)     ((uint32_t)(src) & 0x0000003fU)
#define ATLC_DBG_CTRL0__DBG_SEL0__WRITE(src)    ((uint32_t)(src) & 0x0000003fU)
#define ATLC_DBG_CTRL0__DBG_SEL0__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000003fU) | ((uint32_t)(src) &\
                    0x0000003fU)
#define ATLC_DBG_CTRL0__DBG_SEL0__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x0000003fU)))
#define ATLC_DBG_CTRL0__DBG_SEL0__RESET_VALUE                       0x00000000U
/** @} */

/* macros for field dbg_sel1 */
/**
 * @defgroup at_lc_regs_core_dbg_sel1_field dbg_sel1_field
 * @brief macros for field dbg_sel1
 * @details debug bus select
 * @{
 */
#define ATLC_DBG_CTRL0__DBG_SEL1__SHIFT                                       8
#define ATLC_DBG_CTRL0__DBG_SEL1__WIDTH                                       6
#define ATLC_DBG_CTRL0__DBG_SEL1__MASK                              0x00003f00U
#define ATLC_DBG_CTRL0__DBG_SEL1__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00003f00U) >> 8)
#define ATLC_DBG_CTRL0__DBG_SEL1__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00003f00U)
#define ATLC_DBG_CTRL0__DBG_SEL1__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00003f00U) | (((uint32_t)(src) <<\
                    8) & 0x00003f00U)
#define ATLC_DBG_CTRL0__DBG_SEL1__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00003f00U)))
#define ATLC_DBG_CTRL0__DBG_SEL1__RESET_VALUE                       0x00000000U
/** @} */

/* macros for field dbg_sel2 */
/**
 * @defgroup at_lc_regs_core_dbg_sel2_field dbg_sel2_field
 * @brief macros for field dbg_sel2
 * @details debug bus select
 * @{
 */
#define ATLC_DBG_CTRL0__DBG_SEL2__SHIFT                                      16
#define ATLC_DBG_CTRL0__DBG_SEL2__WIDTH                                       6
#define ATLC_DBG_CTRL0__DBG_SEL2__MASK                              0x003f0000U
#define ATLC_DBG_CTRL0__DBG_SEL2__READ(src) \
                    (((uint32_t)(src)\
                    & 0x003f0000U) >> 16)
#define ATLC_DBG_CTRL0__DBG_SEL2__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x003f0000U)
#define ATLC_DBG_CTRL0__DBG_SEL2__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x003f0000U) | (((uint32_t)(src) <<\
                    16) & 0x003f0000U)
#define ATLC_DBG_CTRL0__DBG_SEL2__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x003f0000U)))
#define ATLC_DBG_CTRL0__DBG_SEL2__RESET_VALUE                       0x00000000U
/** @} */

/* macros for field dbg_sel3 */
/**
 * @defgroup at_lc_regs_core_dbg_sel3_field dbg_sel3_field
 * @brief macros for field dbg_sel3
 * @details debug bus select
 * @{
 */
#define ATLC_DBG_CTRL0__DBG_SEL3__SHIFT                                      24
#define ATLC_DBG_CTRL0__DBG_SEL3__WIDTH                                       6
#define ATLC_DBG_CTRL0__DBG_SEL3__MASK                              0x3f000000U
#define ATLC_DBG_CTRL0__DBG_SEL3__READ(src) \
                    (((uint32_t)(src)\
                    & 0x3f000000U) >> 24)
#define ATLC_DBG_CTRL0__DBG_SEL3__WRITE(src) \
                    (((uint32_t)(src)\
                    << 24) & 0x3f000000U)
#define ATLC_DBG_CTRL0__DBG_SEL3__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x3f000000U) | (((uint32_t)(src) <<\
                    24) & 0x3f000000U)
#define ATLC_DBG_CTRL0__DBG_SEL3__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 24) & ~0x3f000000U)))
#define ATLC_DBG_CTRL0__DBG_SEL3__RESET_VALUE                       0x00000000U
/** @} */

/* macros for field dbg_en */
/**
 * @defgroup at_lc_regs_core_dbg_en_field dbg_en_field
 * @brief macros for field dbg_en
 * @details debug bus enable
 * @{
 */
#define ATLC_DBG_CTRL0__DBG_EN__SHIFT                                        31
#define ATLC_DBG_CTRL0__DBG_EN__WIDTH                                         1
#define ATLC_DBG_CTRL0__DBG_EN__MASK                                0x80000000U
#define ATLC_DBG_CTRL0__DBG_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x80000000U) >> 31)
#define ATLC_DBG_CTRL0__DBG_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 31) & 0x80000000U)
#define ATLC_DBG_CTRL0__DBG_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x80000000U) | (((uint32_t)(src) <<\
                    31) & 0x80000000U)
#define ATLC_DBG_CTRL0__DBG_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 31) & ~0x80000000U)))
#define ATLC_DBG_CTRL0__DBG_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x80000000U) | ((uint32_t)(1) << 31)
#define ATLC_DBG_CTRL0__DBG_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x80000000U) | ((uint32_t)(0) << 31)
#define ATLC_DBG_CTRL0__DBG_EN__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_DBG_CTRL0__TYPE                                           uint32_t
#define ATLC_DBG_CTRL0__READ                                        0xbf3f3f3fU
#define ATLC_DBG_CTRL0__WRITE                                       0xbf3f3f3fU
#define ATLC_DBG_CTRL0__PRESERVED                                   0x00000000U
#define ATLC_DBG_CTRL0__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_DBG_CTRL0_MACRO__ */

/** @} end of dbg_ctrl0 */

/* macros for BlueprintGlobalNameSpace::ATLC_dbg_ctrl1 */
/**
 * @defgroup at_lc_regs_core_dbg_ctrl1 dbg_ctrl1
 * @brief Contains register fields associated with dbg_ctrl1. definitions.
 * @{
 */
#ifndef __ATLC_DBG_CTRL1_MACRO__
#define __ATLC_DBG_CTRL1_MACRO__

/* macros for field crc_sel */
/**
 * @defgroup at_lc_regs_core_crc_sel_field crc_sel_field
 * @brief macros for field crc_sel
 * @details select byte of crc
 * @{
 */
#define ATLC_DBG_CTRL1__CRC_SEL__SHIFT                                        0
#define ATLC_DBG_CTRL1__CRC_SEL__WIDTH                                        2
#define ATLC_DBG_CTRL1__CRC_SEL__MASK                               0x00000003U
#define ATLC_DBG_CTRL1__CRC_SEL__READ(src)      ((uint32_t)(src) & 0x00000003U)
#define ATLC_DBG_CTRL1__CRC_SEL__WRITE(src)     ((uint32_t)(src) & 0x00000003U)
#define ATLC_DBG_CTRL1__CRC_SEL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000003U) | ((uint32_t)(src) &\
                    0x00000003U)
#define ATLC_DBG_CTRL1__CRC_SEL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000003U)))
#define ATLC_DBG_CTRL1__CRC_SEL__RESET_VALUE                        0x00000000U
/** @} */

/* macros for field aes_blk_sel */
/**
 * @defgroup at_lc_regs_core_aes_blk_sel_field aes_blk_sel_field
 * @brief macros for field aes_blk_sel
 * @details select byte of aes blk
 * @{
 */
#define ATLC_DBG_CTRL1__AES_BLK_SEL__SHIFT                                    2
#define ATLC_DBG_CTRL1__AES_BLK_SEL__WIDTH                                    4
#define ATLC_DBG_CTRL1__AES_BLK_SEL__MASK                           0x0000003cU
#define ATLC_DBG_CTRL1__AES_BLK_SEL__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000003cU) >> 2)
#define ATLC_DBG_CTRL1__AES_BLK_SEL__WRITE(src) \
                    (((uint32_t)(src)\
                    << 2) & 0x0000003cU)
#define ATLC_DBG_CTRL1__AES_BLK_SEL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000003cU) | (((uint32_t)(src) <<\
                    2) & 0x0000003cU)
#define ATLC_DBG_CTRL1__AES_BLK_SEL__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 2) & ~0x0000003cU)))
#define ATLC_DBG_CTRL1__AES_BLK_SEL__RESET_VALUE                    0x00000000U
/** @} */

/* macros for field fr_us_cntr_sel */
/**
 * @defgroup at_lc_regs_core_fr_us_cntr_sel_field fr_us_cntr_sel_field
 * @brief macros for field fr_us_cntr_sel
 * @details select byte of free running us cntr
 * @{
 */
#define ATLC_DBG_CTRL1__FR_US_CNTR_SEL__SHIFT                                 6
#define ATLC_DBG_CTRL1__FR_US_CNTR_SEL__WIDTH                                 2
#define ATLC_DBG_CTRL1__FR_US_CNTR_SEL__MASK                        0x000000c0U
#define ATLC_DBG_CTRL1__FR_US_CNTR_SEL__READ(src) \
                    (((uint32_t)(src)\
                    & 0x000000c0U) >> 6)
#define ATLC_DBG_CTRL1__FR_US_CNTR_SEL__WRITE(src) \
                    (((uint32_t)(src)\
                    << 6) & 0x000000c0U)
#define ATLC_DBG_CTRL1__FR_US_CNTR_SEL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000c0U) | (((uint32_t)(src) <<\
                    6) & 0x000000c0U)
#define ATLC_DBG_CTRL1__FR_US_CNTR_SEL__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 6) & ~0x000000c0U)))
#define ATLC_DBG_CTRL1__FR_US_CNTR_SEL__RESET_VALUE                 0x00000000U
/** @} */

/* macros for field fpga_dbg_sel */
/**
 * @defgroup at_lc_regs_core_fpga_dbg_sel_field fpga_dbg_sel_field
 * @brief macros for field fpga_dbg_sel
 * @details select fpga debug bus
 * @{
 */
#define ATLC_DBG_CTRL1__FPGA_DBG_SEL__SHIFT                                   8
#define ATLC_DBG_CTRL1__FPGA_DBG_SEL__WIDTH                                   2
#define ATLC_DBG_CTRL1__FPGA_DBG_SEL__MASK                          0x00000300U
#define ATLC_DBG_CTRL1__FPGA_DBG_SEL__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000300U) >> 8)
#define ATLC_DBG_CTRL1__FPGA_DBG_SEL__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00000300U)
#define ATLC_DBG_CTRL1__FPGA_DBG_SEL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000300U) | (((uint32_t)(src) <<\
                    8) & 0x00000300U)
#define ATLC_DBG_CTRL1__FPGA_DBG_SEL__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00000300U)))
#define ATLC_DBG_CTRL1__FPGA_DBG_SEL__RESET_VALUE                   0x00000000U
/** @} */
#define ATLC_DBG_CTRL1__TYPE                                           uint32_t
#define ATLC_DBG_CTRL1__READ                                        0x000003ffU
#define ATLC_DBG_CTRL1__WRITE                                       0x000003ffU
#define ATLC_DBG_CTRL1__PRESERVED                                   0x00000000U
#define ATLC_DBG_CTRL1__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_DBG_CTRL1_MACRO__ */

/** @} end of dbg_ctrl1 */

/* macros for BlueprintGlobalNameSpace::ATLC_dbg_ctrl2 */
/**
 * @defgroup at_lc_regs_core_dbg_ctrl2 dbg_ctrl2
 * @brief Contains register fields associated with dbg_ctrl2. definitions.
 * @{
 */
#ifndef __ATLC_DBG_CTRL2_MACRO__
#define __ATLC_DBG_CTRL2_MACRO__

/* macros for field dbg_val */
/**
 * @defgroup at_lc_regs_core_dbg_val_field dbg_val_field
 * @brief macros for field dbg_val
 * @details value to be piped to debug port
 * @{
 */
#define ATLC_DBG_CTRL2__DBG_VAL__SHIFT                                        0
#define ATLC_DBG_CTRL2__DBG_VAL__WIDTH                                       32
#define ATLC_DBG_CTRL2__DBG_VAL__MASK                               0xffffffffU
#define ATLC_DBG_CTRL2__DBG_VAL__READ(src)      ((uint32_t)(src) & 0xffffffffU)
#define ATLC_DBG_CTRL2__DBG_VAL__WRITE(src)     ((uint32_t)(src) & 0xffffffffU)
#define ATLC_DBG_CTRL2__DBG_VAL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_DBG_CTRL2__DBG_VAL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_DBG_CTRL2__DBG_VAL__RESET_VALUE                        0x00000000U
/** @} */
#define ATLC_DBG_CTRL2__TYPE                                           uint32_t
#define ATLC_DBG_CTRL2__READ                                        0xffffffffU
#define ATLC_DBG_CTRL2__WRITE                                       0xffffffffU
#define ATLC_DBG_CTRL2__PRESERVED                                   0x00000000U
#define ATLC_DBG_CTRL2__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_DBG_CTRL2_MACRO__ */

/** @} end of dbg_ctrl2 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_ctrl6 */
/**
 * @defgroup at_lc_regs_core_lc_ctrl6 lc_ctrl6
 * @brief Contains register fields associated with lc_ctrl6. definitions.
 * @{
 */
#ifndef __ATLC_LC_CTRL6_MACRO__
#define __ATLC_LC_CTRL6_MACRO__

/* macros for field clken */
/**
 * @defgroup at_lc_regs_core_clken_field clken_field
 * @brief macros for field clken
 * @details overwrite the hw controlled clken enable clock for atlc.
 * @{
 */
#define ATLC_LC_CTRL6__CLKEN__SHIFT                                           0
#define ATLC_LC_CTRL6__CLKEN__WIDTH                                           1
#define ATLC_LC_CTRL6__CLKEN__MASK                                  0x00000001U
#define ATLC_LC_CTRL6__CLKEN__READ(src)         ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_CTRL6__CLKEN__WRITE(src)        ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_CTRL6__CLKEN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_LC_CTRL6__CLKEN__VERIFY(src) (!(((uint32_t)(src) & ~0x00000001U)))
#define ATLC_LC_CTRL6__CLKEN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_CTRL6__CLKEN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_CTRL6__CLKEN__RESET_VALUE                           0x00000000U
/** @} */

/* macros for field crypt_gclken */
/**
 * @defgroup at_lc_regs_core_crypt_gclken_field crypt_gclken_field
 * @brief macros for field crypt_gclken
 * @details overwrite the hw controlled crypt_gclken enable clock for crypto engine.
 * @{
 */
#define ATLC_LC_CTRL6__CRYPT_GCLKEN__SHIFT                                    1
#define ATLC_LC_CTRL6__CRYPT_GCLKEN__WIDTH                                    1
#define ATLC_LC_CTRL6__CRYPT_GCLKEN__MASK                           0x00000002U
#define ATLC_LC_CTRL6__CRYPT_GCLKEN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000002U) >> 1)
#define ATLC_LC_CTRL6__CRYPT_GCLKEN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 1) & 0x00000002U)
#define ATLC_LC_CTRL6__CRYPT_GCLKEN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | (((uint32_t)(src) <<\
                    1) & 0x00000002U)
#define ATLC_LC_CTRL6__CRYPT_GCLKEN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 1) & ~0x00000002U)))
#define ATLC_LC_CTRL6__CRYPT_GCLKEN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(1) << 1)
#define ATLC_LC_CTRL6__CRYPT_GCLKEN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(0) << 1)
#define ATLC_LC_CTRL6__CRYPT_GCLKEN__RESET_VALUE                    0x00000000U
/** @} */

/* macros for field hgclken */
/**
 * @defgroup at_lc_regs_core_hgclken_field hgclken_field
 * @brief macros for field hgclken
 * @details not used for perth, overwrite the hw controlled hgclken enable ahb bus clock when accessing tcm.
 * @{
 */
#define ATLC_LC_CTRL6__HGCLKEN__SHIFT                                         2
#define ATLC_LC_CTRL6__HGCLKEN__WIDTH                                         1
#define ATLC_LC_CTRL6__HGCLKEN__MASK                                0x00000004U
#define ATLC_LC_CTRL6__HGCLKEN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000004U) >> 2)
#define ATLC_LC_CTRL6__HGCLKEN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 2) & 0x00000004U)
#define ATLC_LC_CTRL6__HGCLKEN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | (((uint32_t)(src) <<\
                    2) & 0x00000004U)
#define ATLC_LC_CTRL6__HGCLKEN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 2) & ~0x00000004U)))
#define ATLC_LC_CTRL6__HGCLKEN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(1) << 2)
#define ATLC_LC_CTRL6__HGCLKEN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(0) << 2)
#define ATLC_LC_CTRL6__HGCLKEN__RESET_VALUE                         0x00000000U
/** @} */

/* macros for field crypt_gclkendis */
/**
 * @defgroup at_lc_regs_core_crypt_gclkendis_field crypt_gclkendis_field
 * @brief macros for field crypt_gclkendis
 * @details obsolete, not used
 * @{
 */
#define ATLC_LC_CTRL6__CRYPT_GCLKENDIS__SHIFT                                 3
#define ATLC_LC_CTRL6__CRYPT_GCLKENDIS__WIDTH                                 1
#define ATLC_LC_CTRL6__CRYPT_GCLKENDIS__MASK                        0x00000008U
#define ATLC_LC_CTRL6__CRYPT_GCLKENDIS__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000008U) >> 3)
#define ATLC_LC_CTRL6__CRYPT_GCLKENDIS__WRITE(src) \
                    (((uint32_t)(src)\
                    << 3) & 0x00000008U)
#define ATLC_LC_CTRL6__CRYPT_GCLKENDIS__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | (((uint32_t)(src) <<\
                    3) & 0x00000008U)
#define ATLC_LC_CTRL6__CRYPT_GCLKENDIS__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 3) & ~0x00000008U)))
#define ATLC_LC_CTRL6__CRYPT_GCLKENDIS__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | ((uint32_t)(1) << 3)
#define ATLC_LC_CTRL6__CRYPT_GCLKENDIS__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | ((uint32_t)(0) << 3)
#define ATLC_LC_CTRL6__CRYPT_GCLKENDIS__RESET_VALUE                 0x00000001U
/** @} */

/* macros for field clken_in_flw_st_idl */
/**
 * @defgroup at_lc_regs_core_clken_in_flw_st_idl_field clken_in_flw_st_idl_field
 * @brief macros for field clken_in_flw_st_idl
 * @details overwrite hw controlled clken in idle
 * @{
 */
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_IDL__SHIFT                             4
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_IDL__WIDTH                             1
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_IDL__MASK                    0x00000010U
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_IDL__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000010U) >> 4)
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_IDL__WRITE(src) \
                    (((uint32_t)(src)\
                    << 4) & 0x00000010U)
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_IDL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | (((uint32_t)(src) <<\
                    4) & 0x00000010U)
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_IDL__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 4) & ~0x00000010U)))
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_IDL__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | ((uint32_t)(1) << 4)
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_IDL__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | ((uint32_t)(0) << 4)
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_IDL__RESET_VALUE             0x00000000U
/** @} */

/* macros for field clken_in_flw_st_time_wait */
/**
 * @defgroup at_lc_regs_core_clken_in_flw_st_time_wait_field clken_in_flw_st_time_wait_field
 * @brief macros for field clken_in_flw_st_time_wait
 * @details overwrite hw controlled clken in time wait
 * @{
 */
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_TIME_WAIT__SHIFT                       5
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_TIME_WAIT__WIDTH                       1
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_TIME_WAIT__MASK              0x00000020U
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_TIME_WAIT__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000020U) >> 5)
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_TIME_WAIT__WRITE(src) \
                    (((uint32_t)(src)\
                    << 5) & 0x00000020U)
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_TIME_WAIT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | (((uint32_t)(src) <<\
                    5) & 0x00000020U)
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_TIME_WAIT__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 5) & ~0x00000020U)))
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_TIME_WAIT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | ((uint32_t)(1) << 5)
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_TIME_WAIT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | ((uint32_t)(0) << 5)
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_TIME_WAIT__RESET_VALUE       0x00000000U
/** @} */

/* macros for field clken_in_flw_st_rx_pwrup */
/**
 * @defgroup at_lc_regs_core_clken_in_flw_st_rx_pwrup_field clken_in_flw_st_rx_pwrup_field
 * @brief macros for field clken_in_flw_st_rx_pwrup
 * @details overwrite hw controlled clken in rx powerup
 * @{
 */
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_RX_PWRUP__SHIFT                        6
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_RX_PWRUP__WIDTH                        1
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_RX_PWRUP__MASK               0x00000040U
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_RX_PWRUP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000040U) >> 6)
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_RX_PWRUP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 6) & 0x00000040U)
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_RX_PWRUP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | (((uint32_t)(src) <<\
                    6) & 0x00000040U)
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_RX_PWRUP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 6) & ~0x00000040U)))
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_RX_PWRUP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | ((uint32_t)(1) << 6)
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_RX_PWRUP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | ((uint32_t)(0) << 6)
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_RX_PWRUP__RESET_VALUE        0x00000000U
/** @} */

/* macros for field clken_in_flw_st_tx_pwrup */
/**
 * @defgroup at_lc_regs_core_clken_in_flw_st_tx_pwrup_field clken_in_flw_st_tx_pwrup_field
 * @brief macros for field clken_in_flw_st_tx_pwrup
 * @details overwrite hw controlled clken in tx powerup
 * @{
 */
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_TX_PWRUP__SHIFT                        7
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_TX_PWRUP__WIDTH                        1
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_TX_PWRUP__MASK               0x00000080U
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_TX_PWRUP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000080U) >> 7)
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_TX_PWRUP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 7) & 0x00000080U)
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_TX_PWRUP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | (((uint32_t)(src) <<\
                    7) & 0x00000080U)
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_TX_PWRUP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 7) & ~0x00000080U)))
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_TX_PWRUP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(1) << 7)
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_TX_PWRUP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(0) << 7)
#define ATLC_LC_CTRL6__CLKEN_IN_FLW_ST_TX_PWRUP__RESET_VALUE        0x00000000U
/** @} */
#define ATLC_LC_CTRL6__TYPE                                            uint32_t
#define ATLC_LC_CTRL6__READ                                         0x000000ffU
#define ATLC_LC_CTRL6__WRITE                                        0x000000ffU
#define ATLC_LC_CTRL6__PRESERVED                                    0x00000000U
#define ATLC_LC_CTRL6__RESET_VALUE                                  0x00000008U

#endif /* __ATLC_LC_CTRL6_MACRO__ */

/** @} end of lc_ctrl6 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_ctrl8 */
/**
 * @defgroup at_lc_regs_core_lc_ctrl8 lc_ctrl8
 * @brief Contains register fields associated with lc_ctrl8. definitions.
 * @{
 */
#ifndef __ATLC_LC_CTRL8_MACRO__
#define __ATLC_LC_CTRL8_MACRO__

/* macros for field prtcl */
/**
 * @defgroup at_lc_regs_core_prtcl_field prtcl_field
 * @brief macros for field prtcl
 * @details 0 => flexMAC, 1 => BLE, 2 => 15.4
 * @{
 */
#define ATLC_LC_CTRL8__PRTCL__SHIFT                                           0
#define ATLC_LC_CTRL8__PRTCL__WIDTH                                           4
#define ATLC_LC_CTRL8__PRTCL__MASK                                  0x0000000fU
#define ATLC_LC_CTRL8__PRTCL__READ(src)         ((uint32_t)(src) & 0x0000000fU)
#define ATLC_LC_CTRL8__PRTCL__WRITE(src)        ((uint32_t)(src) & 0x0000000fU)
#define ATLC_LC_CTRL8__PRTCL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000000fU) | ((uint32_t)(src) &\
                    0x0000000fU)
#define ATLC_LC_CTRL8__PRTCL__VERIFY(src) (!(((uint32_t)(src) & ~0x0000000fU)))
#define ATLC_LC_CTRL8__PRTCL__RESET_VALUE                           0x00000001U
/** @} */

/* macros for field ufof_rst_dis */
/**
 * @defgroup at_lc_regs_core_ufof_rst_dis_field ufof_rst_dis_field
 * @brief macros for field ufof_rst_dis
 * @details 0 => reset lc when underflow or overflow happens, 1 => disable this reset
 * @{
 */
#define ATLC_LC_CTRL8__UFOF_RST_DIS__SHIFT                                    4
#define ATLC_LC_CTRL8__UFOF_RST_DIS__WIDTH                                    1
#define ATLC_LC_CTRL8__UFOF_RST_DIS__MASK                           0x00000010U
#define ATLC_LC_CTRL8__UFOF_RST_DIS__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000010U) >> 4)
#define ATLC_LC_CTRL8__UFOF_RST_DIS__WRITE(src) \
                    (((uint32_t)(src)\
                    << 4) & 0x00000010U)
#define ATLC_LC_CTRL8__UFOF_RST_DIS__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | (((uint32_t)(src) <<\
                    4) & 0x00000010U)
#define ATLC_LC_CTRL8__UFOF_RST_DIS__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 4) & ~0x00000010U)))
#define ATLC_LC_CTRL8__UFOF_RST_DIS__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | ((uint32_t)(1) << 4)
#define ATLC_LC_CTRL8__UFOF_RST_DIS__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | ((uint32_t)(0) << 4)
#define ATLC_LC_CTRL8__UFOF_RST_DIS__RESET_VALUE                    0x00000000U
/** @} */

/* macros for field rx_pyld_len_err_rst_dis */
/**
 * @defgroup at_lc_regs_core_rx_pyld_len_err_rst_dis_field rx_pyld_len_err_rst_dis_field
 * @brief macros for field rx_pyld_len_err_rst_dis
 * @details 0 =>reset lc when pyload length error happens, 1 => disable this reset
 * @{
 */
#define ATLC_LC_CTRL8__RX_PYLD_LEN_ERR_RST_DIS__SHIFT                         5
#define ATLC_LC_CTRL8__RX_PYLD_LEN_ERR_RST_DIS__WIDTH                         1
#define ATLC_LC_CTRL8__RX_PYLD_LEN_ERR_RST_DIS__MASK                0x00000020U
#define ATLC_LC_CTRL8__RX_PYLD_LEN_ERR_RST_DIS__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000020U) >> 5)
#define ATLC_LC_CTRL8__RX_PYLD_LEN_ERR_RST_DIS__WRITE(src) \
                    (((uint32_t)(src)\
                    << 5) & 0x00000020U)
#define ATLC_LC_CTRL8__RX_PYLD_LEN_ERR_RST_DIS__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | (((uint32_t)(src) <<\
                    5) & 0x00000020U)
#define ATLC_LC_CTRL8__RX_PYLD_LEN_ERR_RST_DIS__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 5) & ~0x00000020U)))
#define ATLC_LC_CTRL8__RX_PYLD_LEN_ERR_RST_DIS__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | ((uint32_t)(1) << 5)
#define ATLC_LC_CTRL8__RX_PYLD_LEN_ERR_RST_DIS__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | ((uint32_t)(0) << 5)
#define ATLC_LC_CTRL8__RX_PYLD_LEN_ERR_RST_DIS__RESET_VALUE         0x00000000U
/** @} */

/* macros for field rx_pyld_mic_len_err_rst_dis */
/**
 * @defgroup at_lc_regs_core_rx_pyld_mic_len_err_rst_dis_field rx_pyld_mic_len_err_rst_dis_field
 * @brief macros for field rx_pyld_mic_len_err_rst_dis
 * @details 0 =>reset lc when payload mic length error happens, 1 => disable this reset
 * @{
 */
#define ATLC_LC_CTRL8__RX_PYLD_MIC_LEN_ERR_RST_DIS__SHIFT                     6
#define ATLC_LC_CTRL8__RX_PYLD_MIC_LEN_ERR_RST_DIS__WIDTH                     1
#define ATLC_LC_CTRL8__RX_PYLD_MIC_LEN_ERR_RST_DIS__MASK            0x00000040U
#define ATLC_LC_CTRL8__RX_PYLD_MIC_LEN_ERR_RST_DIS__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000040U) >> 6)
#define ATLC_LC_CTRL8__RX_PYLD_MIC_LEN_ERR_RST_DIS__WRITE(src) \
                    (((uint32_t)(src)\
                    << 6) & 0x00000040U)
#define ATLC_LC_CTRL8__RX_PYLD_MIC_LEN_ERR_RST_DIS__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | (((uint32_t)(src) <<\
                    6) & 0x00000040U)
#define ATLC_LC_CTRL8__RX_PYLD_MIC_LEN_ERR_RST_DIS__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 6) & ~0x00000040U)))
#define ATLC_LC_CTRL8__RX_PYLD_MIC_LEN_ERR_RST_DIS__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | ((uint32_t)(1) << 6)
#define ATLC_LC_CTRL8__RX_PYLD_MIC_LEN_ERR_RST_DIS__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | ((uint32_t)(0) << 6)
#define ATLC_LC_CTRL8__RX_PYLD_MIC_LEN_ERR_RST_DIS__RESET_VALUE     0x00000000U
/** @} */

/* macros for field phr_err_rst_dis */
/**
 * @defgroup at_lc_regs_core_phr_err_rst_dis_field phr_err_rst_dis_field
 * @brief macros for field phr_err_rst_dis
 * @details 0 => reset lc when phy header error happens, 1 => disable this reset
 * @{
 */
#define ATLC_LC_CTRL8__PHR_ERR_RST_DIS__SHIFT                                 7
#define ATLC_LC_CTRL8__PHR_ERR_RST_DIS__WIDTH                                 1
#define ATLC_LC_CTRL8__PHR_ERR_RST_DIS__MASK                        0x00000080U
#define ATLC_LC_CTRL8__PHR_ERR_RST_DIS__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000080U) >> 7)
#define ATLC_LC_CTRL8__PHR_ERR_RST_DIS__WRITE(src) \
                    (((uint32_t)(src)\
                    << 7) & 0x00000080U)
#define ATLC_LC_CTRL8__PHR_ERR_RST_DIS__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | (((uint32_t)(src) <<\
                    7) & 0x00000080U)
#define ATLC_LC_CTRL8__PHR_ERR_RST_DIS__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 7) & ~0x00000080U)))
#define ATLC_LC_CTRL8__PHR_ERR_RST_DIS__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(1) << 7)
#define ATLC_LC_CTRL8__PHR_ERR_RST_DIS__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(0) << 7)
#define ATLC_LC_CTRL8__PHR_ERR_RST_DIS__RESET_VALUE                 0x00000000U
/** @} */

/* macros for field tcm_atlc_byp */
/**
 * @defgroup at_lc_regs_core_tcm_atlc_byp_field tcm_atlc_byp_field
 * @brief macros for field tcm_atlc_byp
 * @details 0 tcm access is through atlc arbiter/mem controller. 1 direct access to tcm from AHB channel bypassing atlc's arbiter/mem controller.
 * @{
 */
#define ATLC_LC_CTRL8__TCM_ATLC_BYP__SHIFT                                    8
#define ATLC_LC_CTRL8__TCM_ATLC_BYP__WIDTH                                    1
#define ATLC_LC_CTRL8__TCM_ATLC_BYP__MASK                           0x00000100U
#define ATLC_LC_CTRL8__TCM_ATLC_BYP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000100U) >> 8)
#define ATLC_LC_CTRL8__TCM_ATLC_BYP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00000100U)
#define ATLC_LC_CTRL8__TCM_ATLC_BYP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | (((uint32_t)(src) <<\
                    8) & 0x00000100U)
#define ATLC_LC_CTRL8__TCM_ATLC_BYP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00000100U)))
#define ATLC_LC_CTRL8__TCM_ATLC_BYP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | ((uint32_t)(1) << 8)
#define ATLC_LC_CTRL8__TCM_ATLC_BYP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | ((uint32_t)(0) << 8)
#define ATLC_LC_CTRL8__TCM_ATLC_BYP__RESET_VALUE                    0x00000000U
/** @} */
#define ATLC_LC_CTRL8__TYPE                                            uint32_t
#define ATLC_LC_CTRL8__READ                                         0x000001ffU
#define ATLC_LC_CTRL8__WRITE                                        0x000001ffU
#define ATLC_LC_CTRL8__PRESERVED                                    0x00000000U
#define ATLC_LC_CTRL8__RESET_VALUE                                  0x00000001U

#endif /* __ATLC_LC_CTRL8_MACRO__ */

/** @} end of lc_ctrl8 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_ctrl9 */
/**
 * @defgroup at_lc_regs_core_lc_ctrl9 lc_ctrl9
 * @brief Contains register fields associated with lc_ctrl9. definitions.
 * @{
 */
#ifndef __ATLC_LC_CTRL9_MACRO__
#define __ATLC_LC_CTRL9_MACRO__

/* macros for field fr_us_cntr_corr_en */
/**
 * @defgroup at_lc_regs_core_fr_us_cntr_corr_en_field fr_us_cntr_corr_en_field
 * @brief macros for field fr_us_cntr_corr_en
 * @details delta value to be added to fr_us_corr
 * @{
 */
#define ATLC_LC_CTRL9__FR_US_CNTR_CORR_EN__SHIFT                              0
#define ATLC_LC_CTRL9__FR_US_CNTR_CORR_EN__WIDTH                              1
#define ATLC_LC_CTRL9__FR_US_CNTR_CORR_EN__MASK                     0x00000001U
#define ATLC_LC_CTRL9__FR_US_CNTR_CORR_EN__READ(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_LC_CTRL9__FR_US_CNTR_CORR_EN__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_LC_CTRL9__FR_US_CNTR_CORR_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_LC_CTRL9__FR_US_CNTR_CORR_EN__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_LC_CTRL9__FR_US_CNTR_CORR_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_CTRL9__FR_US_CNTR_CORR_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_CTRL9__FR_US_CNTR_CORR_EN__RESET_VALUE              0x00000000U
/** @} */
#define ATLC_LC_CTRL9__TYPE                                            uint32_t
#define ATLC_LC_CTRL9__READ                                         0x00000001U
#define ATLC_LC_CTRL9__WRITE                                        0x00000001U
#define ATLC_LC_CTRL9__PRESERVED                                    0x00000000U
#define ATLC_LC_CTRL9__RESET_VALUE                                  0x00000000U

#endif /* __ATLC_LC_CTRL9_MACRO__ */

/** @} end of lc_ctrl9 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_ctrl10 */
/**
 * @defgroup at_lc_regs_core_lc_ctrl10 lc_ctrl10
 * @brief Contains register fields associated with lc_ctrl10. definitions.
 * @{
 */
#ifndef __ATLC_LC_CTRL10_MACRO__
#define __ATLC_LC_CTRL10_MACRO__

/* macros for field fr_us_cntr_corr */
/**
 * @defgroup at_lc_regs_core_fr_us_cntr_corr_field fr_us_cntr_corr_field
 * @brief macros for field fr_us_cntr_corr
 * @details delta value to be added to fr_us_corr
 * @{
 */
#define ATLC_LC_CTRL10__FR_US_CNTR_CORR__SHIFT                                0
#define ATLC_LC_CTRL10__FR_US_CNTR_CORR__WIDTH                               32
#define ATLC_LC_CTRL10__FR_US_CNTR_CORR__MASK                       0xffffffffU
#define ATLC_LC_CTRL10__FR_US_CNTR_CORR__READ(src) \
                    ((uint32_t)(src)\
                    & 0xffffffffU)
#define ATLC_LC_CTRL10__FR_US_CNTR_CORR__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0xffffffffU)
#define ATLC_LC_CTRL10__FR_US_CNTR_CORR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_LC_CTRL10__FR_US_CNTR_CORR__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_LC_CTRL10__FR_US_CNTR_CORR__RESET_VALUE                0x00000000U
/** @} */
#define ATLC_LC_CTRL10__TYPE                                           uint32_t
#define ATLC_LC_CTRL10__READ                                        0xffffffffU
#define ATLC_LC_CTRL10__WRITE                                       0xffffffffU
#define ATLC_LC_CTRL10__PRESERVED                                   0x00000000U
#define ATLC_LC_CTRL10__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_LC_CTRL10_MACRO__ */

/** @} end of lc_ctrl10 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_ctrl11 */
/**
 * @defgroup at_lc_regs_core_lc_ctrl11 lc_ctrl11
 * @brief Contains register fields associated with lc_ctrl11. definitions.
 * @{
 */
#ifndef __ATLC_LC_CTRL11_MACRO__
#define __ATLC_LC_CTRL11_MACRO__

/* macros for field tx_ack_to */
/**
 * @defgroup at_lc_regs_core_tx_ack_to_field tx_ack_to_field
 * @brief macros for field tx_ack_to
 * @details tx acknowledgment timeout in micro seconds supported for flexMAC.
 * @{
 */
#define ATLC_LC_CTRL11__TX_ACK_TO__SHIFT                                      0
#define ATLC_LC_CTRL11__TX_ACK_TO__WIDTH                                      8
#define ATLC_LC_CTRL11__TX_ACK_TO__MASK                             0x000000ffU
#define ATLC_LC_CTRL11__TX_ACK_TO__READ(src)    ((uint32_t)(src) & 0x000000ffU)
#define ATLC_LC_CTRL11__TX_ACK_TO__WRITE(src)   ((uint32_t)(src) & 0x000000ffU)
#define ATLC_LC_CTRL11__TX_ACK_TO__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_LC_CTRL11__TX_ACK_TO__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_LC_CTRL11__TX_ACK_TO__RESET_VALUE                      0x000000c8U
/** @} */
#define ATLC_LC_CTRL11__TYPE                                           uint32_t
#define ATLC_LC_CTRL11__READ                                        0x000000ffU
#define ATLC_LC_CTRL11__WRITE                                       0x000000ffU
#define ATLC_LC_CTRL11__PRESERVED                                   0x00000000U
#define ATLC_LC_CTRL11__RESET_VALUE                                 0x000000c8U

#endif /* __ATLC_LC_CTRL11_MACRO__ */

/** @} end of lc_ctrl11 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_fmac_ctrl0 */
/**
 * @defgroup at_lc_regs_core_lc_fmac_ctrl0 lc_fmac_ctrl0
 * @brief Contains register fields associated with lc_fmac_ctrl0. definitions.
 * @{
 */
#ifndef __ATLC_LC_FMAC_CTRL0_MACRO__
#define __ATLC_LC_FMAC_CTRL0_MACRO__

/* macros for field at_lc_md */
/**
 * @defgroup at_lc_regs_core_at_lc_md_field at_lc_md_field
 * @brief macros for field at_lc_md
 * @details 1 => use atmosic lc, 0 => use ceva lc supported only for chip with both atlc and ceva.
 * @{
 */
#define ATLC_LC_FMAC_CTRL0__AT_LC_MD__SHIFT                                   0
#define ATLC_LC_FMAC_CTRL0__AT_LC_MD__WIDTH                                   1
#define ATLC_LC_FMAC_CTRL0__AT_LC_MD__MASK                          0x00000001U
#define ATLC_LC_FMAC_CTRL0__AT_LC_MD__READ(src) ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_FMAC_CTRL0__AT_LC_MD__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_LC_FMAC_CTRL0__AT_LC_MD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_LC_FMAC_CTRL0__AT_LC_MD__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_LC_FMAC_CTRL0__AT_LC_MD__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_FMAC_CTRL0__AT_LC_MD__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_FMAC_CTRL0__AT_LC_MD__RESET_VALUE                   0x00000001U
/** @} */

/* macros for field op_md */
/**
 * @defgroup at_lc_regs_core_op_md_field op_md_field
 * @brief macros for field op_md
 * @details operation mode 1 => host or PRX, 0 => device or PTX supported for flexMAC set to 0 for BLE/154.
 * @{
 */
#define ATLC_LC_FMAC_CTRL0__OP_MD__SHIFT                                      1
#define ATLC_LC_FMAC_CTRL0__OP_MD__WIDTH                                      1
#define ATLC_LC_FMAC_CTRL0__OP_MD__MASK                             0x00000002U
#define ATLC_LC_FMAC_CTRL0__OP_MD__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000002U) >> 1)
#define ATLC_LC_FMAC_CTRL0__OP_MD__WRITE(src) \
                    (((uint32_t)(src)\
                    << 1) & 0x00000002U)
#define ATLC_LC_FMAC_CTRL0__OP_MD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | (((uint32_t)(src) <<\
                    1) & 0x00000002U)
#define ATLC_LC_FMAC_CTRL0__OP_MD__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 1) & ~0x00000002U)))
#define ATLC_LC_FMAC_CTRL0__OP_MD__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(1) << 1)
#define ATLC_LC_FMAC_CTRL0__OP_MD__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(0) << 1)
#define ATLC_LC_FMAC_CTRL0__OP_MD__RESET_VALUE                      0x00000000U
/** @} */

/* macros for field flw_md */
/**
 * @defgroup at_lc_regs_core_flw_md_field flw_md_field
 * @brief macros for field flw_md
 * @details flow cmode 1 => enhanced flexMAC, 0 => basic flexMAC set to 1 for BLE/154.
 * @{
 */
#define ATLC_LC_FMAC_CTRL0__FLW_MD__SHIFT                                     2
#define ATLC_LC_FMAC_CTRL0__FLW_MD__WIDTH                                     1
#define ATLC_LC_FMAC_CTRL0__FLW_MD__MASK                            0x00000004U
#define ATLC_LC_FMAC_CTRL0__FLW_MD__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000004U) >> 2)
#define ATLC_LC_FMAC_CTRL0__FLW_MD__WRITE(src) \
                    (((uint32_t)(src)\
                    << 2) & 0x00000004U)
#define ATLC_LC_FMAC_CTRL0__FLW_MD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | (((uint32_t)(src) <<\
                    2) & 0x00000004U)
#define ATLC_LC_FMAC_CTRL0__FLW_MD__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 2) & ~0x00000004U)))
#define ATLC_LC_FMAC_CTRL0__FLW_MD__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(1) << 2)
#define ATLC_LC_FMAC_CTRL0__FLW_MD__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(0) << 2)
#define ATLC_LC_FMAC_CTRL0__FLW_MD__RESET_VALUE                     0x00000000U
/** @} */

/* macros for field dscr_en */
/**
 * @defgroup at_lc_regs_core_dscr_en_field dscr_en_field
 * @brief macros for field dscr_en
 * @details enable tx and rx descriptor decode mode.
 * @{
 */
#define ATLC_LC_FMAC_CTRL0__DSCR_EN__SHIFT                                    3
#define ATLC_LC_FMAC_CTRL0__DSCR_EN__WIDTH                                    1
#define ATLC_LC_FMAC_CTRL0__DSCR_EN__MASK                           0x00000008U
#define ATLC_LC_FMAC_CTRL0__DSCR_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000008U) >> 3)
#define ATLC_LC_FMAC_CTRL0__DSCR_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 3) & 0x00000008U)
#define ATLC_LC_FMAC_CTRL0__DSCR_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | (((uint32_t)(src) <<\
                    3) & 0x00000008U)
#define ATLC_LC_FMAC_CTRL0__DSCR_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 3) & ~0x00000008U)))
#define ATLC_LC_FMAC_CTRL0__DSCR_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | ((uint32_t)(1) << 3)
#define ATLC_LC_FMAC_CTRL0__DSCR_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | ((uint32_t)(0) << 3)
#define ATLC_LC_FMAC_CTRL0__DSCR_EN__RESET_VALUE                    0x00000000U
/** @} */

/* macros for field air_tm_stmp */
/**
 * @defgroup at_lc_regs_core_air_tm_stmp_field air_tm_stmp_field
 * @brief macros for field air_tm_stmp
 * @details air time stamp mode where all times are defined relative to on air time.
 * @{
 */
#define ATLC_LC_FMAC_CTRL0__AIR_TM_STMP__SHIFT                                4
#define ATLC_LC_FMAC_CTRL0__AIR_TM_STMP__WIDTH                                1
#define ATLC_LC_FMAC_CTRL0__AIR_TM_STMP__MASK                       0x00000010U
#define ATLC_LC_FMAC_CTRL0__AIR_TM_STMP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000010U) >> 4)
#define ATLC_LC_FMAC_CTRL0__AIR_TM_STMP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 4) & 0x00000010U)
#define ATLC_LC_FMAC_CTRL0__AIR_TM_STMP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | (((uint32_t)(src) <<\
                    4) & 0x00000010U)
#define ATLC_LC_FMAC_CTRL0__AIR_TM_STMP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 4) & ~0x00000010U)))
#define ATLC_LC_FMAC_CTRL0__AIR_TM_STMP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | ((uint32_t)(1) << 4)
#define ATLC_LC_FMAC_CTRL0__AIR_TM_STMP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | ((uint32_t)(0) << 4)
#define ATLC_LC_FMAC_CTRL0__AIR_TM_STMP__RESET_VALUE                0x00000000U
/** @} */

/* macros for field rsrvd */
/**
 * @defgroup at_lc_regs_core_rsrvd_field rsrvd_field
 * @brief macros for field rsrvd
 * @details reserverd
 * @{
 */
#define ATLC_LC_FMAC_CTRL0__RSRVD__SHIFT                                      5
#define ATLC_LC_FMAC_CTRL0__RSRVD__WIDTH                                      1
#define ATLC_LC_FMAC_CTRL0__RSRVD__MASK                             0x00000020U
#define ATLC_LC_FMAC_CTRL0__RSRVD__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000020U) >> 5)
#define ATLC_LC_FMAC_CTRL0__RSRVD__WRITE(src) \
                    (((uint32_t)(src)\
                    << 5) & 0x00000020U)
#define ATLC_LC_FMAC_CTRL0__RSRVD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | (((uint32_t)(src) <<\
                    5) & 0x00000020U)
#define ATLC_LC_FMAC_CTRL0__RSRVD__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 5) & ~0x00000020U)))
#define ATLC_LC_FMAC_CTRL0__RSRVD__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | ((uint32_t)(1) << 5)
#define ATLC_LC_FMAC_CTRL0__RSRVD__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | ((uint32_t)(0) << 5)
#define ATLC_LC_FMAC_CTRL0__RSRVD__RESET_VALUE                      0x00000000U
/** @} */

/* macros for field aa_en */
/**
 * @defgroup at_lc_regs_core_aa_en_field aa_en_field
 * @brief macros for field aa_en
 * @details enable autoacknowledgment supported for flexMAC.
 * @{
 */
#define ATLC_LC_FMAC_CTRL0__AA_EN__SHIFT                                      6
#define ATLC_LC_FMAC_CTRL0__AA_EN__WIDTH                                      1
#define ATLC_LC_FMAC_CTRL0__AA_EN__MASK                             0x00000040U
#define ATLC_LC_FMAC_CTRL0__AA_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000040U) >> 6)
#define ATLC_LC_FMAC_CTRL0__AA_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 6) & 0x00000040U)
#define ATLC_LC_FMAC_CTRL0__AA_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | (((uint32_t)(src) <<\
                    6) & 0x00000040U)
#define ATLC_LC_FMAC_CTRL0__AA_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 6) & ~0x00000040U)))
#define ATLC_LC_FMAC_CTRL0__AA_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | ((uint32_t)(1) << 6)
#define ATLC_LC_FMAC_CTRL0__AA_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | ((uint32_t)(0) << 6)
#define ATLC_LC_FMAC_CTRL0__AA_EN__RESET_VALUE                      0x00000001U
/** @} */

/* macros for field rt_en */
/**
 * @defgroup at_lc_regs_core_rt_en_field rt_en_field
 * @brief macros for field rt_en
 * @details enable retransmission supported for flexMAC.
 * @{
 */
#define ATLC_LC_FMAC_CTRL0__RT_EN__SHIFT                                      7
#define ATLC_LC_FMAC_CTRL0__RT_EN__WIDTH                                      1
#define ATLC_LC_FMAC_CTRL0__RT_EN__MASK                             0x00000080U
#define ATLC_LC_FMAC_CTRL0__RT_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000080U) >> 7)
#define ATLC_LC_FMAC_CTRL0__RT_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 7) & 0x00000080U)
#define ATLC_LC_FMAC_CTRL0__RT_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | (((uint32_t)(src) <<\
                    7) & 0x00000080U)
#define ATLC_LC_FMAC_CTRL0__RT_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 7) & ~0x00000080U)))
#define ATLC_LC_FMAC_CTRL0__RT_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(1) << 7)
#define ATLC_LC_FMAC_CTRL0__RT_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(0) << 7)
#define ATLC_LC_FMAC_CTRL0__RT_EN__RESET_VALUE                      0x00000001U
/** @} */

/* macros for field wht_en */
/**
 * @defgroup at_lc_regs_core_wht_en_field wht_en_field
 * @brief macros for field wht_en
 * @details enable whitenning no affect when descriptor mode is enabled.
 * @{
 */
#define ATLC_LC_FMAC_CTRL0__WHT_EN__SHIFT                                     8
#define ATLC_LC_FMAC_CTRL0__WHT_EN__WIDTH                                     1
#define ATLC_LC_FMAC_CTRL0__WHT_EN__MASK                            0x00000100U
#define ATLC_LC_FMAC_CTRL0__WHT_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000100U) >> 8)
#define ATLC_LC_FMAC_CTRL0__WHT_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00000100U)
#define ATLC_LC_FMAC_CTRL0__WHT_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | (((uint32_t)(src) <<\
                    8) & 0x00000100U)
#define ATLC_LC_FMAC_CTRL0__WHT_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00000100U)))
#define ATLC_LC_FMAC_CTRL0__WHT_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | ((uint32_t)(1) << 8)
#define ATLC_LC_FMAC_CTRL0__WHT_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | ((uint32_t)(0) << 8)
#define ATLC_LC_FMAC_CTRL0__WHT_EN__RESET_VALUE                     0x00000001U
/** @} */

/* macros for field crypt_md */
/**
 * @defgroup at_lc_regs_core_crypt_md_field crypt_md_field
 * @brief macros for field crypt_md
 * @details crypto mode 000 => no crypto, 101 => CTR
 * @{
 */
#define ATLC_LC_FMAC_CTRL0__CRYPT_MD__SHIFT                                   9
#define ATLC_LC_FMAC_CTRL0__CRYPT_MD__WIDTH                                   3
#define ATLC_LC_FMAC_CTRL0__CRYPT_MD__MASK                          0x00000e00U
#define ATLC_LC_FMAC_CTRL0__CRYPT_MD__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000e00U) >> 9)
#define ATLC_LC_FMAC_CTRL0__CRYPT_MD__WRITE(src) \
                    (((uint32_t)(src)\
                    << 9) & 0x00000e00U)
#define ATLC_LC_FMAC_CTRL0__CRYPT_MD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000e00U) | (((uint32_t)(src) <<\
                    9) & 0x00000e00U)
#define ATLC_LC_FMAC_CTRL0__CRYPT_MD__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 9) & ~0x00000e00U)))
#define ATLC_LC_FMAC_CTRL0__CRYPT_MD__RESET_VALUE                   0x00000000U
/** @} */

/* macros for field sync_en */
/**
 * @defgroup at_lc_regs_core_sync_en_field sync_en_field
 * @brief macros for field sync_en
 * @details enable sync word 0 and/or sync word 1 set to 1 for BLE and 154 to use sync_wrd0. 2 sync words are used for flexMAC.
 * @{
 */
#define ATLC_LC_FMAC_CTRL0__SYNC_EN__SHIFT                                   12
#define ATLC_LC_FMAC_CTRL0__SYNC_EN__WIDTH                                    2
#define ATLC_LC_FMAC_CTRL0__SYNC_EN__MASK                           0x00003000U
#define ATLC_LC_FMAC_CTRL0__SYNC_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00003000U) >> 12)
#define ATLC_LC_FMAC_CTRL0__SYNC_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 12) & 0x00003000U)
#define ATLC_LC_FMAC_CTRL0__SYNC_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00003000U) | (((uint32_t)(src) <<\
                    12) & 0x00003000U)
#define ATLC_LC_FMAC_CTRL0__SYNC_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 12) & ~0x00003000U)))
#define ATLC_LC_FMAC_CTRL0__SYNC_EN__RESET_VALUE                    0x00000001U
/** @} */

/* macros for field crc_len */
/**
 * @defgroup at_lc_regs_core_crc_len_field crc_len_field
 * @brief macros for field crc_len
 * @details crc length in bytes - valid between 0 to 4 set to 3 for BLE and 2 for 154 set to 1 or 2 for flexMAC. 0 => crc insertion/check disabled.
 * @{
 */
#define ATLC_LC_FMAC_CTRL0__CRC_LEN__SHIFT                                   16
#define ATLC_LC_FMAC_CTRL0__CRC_LEN__WIDTH                                    3
#define ATLC_LC_FMAC_CTRL0__CRC_LEN__MASK                           0x00070000U
#define ATLC_LC_FMAC_CTRL0__CRC_LEN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00070000U) >> 16)
#define ATLC_LC_FMAC_CTRL0__CRC_LEN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00070000U)
#define ATLC_LC_FMAC_CTRL0__CRC_LEN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00070000U) | (((uint32_t)(src) <<\
                    16) & 0x00070000U)
#define ATLC_LC_FMAC_CTRL0__CRC_LEN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00070000U)))
#define ATLC_LC_FMAC_CTRL0__CRC_LEN__RESET_VALUE                    0x00000001U
/** @} */

/* macros for field addr_len */
/**
 * @defgroup at_lc_regs_core_addr_len_field addr_len_field
 * @brief macros for field addr_len
 * @details address length in bytes - valid between 0 to 1 set to 0 for BLE and 154. set to 0 to 1 for flexMAC.
 * @{
 */
#define ATLC_LC_FMAC_CTRL0__ADDR_LEN__SHIFT                                  20
#define ATLC_LC_FMAC_CTRL0__ADDR_LEN__WIDTH                                   3
#define ATLC_LC_FMAC_CTRL0__ADDR_LEN__MASK                          0x00700000U
#define ATLC_LC_FMAC_CTRL0__ADDR_LEN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00700000U) >> 20)
#define ATLC_LC_FMAC_CTRL0__ADDR_LEN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 20) & 0x00700000U)
#define ATLC_LC_FMAC_CTRL0__ADDR_LEN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00700000U) | (((uint32_t)(src) <<\
                    20) & 0x00700000U)
#define ATLC_LC_FMAC_CTRL0__ADDR_LEN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 20) & ~0x00700000U)))
#define ATLC_LC_FMAC_CTRL0__ADDR_LEN__RESET_VALUE                   0x00000001U
/** @} */

/* macros for field sync_len */
/**
 * @defgroup at_lc_regs_core_sync_len_field sync_len_field
 * @brief macros for field sync_len
 * @details sync word length in bytes - valid between 2 to 4 set to 4 for BLE AA and 1 for 154 SFD. set to 2-4 for flexMAC.
 * @{
 */
#define ATLC_LC_FMAC_CTRL0__SYNC_LEN__SHIFT                                  24
#define ATLC_LC_FMAC_CTRL0__SYNC_LEN__WIDTH                                   3
#define ATLC_LC_FMAC_CTRL0__SYNC_LEN__MASK                          0x07000000U
#define ATLC_LC_FMAC_CTRL0__SYNC_LEN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x07000000U) >> 24)
#define ATLC_LC_FMAC_CTRL0__SYNC_LEN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 24) & 0x07000000U)
#define ATLC_LC_FMAC_CTRL0__SYNC_LEN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x07000000U) | (((uint32_t)(src) <<\
                    24) & 0x07000000U)
#define ATLC_LC_FMAC_CTRL0__SYNC_LEN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 24) & ~0x07000000U)))
#define ATLC_LC_FMAC_CTRL0__SYNC_LEN__RESET_VALUE                   0x00000004U
/** @} */

/* macros for field hdr_ftch_dly_en */
/**
 * @defgroup at_lc_regs_core_hdr_ftch_dly_en_field hdr_ftch_dly_en_field
 * @brief macros for field hdr_ftch_dly_en
 * @details enable feature to delay fetching of header till sync word transmission
 * @{
 */
#define ATLC_LC_FMAC_CTRL0__HDR_FTCH_DLY_EN__SHIFT                           27
#define ATLC_LC_FMAC_CTRL0__HDR_FTCH_DLY_EN__WIDTH                            1
#define ATLC_LC_FMAC_CTRL0__HDR_FTCH_DLY_EN__MASK                   0x08000000U
#define ATLC_LC_FMAC_CTRL0__HDR_FTCH_DLY_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x08000000U) >> 27)
#define ATLC_LC_FMAC_CTRL0__HDR_FTCH_DLY_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 27) & 0x08000000U)
#define ATLC_LC_FMAC_CTRL0__HDR_FTCH_DLY_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x08000000U) | (((uint32_t)(src) <<\
                    27) & 0x08000000U)
#define ATLC_LC_FMAC_CTRL0__HDR_FTCH_DLY_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 27) & ~0x08000000U)))
#define ATLC_LC_FMAC_CTRL0__HDR_FTCH_DLY_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x08000000U) | ((uint32_t)(1) << 27)
#define ATLC_LC_FMAC_CTRL0__HDR_FTCH_DLY_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x08000000U) | ((uint32_t)(0) << 27)
#define ATLC_LC_FMAC_CTRL0__HDR_FTCH_DLY_EN__RESET_VALUE            0x00000001U
/** @} */

/* macros for field aes_16MHz_en */
/**
 * @defgroup at_lc_regs_core_aes_16MHz_en_field aes_16MHz_en_field
 * @brief macros for field aes_16MHz_en
 * @details enable aes to run at 16 MHz
 * @{
 */
#define ATLC_LC_FMAC_CTRL0__AES_16MHZ_EN__SHIFT                              28
#define ATLC_LC_FMAC_CTRL0__AES_16MHZ_EN__WIDTH                               1
#define ATLC_LC_FMAC_CTRL0__AES_16MHZ_EN__MASK                      0x10000000U
#define ATLC_LC_FMAC_CTRL0__AES_16MHZ_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x10000000U) >> 28)
#define ATLC_LC_FMAC_CTRL0__AES_16MHZ_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 28) & 0x10000000U)
#define ATLC_LC_FMAC_CTRL0__AES_16MHZ_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x10000000U) | (((uint32_t)(src) <<\
                    28) & 0x10000000U)
#define ATLC_LC_FMAC_CTRL0__AES_16MHZ_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 28) & ~0x10000000U)))
#define ATLC_LC_FMAC_CTRL0__AES_16MHZ_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x10000000U) | ((uint32_t)(1) << 28)
#define ATLC_LC_FMAC_CTRL0__AES_16MHZ_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x10000000U) | ((uint32_t)(0) << 28)
#define ATLC_LC_FMAC_CTRL0__AES_16MHZ_EN__RESET_VALUE               0x00000001U
/** @} */

/* macros for field use_hw_syncwrd_crc */
/**
 * @defgroup at_lc_regs_core_use_hw_syncwrd_crc_field use_hw_syncwrd_crc_field
 * @brief macros for field use_hw_syncwrd_crc
 * @details set 1 to have HW compute sync word crc.
 * @{
 */
#define ATLC_LC_FMAC_CTRL0__USE_HW_SYNCWRD_CRC__SHIFT                        29
#define ATLC_LC_FMAC_CTRL0__USE_HW_SYNCWRD_CRC__WIDTH                         1
#define ATLC_LC_FMAC_CTRL0__USE_HW_SYNCWRD_CRC__MASK                0x20000000U
#define ATLC_LC_FMAC_CTRL0__USE_HW_SYNCWRD_CRC__READ(src) \
                    (((uint32_t)(src)\
                    & 0x20000000U) >> 29)
#define ATLC_LC_FMAC_CTRL0__USE_HW_SYNCWRD_CRC__WRITE(src) \
                    (((uint32_t)(src)\
                    << 29) & 0x20000000U)
#define ATLC_LC_FMAC_CTRL0__USE_HW_SYNCWRD_CRC__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x20000000U) | (((uint32_t)(src) <<\
                    29) & 0x20000000U)
#define ATLC_LC_FMAC_CTRL0__USE_HW_SYNCWRD_CRC__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 29) & ~0x20000000U)))
#define ATLC_LC_FMAC_CTRL0__USE_HW_SYNCWRD_CRC__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x20000000U) | ((uint32_t)(1) << 29)
#define ATLC_LC_FMAC_CTRL0__USE_HW_SYNCWRD_CRC__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x20000000U) | ((uint32_t)(0) << 29)
#define ATLC_LC_FMAC_CTRL0__USE_HW_SYNCWRD_CRC__RESET_VALUE         0x00000000U
/** @} */
#define ATLC_LC_FMAC_CTRL0__TYPE                                       uint32_t
#define ATLC_LC_FMAC_CTRL0__READ                                    0x3f773fffU
#define ATLC_LC_FMAC_CTRL0__WRITE                                   0x3f773fffU
#define ATLC_LC_FMAC_CTRL0__PRESERVED                               0x00000000U
#define ATLC_LC_FMAC_CTRL0__RESET_VALUE                             0x1c1111c1U

#endif /* __ATLC_LC_FMAC_CTRL0_MACRO__ */

/** @} end of lc_fmac_ctrl0 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_fmac_ctrl1 */
/**
 * @defgroup at_lc_regs_core_lc_fmac_ctrl1 lc_fmac_ctrl1
 * @brief Contains register fields associated with lc_fmac_ctrl1. definitions.
 * @{
 */
#ifndef __ATLC_LC_FMAC_CTRL1_MACRO__
#define __ATLC_LC_FMAC_CTRL1_MACRO__

/* macros for field pyld_len */
/**
 * @defgroup at_lc_regs_core_pyld_len_field pyld_len_field
 * @brief macros for field pyld_len
 * @details payload length in bytes used in basic mode, ignored in enhanced mode since it is specified in header supported for flexMAC.
 * @{
 */
#define ATLC_LC_FMAC_CTRL1__PYLD_LEN__SHIFT                                   0
#define ATLC_LC_FMAC_CTRL1__PYLD_LEN__WIDTH                                   8
#define ATLC_LC_FMAC_CTRL1__PYLD_LEN__MASK                          0x000000ffU
#define ATLC_LC_FMAC_CTRL1__PYLD_LEN__READ(src) ((uint32_t)(src) & 0x000000ffU)
#define ATLC_LC_FMAC_CTRL1__PYLD_LEN__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_LC_FMAC_CTRL1__PYLD_LEN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_LC_FMAC_CTRL1__PYLD_LEN__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_LC_FMAC_CTRL1__PYLD_LEN__RESET_VALUE                   0x00000020U
/** @} */

/* macros for field pyld_len_wdth */
/**
 * @defgroup at_lc_regs_core_pyld_len_wdth_field pyld_len_wdth_field
 * @brief macros for field pyld_len_wdth
 * @details width of payload length field in the header used in enhanced mode [6-8] supported for flexMAC.
 * @{
 */
#define ATLC_LC_FMAC_CTRL1__PYLD_LEN_WDTH__SHIFT                              8
#define ATLC_LC_FMAC_CTRL1__PYLD_LEN_WDTH__WIDTH                              4
#define ATLC_LC_FMAC_CTRL1__PYLD_LEN_WDTH__MASK                     0x00000f00U
#define ATLC_LC_FMAC_CTRL1__PYLD_LEN_WDTH__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000f00U) >> 8)
#define ATLC_LC_FMAC_CTRL1__PYLD_LEN_WDTH__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00000f00U)
#define ATLC_LC_FMAC_CTRL1__PYLD_LEN_WDTH__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000f00U) | (((uint32_t)(src) <<\
                    8) & 0x00000f00U)
#define ATLC_LC_FMAC_CTRL1__PYLD_LEN_WDTH__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00000f00U)))
#define ATLC_LC_FMAC_CTRL1__PYLD_LEN_WDTH__RESET_VALUE              0x00000006U
/** @} */

/* macros for field rsrvd */
/**
 * @defgroup at_lc_regs_core_rsrvd_field rsrvd_field
 * @brief macros for field rsrvd
 * @details reserverd
 * @{
 */
#define ATLC_LC_FMAC_CTRL1__RSRVD__SHIFT                                     12
#define ATLC_LC_FMAC_CTRL1__RSRVD__WIDTH                                      1
#define ATLC_LC_FMAC_CTRL1__RSRVD__MASK                             0x00001000U
#define ATLC_LC_FMAC_CTRL1__RSRVD__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00001000U) >> 12)
#define ATLC_LC_FMAC_CTRL1__RSRVD__WRITE(src) \
                    (((uint32_t)(src)\
                    << 12) & 0x00001000U)
#define ATLC_LC_FMAC_CTRL1__RSRVD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00001000U) | (((uint32_t)(src) <<\
                    12) & 0x00001000U)
#define ATLC_LC_FMAC_CTRL1__RSRVD__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 12) & ~0x00001000U)))
#define ATLC_LC_FMAC_CTRL1__RSRVD__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00001000U) | ((uint32_t)(1) << 12)
#define ATLC_LC_FMAC_CTRL1__RSRVD__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00001000U) | ((uint32_t)(0) << 12)
#define ATLC_LC_FMAC_CTRL1__RSRVD__RESET_VALUE                      0x00000000U
/** @} */

/* macros for field crypt_aeskey_byt_rvrt */
/**
 * @defgroup at_lc_regs_core_crypt_aeskey_byt_rvrt_field crypt_aeskey_byt_rvrt_field
 * @brief macros for field crypt_aeskey_byt_rvrt
 * @details revert the byte order within aeskey word
 * @{
 */
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_BYT_RVRT__SHIFT                     13
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_BYT_RVRT__WIDTH                      1
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_BYT_RVRT__MASK             0x00002000U
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_BYT_RVRT__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00002000U) >> 13)
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_BYT_RVRT__WRITE(src) \
                    (((uint32_t)(src)\
                    << 13) & 0x00002000U)
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_BYT_RVRT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00002000U) | (((uint32_t)(src) <<\
                    13) & 0x00002000U)
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_BYT_RVRT__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 13) & ~0x00002000U)))
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_BYT_RVRT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00002000U) | ((uint32_t)(1) << 13)
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_BYT_RVRT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00002000U) | ((uint32_t)(0) << 13)
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_BYT_RVRT__RESET_VALUE      0x00000001U
/** @} */

/* macros for field crypt_aeskey_wrd4_rvrt */
/**
 * @defgroup at_lc_regs_core_crypt_aeskey_wrd4_rvrt_field crypt_aeskey_wrd4_rvrt_field
 * @brief macros for field crypt_aeskey_wrd4_rvrt
 * @details revert the 4 words order of aeskey
 * @{
 */
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_WRD4_RVRT__SHIFT                    14
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_WRD4_RVRT__WIDTH                     1
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_WRD4_RVRT__MASK            0x00004000U
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_WRD4_RVRT__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00004000U) >> 14)
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_WRD4_RVRT__WRITE(src) \
                    (((uint32_t)(src)\
                    << 14) & 0x00004000U)
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_WRD4_RVRT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00004000U) | (((uint32_t)(src) <<\
                    14) & 0x00004000U)
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_WRD4_RVRT__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 14) & ~0x00004000U)))
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_WRD4_RVRT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00004000U) | ((uint32_t)(1) << 14)
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_WRD4_RVRT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00004000U) | ((uint32_t)(0) << 14)
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_WRD4_RVRT__RESET_VALUE     0x00000001U
/** @} */

/* macros for field crypt_aeskey_wrd8_rvrt */
/**
 * @defgroup at_lc_regs_core_crypt_aeskey_wrd8_rvrt_field crypt_aeskey_wrd8_rvrt_field
 * @brief macros for field crypt_aeskey_wrd8_rvrt
 * @details revert the 8 words order of aeskey
 * @{
 */
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_WRD8_RVRT__SHIFT                    15
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_WRD8_RVRT__WIDTH                     1
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_WRD8_RVRT__MASK            0x00008000U
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_WRD8_RVRT__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00008000U) >> 15)
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_WRD8_RVRT__WRITE(src) \
                    (((uint32_t)(src)\
                    << 15) & 0x00008000U)
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_WRD8_RVRT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | (((uint32_t)(src) <<\
                    15) & 0x00008000U)
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_WRD8_RVRT__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 15) & ~0x00008000U)))
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_WRD8_RVRT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | ((uint32_t)(1) << 15)
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_WRD8_RVRT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | ((uint32_t)(0) << 15)
#define ATLC_LC_FMAC_CTRL1__CRYPT_AESKEY_WRD8_RVRT__RESET_VALUE     0x00000000U
/** @} */

/* macros for field max_rx_pyld_len */
/**
 * @defgroup at_lc_regs_core_max_rx_pyld_len_field max_rx_pyld_len_field
 * @brief macros for field max_rx_pyld_len
 * @details maximum allowed received packet length
 * @{
 */
#define ATLC_LC_FMAC_CTRL1__MAX_RX_PYLD_LEN__SHIFT                           16
#define ATLC_LC_FMAC_CTRL1__MAX_RX_PYLD_LEN__WIDTH                            8
#define ATLC_LC_FMAC_CTRL1__MAX_RX_PYLD_LEN__MASK                   0x00ff0000U
#define ATLC_LC_FMAC_CTRL1__MAX_RX_PYLD_LEN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_LC_FMAC_CTRL1__MAX_RX_PYLD_LEN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00ff0000U)
#define ATLC_LC_FMAC_CTRL1__MAX_RX_PYLD_LEN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00ff0000U) | (((uint32_t)(src) <<\
                    16) & 0x00ff0000U)
#define ATLC_LC_FMAC_CTRL1__MAX_RX_PYLD_LEN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00ff0000U)))
#define ATLC_LC_FMAC_CTRL1__MAX_RX_PYLD_LEN__RESET_VALUE            0x000000ffU
/** @} */

/* macros for field crypt_iv_byt_rvrt */
/**
 * @defgroup at_lc_regs_core_crypt_iv_byt_rvrt_field crypt_iv_byt_rvrt_field
 * @brief macros for field crypt_iv_byt_rvrt
 * @details revert the byte order within iv word
 * @{
 */
#define ATLC_LC_FMAC_CTRL1__CRYPT_IV_BYT_RVRT__SHIFT                         24
#define ATLC_LC_FMAC_CTRL1__CRYPT_IV_BYT_RVRT__WIDTH                          1
#define ATLC_LC_FMAC_CTRL1__CRYPT_IV_BYT_RVRT__MASK                 0x01000000U
#define ATLC_LC_FMAC_CTRL1__CRYPT_IV_BYT_RVRT__READ(src) \
                    (((uint32_t)(src)\
                    & 0x01000000U) >> 24)
#define ATLC_LC_FMAC_CTRL1__CRYPT_IV_BYT_RVRT__WRITE(src) \
                    (((uint32_t)(src)\
                    << 24) & 0x01000000U)
#define ATLC_LC_FMAC_CTRL1__CRYPT_IV_BYT_RVRT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x01000000U) | (((uint32_t)(src) <<\
                    24) & 0x01000000U)
#define ATLC_LC_FMAC_CTRL1__CRYPT_IV_BYT_RVRT__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 24) & ~0x01000000U)))
#define ATLC_LC_FMAC_CTRL1__CRYPT_IV_BYT_RVRT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x01000000U) | ((uint32_t)(1) << 24)
#define ATLC_LC_FMAC_CTRL1__CRYPT_IV_BYT_RVRT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x01000000U) | ((uint32_t)(0) << 24)
#define ATLC_LC_FMAC_CTRL1__CRYPT_IV_BYT_RVRT__RESET_VALUE          0x00000000U
/** @} */

/* macros for field crypt_iv_wrd2_rvrt */
/**
 * @defgroup at_lc_regs_core_crypt_iv_wrd2_rvrt_field crypt_iv_wrd2_rvrt_field
 * @brief macros for field crypt_iv_wrd2_rvrt
 * @details revert the 2 words order of iv
 * @{
 */
#define ATLC_LC_FMAC_CTRL1__CRYPT_IV_WRD2_RVRT__SHIFT                        25
#define ATLC_LC_FMAC_CTRL1__CRYPT_IV_WRD2_RVRT__WIDTH                         1
#define ATLC_LC_FMAC_CTRL1__CRYPT_IV_WRD2_RVRT__MASK                0x02000000U
#define ATLC_LC_FMAC_CTRL1__CRYPT_IV_WRD2_RVRT__READ(src) \
                    (((uint32_t)(src)\
                    & 0x02000000U) >> 25)
#define ATLC_LC_FMAC_CTRL1__CRYPT_IV_WRD2_RVRT__WRITE(src) \
                    (((uint32_t)(src)\
                    << 25) & 0x02000000U)
#define ATLC_LC_FMAC_CTRL1__CRYPT_IV_WRD2_RVRT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x02000000U) | (((uint32_t)(src) <<\
                    25) & 0x02000000U)
#define ATLC_LC_FMAC_CTRL1__CRYPT_IV_WRD2_RVRT__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 25) & ~0x02000000U)))
#define ATLC_LC_FMAC_CTRL1__CRYPT_IV_WRD2_RVRT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x02000000U) | ((uint32_t)(1) << 25)
#define ATLC_LC_FMAC_CTRL1__CRYPT_IV_WRD2_RVRT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x02000000U) | ((uint32_t)(0) << 25)
#define ATLC_LC_FMAC_CTRL1__CRYPT_IV_WRD2_RVRT__RESET_VALUE         0x00000000U
/** @} */

/* macros for field crc_plynml_en */
/**
 * @defgroup at_lc_regs_core_crc_plynml_en_field crc_plynml_en_field
 * @brief macros for field crc_plynml_en
 * @details enable programmable polynomial
 * @{
 */
#define ATLC_LC_FMAC_CTRL1__CRC_PLYNML_EN__SHIFT                             26
#define ATLC_LC_FMAC_CTRL1__CRC_PLYNML_EN__WIDTH                              1
#define ATLC_LC_FMAC_CTRL1__CRC_PLYNML_EN__MASK                     0x04000000U
#define ATLC_LC_FMAC_CTRL1__CRC_PLYNML_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x04000000U) >> 26)
#define ATLC_LC_FMAC_CTRL1__CRC_PLYNML_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 26) & 0x04000000U)
#define ATLC_LC_FMAC_CTRL1__CRC_PLYNML_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x04000000U) | (((uint32_t)(src) <<\
                    26) & 0x04000000U)
#define ATLC_LC_FMAC_CTRL1__CRC_PLYNML_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 26) & ~0x04000000U)))
#define ATLC_LC_FMAC_CTRL1__CRC_PLYNML_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x04000000U) | ((uint32_t)(1) << 26)
#define ATLC_LC_FMAC_CTRL1__CRC_PLYNML_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x04000000U) | ((uint32_t)(0) << 26)
#define ATLC_LC_FMAC_CTRL1__CRC_PLYNML_EN__RESET_VALUE              0x00000000U
/** @} */
#define ATLC_LC_FMAC_CTRL1__TYPE                                       uint32_t
#define ATLC_LC_FMAC_CTRL1__READ                                    0x07ffffffU
#define ATLC_LC_FMAC_CTRL1__WRITE                                   0x07ffffffU
#define ATLC_LC_FMAC_CTRL1__PRESERVED                               0x00000000U
#define ATLC_LC_FMAC_CTRL1__RESET_VALUE                             0x00ff6620U

#endif /* __ATLC_LC_FMAC_CTRL1_MACRO__ */

/** @} end of lc_fmac_ctrl1 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_fmac_ctrl2 */
/**
 * @defgroup at_lc_regs_core_lc_fmac_ctrl2 lc_fmac_ctrl2
 * @brief Contains register fields associated with lc_fmac_ctrl2. definitions.
 * @{
 */
#ifndef __ATLC_LC_FMAC_CTRL2_MACRO__
#define __ATLC_LC_FMAC_CTRL2_MACRO__

/* macros for field rx_to */
/**
 * @defgroup at_lc_regs_core_rx_to_field rx_to_field
 * @brief macros for field rx_to
 * @details receive window timeout in micro seconds no affect when descriptor mode is enabled. should not be set to 0.
 * @{
 */
#define ATLC_LC_FMAC_CTRL2__RX_TO__SHIFT                                      0
#define ATLC_LC_FMAC_CTRL2__RX_TO__WIDTH                                     32
#define ATLC_LC_FMAC_CTRL2__RX_TO__MASK                             0xffffffffU
#define ATLC_LC_FMAC_CTRL2__RX_TO__READ(src)    ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_FMAC_CTRL2__RX_TO__WRITE(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_FMAC_CTRL2__RX_TO__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_LC_FMAC_CTRL2__RX_TO__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_LC_FMAC_CTRL2__RX_TO__RESET_VALUE                      0x000001c2U
/** @} */
#define ATLC_LC_FMAC_CTRL2__TYPE                                       uint32_t
#define ATLC_LC_FMAC_CTRL2__READ                                    0xffffffffU
#define ATLC_LC_FMAC_CTRL2__WRITE                                   0xffffffffU
#define ATLC_LC_FMAC_CTRL2__PRESERVED                               0x00000000U
#define ATLC_LC_FMAC_CTRL2__RESET_VALUE                             0x000001c2U

#endif /* __ATLC_LC_FMAC_CTRL2_MACRO__ */

/** @} end of lc_fmac_ctrl2 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_fmac_ctrl3 */
/**
 * @defgroup at_lc_regs_core_lc_fmac_ctrl3 lc_fmac_ctrl3
 * @brief Contains register fields associated with lc_fmac_ctrl3. definitions.
 * @{
 */
#ifndef __ATLC_LC_FMAC_CTRL3_MACRO__
#define __ATLC_LC_FMAC_CTRL3_MACRO__

/* macros for field artd */
/**
 * @defgroup at_lc_regs_core_artd_field artd_field
 * @brief macros for field artd
 * @details auto retransmit delay in micro seconds supported for flexMAC. Should be set greater than sum(rtx_wait.rx_tx, rx_pwrup, rx_to)
 * @{
 */
#define ATLC_LC_FMAC_CTRL3__ARTD__SHIFT                                       0
#define ATLC_LC_FMAC_CTRL3__ARTD__WIDTH                                      16
#define ATLC_LC_FMAC_CTRL3__ARTD__MASK                              0x0000ffffU
#define ATLC_LC_FMAC_CTRL3__ARTD__READ(src)     ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_LC_FMAC_CTRL3__ARTD__WRITE(src)    ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_LC_FMAC_CTRL3__ARTD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_LC_FMAC_CTRL3__ARTD__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x0000ffffU)))
#define ATLC_LC_FMAC_CTRL3__ARTD__RESET_VALUE                       0x00000320U
/** @} */

/* macros for field artmx */
/**
 * @defgroup at_lc_regs_core_artmx_field artmx_field
 * @brief macros for field artmx
 * @details auto retransmit count for maximum number of retransmit supported for flexMAC.
 * @{
 */
#define ATLC_LC_FMAC_CTRL3__ARTMX__SHIFT                                     16
#define ATLC_LC_FMAC_CTRL3__ARTMX__WIDTH                                      8
#define ATLC_LC_FMAC_CTRL3__ARTMX__MASK                             0x00ff0000U
#define ATLC_LC_FMAC_CTRL3__ARTMX__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_LC_FMAC_CTRL3__ARTMX__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00ff0000U)
#define ATLC_LC_FMAC_CTRL3__ARTMX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00ff0000U) | (((uint32_t)(src) <<\
                    16) & 0x00ff0000U)
#define ATLC_LC_FMAC_CTRL3__ARTMX__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00ff0000U)))
#define ATLC_LC_FMAC_CTRL3__ARTMX__RESET_VALUE                      0x00000002U
/** @} */
#define ATLC_LC_FMAC_CTRL3__TYPE                                       uint32_t
#define ATLC_LC_FMAC_CTRL3__READ                                    0x00ffffffU
#define ATLC_LC_FMAC_CTRL3__WRITE                                   0x00ffffffU
#define ATLC_LC_FMAC_CTRL3__PRESERVED                               0x00000000U
#define ATLC_LC_FMAC_CTRL3__RESET_VALUE                             0x00020320U

#endif /* __ATLC_LC_FMAC_CTRL3_MACRO__ */

/** @} end of lc_fmac_ctrl3 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_fmac_ctrl4 */
/**
 * @defgroup at_lc_regs_core_lc_fmac_ctrl4 lc_fmac_ctrl4
 * @brief Contains register fields associated with lc_fmac_ctrl4. definitions.
 * @{
 */
#ifndef __ATLC_LC_FMAC_CTRL4_MACRO__
#define __ATLC_LC_FMAC_CTRL4_MACRO__

/* macros for field chnl_hp_en */
/**
 * @defgroup at_lc_regs_core_chnl_hp_en_field chnl_hp_en_field
 * @brief macros for field chnl_hp_en
 * @details enable auto channel hopping not supported now. sw controls channel hoping.
 * @{
 */
#define ATLC_LC_FMAC_CTRL4__CHNL_HP_EN__SHIFT                                 0
#define ATLC_LC_FMAC_CTRL4__CHNL_HP_EN__WIDTH                                 1
#define ATLC_LC_FMAC_CTRL4__CHNL_HP_EN__MASK                        0x00000001U
#define ATLC_LC_FMAC_CTRL4__CHNL_HP_EN__READ(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_LC_FMAC_CTRL4__CHNL_HP_EN__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_LC_FMAC_CTRL4__CHNL_HP_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_LC_FMAC_CTRL4__CHNL_HP_EN__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_LC_FMAC_CTRL4__CHNL_HP_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_FMAC_CTRL4__CHNL_HP_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_FMAC_CTRL4__CHNL_HP_EN__RESET_VALUE                 0x00000000U
/** @} */

/* macros for field chnl_idx */
/**
 * @defgroup at_lc_regs_core_chnl_idx_field chnl_idx_field
 * @brief macros for field chnl_idx
 * @details offset from 2402MHz in 1MHz steps no effect when descriptor mode is enabled.
 * @{
 */
#define ATLC_LC_FMAC_CTRL4__CHNL_IDX__SHIFT                                   8
#define ATLC_LC_FMAC_CTRL4__CHNL_IDX__WIDTH                                   7
#define ATLC_LC_FMAC_CTRL4__CHNL_IDX__MASK                          0x00007f00U
#define ATLC_LC_FMAC_CTRL4__CHNL_IDX__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00007f00U) >> 8)
#define ATLC_LC_FMAC_CTRL4__CHNL_IDX__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00007f00U)
#define ATLC_LC_FMAC_CTRL4__CHNL_IDX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00007f00U) | (((uint32_t)(src) <<\
                    8) & 0x00007f00U)
#define ATLC_LC_FMAC_CTRL4__CHNL_IDX__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00007f00U)))
#define ATLC_LC_FMAC_CTRL4__CHNL_IDX__RESET_VALUE                   0x00000000U
/** @} */

/* macros for field tx_pwr */
/**
 * @defgroup at_lc_regs_core_tx_pwr_field tx_pwr_field
 * @brief macros for field tx_pwr
 * @details tx power pass directly to radio TX power level entry 0, -20dBm TX power level entry 1, -10dBm TX power level entry 2, -8dBm TX power level entry 3, -6dBm TX power level entry 4, -4dBm TX power level entry 5, -2dBm TX power level entry 6, 0dBm TX power level entry 7, 2dBm TX power level entry 8, 4dBm TX power level entry 9, 6dBm TX power level entry 10, 8dBm TX power level entry 11, extra no effect when descriptor mode is enabled.
 * @{
 */
#define ATLC_LC_FMAC_CTRL4__TX_PWR__SHIFT                                    16
#define ATLC_LC_FMAC_CTRL4__TX_PWR__WIDTH                                     4
#define ATLC_LC_FMAC_CTRL4__TX_PWR__MASK                            0x000f0000U
#define ATLC_LC_FMAC_CTRL4__TX_PWR__READ(src) \
                    (((uint32_t)(src)\
                    & 0x000f0000U) >> 16)
#define ATLC_LC_FMAC_CTRL4__TX_PWR__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x000f0000U)
#define ATLC_LC_FMAC_CTRL4__TX_PWR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000f0000U) | (((uint32_t)(src) <<\
                    16) & 0x000f0000U)
#define ATLC_LC_FMAC_CTRL4__TX_PWR__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x000f0000U)))
#define ATLC_LC_FMAC_CTRL4__TX_PWR__RESET_VALUE                     0x00000001U
/** @} */
#define ATLC_LC_FMAC_CTRL4__TYPE                                       uint32_t
#define ATLC_LC_FMAC_CTRL4__READ                                    0x000f7f01U
#define ATLC_LC_FMAC_CTRL4__WRITE                                   0x000f7f01U
#define ATLC_LC_FMAC_CTRL4__PRESERVED                               0x00000000U
#define ATLC_LC_FMAC_CTRL4__RESET_VALUE                             0x00010000U

#endif /* __ATLC_LC_FMAC_CTRL4_MACRO__ */

/** @} end of lc_fmac_ctrl4 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_fmac_ctrl5 */
/**
 * @defgroup at_lc_regs_core_lc_fmac_ctrl5 lc_fmac_ctrl5
 * @brief Contains register fields associated with lc_fmac_ctrl5. definitions.
 * @{
 */
#ifndef __ATLC_LC_FMAC_CTRL5_MACRO__
#define __ATLC_LC_FMAC_CTRL5_MACRO__

/* macros for field endianness */
/**
 * @defgroup at_lc_regs_core_endianness_field endianness_field
 * @brief macros for field endianness
 * @details 0 => lsb of each byte LSB is transmitted first, 1 => msb of each byte MSB is transmitted first applies to all fields except crc.
 * @{
 */
#define ATLC_LC_FMAC_CTRL5__ENDIANNESS__SHIFT                                 0
#define ATLC_LC_FMAC_CTRL5__ENDIANNESS__WIDTH                                 1
#define ATLC_LC_FMAC_CTRL5__ENDIANNESS__MASK                        0x00000001U
#define ATLC_LC_FMAC_CTRL5__ENDIANNESS__READ(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_LC_FMAC_CTRL5__ENDIANNESS__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_LC_FMAC_CTRL5__ENDIANNESS__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_LC_FMAC_CTRL5__ENDIANNESS__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_LC_FMAC_CTRL5__ENDIANNESS__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_FMAC_CTRL5__ENDIANNESS__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_FMAC_CTRL5__ENDIANNESS__RESET_VALUE                 0x00000001U
/** @} */

/* macros for field sync_wrd_sel */
/**
 * @defgroup at_lc_regs_core_sync_wrd_sel_field sync_wrd_sel_field
 * @brief macros for field sync_wrd_sel
 * @details 0 => use sync word 0, 1 => use sync word 1 used in basic and enhanced mode supported for flexMAC which can choose different sync word.
 * @{
 */
#define ATLC_LC_FMAC_CTRL5__SYNC_WRD_SEL__SHIFT                               1
#define ATLC_LC_FMAC_CTRL5__SYNC_WRD_SEL__WIDTH                               1
#define ATLC_LC_FMAC_CTRL5__SYNC_WRD_SEL__MASK                      0x00000002U
#define ATLC_LC_FMAC_CTRL5__SYNC_WRD_SEL__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000002U) >> 1)
#define ATLC_LC_FMAC_CTRL5__SYNC_WRD_SEL__WRITE(src) \
                    (((uint32_t)(src)\
                    << 1) & 0x00000002U)
#define ATLC_LC_FMAC_CTRL5__SYNC_WRD_SEL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | (((uint32_t)(src) <<\
                    1) & 0x00000002U)
#define ATLC_LC_FMAC_CTRL5__SYNC_WRD_SEL__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 1) & ~0x00000002U)))
#define ATLC_LC_FMAC_CTRL5__SYNC_WRD_SEL__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(1) << 1)
#define ATLC_LC_FMAC_CTRL5__SYNC_WRD_SEL__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(0) << 1)
#define ATLC_LC_FMAC_CTRL5__SYNC_WRD_SEL__RESET_VALUE               0x00000000U
/** @} */

/* macros for field nd_rx */
/**
 * @defgroup at_lc_regs_core_nd_rx_field nd_rx_field
 * @brief macros for field nd_rx
 * @details node index when address length => 0 0 for BLE/154 where address length is 0.
 * @{
 */
#define ATLC_LC_FMAC_CTRL5__ND_RX__SHIFT                                      4
#define ATLC_LC_FMAC_CTRL5__ND_RX__WIDTH                                      3
#define ATLC_LC_FMAC_CTRL5__ND_RX__MASK                             0x00000070U
#define ATLC_LC_FMAC_CTRL5__ND_RX__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000070U) >> 4)
#define ATLC_LC_FMAC_CTRL5__ND_RX__WRITE(src) \
                    (((uint32_t)(src)\
                    << 4) & 0x00000070U)
#define ATLC_LC_FMAC_CTRL5__ND_RX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000070U) | (((uint32_t)(src) <<\
                    4) & 0x00000070U)
#define ATLC_LC_FMAC_CTRL5__ND_RX__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 4) & ~0x00000070U)))
#define ATLC_LC_FMAC_CTRL5__ND_RX__RESET_VALUE                      0x00000001U
/** @} */

/* macros for field endianness_crc */
/**
 * @defgroup at_lc_regs_core_endianness_crc_field endianness_crc_field
 * @brief macros for field endianness_crc
 * @details 0 => lsb of each byte LSB is transmitted first, 1 => msb of each byte MSB is transmitted first applies to only crc.
 * @{
 */
#define ATLC_LC_FMAC_CTRL5__ENDIANNESS_CRC__SHIFT                             7
#define ATLC_LC_FMAC_CTRL5__ENDIANNESS_CRC__WIDTH                             1
#define ATLC_LC_FMAC_CTRL5__ENDIANNESS_CRC__MASK                    0x00000080U
#define ATLC_LC_FMAC_CTRL5__ENDIANNESS_CRC__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000080U) >> 7)
#define ATLC_LC_FMAC_CTRL5__ENDIANNESS_CRC__WRITE(src) \
                    (((uint32_t)(src)\
                    << 7) & 0x00000080U)
#define ATLC_LC_FMAC_CTRL5__ENDIANNESS_CRC__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | (((uint32_t)(src) <<\
                    7) & 0x00000080U)
#define ATLC_LC_FMAC_CTRL5__ENDIANNESS_CRC__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 7) & ~0x00000080U)))
#define ATLC_LC_FMAC_CTRL5__ENDIANNESS_CRC__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(1) << 7)
#define ATLC_LC_FMAC_CTRL5__ENDIANNESS_CRC__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(0) << 7)
#define ATLC_LC_FMAC_CTRL5__ENDIANNESS_CRC__RESET_VALUE             0x00000001U
/** @} */

/* macros for field rx_sync_pls_n */
/**
 * @defgroup at_lc_regs_core_rx_sync_pls_n_field rx_sync_pls_n_field
 * @brief macros for field rx_sync_pls_n
 * @details generate an interrupt after receiving this number of bits after sync words
 * @{
 */
#define ATLC_LC_FMAC_CTRL5__RX_SYNC_PLS_N__SHIFT                              8
#define ATLC_LC_FMAC_CTRL5__RX_SYNC_PLS_N__WIDTH                             11
#define ATLC_LC_FMAC_CTRL5__RX_SYNC_PLS_N__MASK                     0x0007ff00U
#define ATLC_LC_FMAC_CTRL5__RX_SYNC_PLS_N__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0007ff00U) >> 8)
#define ATLC_LC_FMAC_CTRL5__RX_SYNC_PLS_N__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0007ff00U)
#define ATLC_LC_FMAC_CTRL5__RX_SYNC_PLS_N__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0007ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0007ff00U)
#define ATLC_LC_FMAC_CTRL5__RX_SYNC_PLS_N__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0007ff00U)))
#define ATLC_LC_FMAC_CTRL5__RX_SYNC_PLS_N__RESET_VALUE              0x00000000U
/** @} */

/* macros for field rx_sync_pls_n_en */
/**
 * @defgroup at_lc_regs_core_rx_sync_pls_n_en_field rx_sync_pls_n_en_field
 * @brief macros for field rx_sync_pls_n_en
 * @details enable bit of rx_sync_pls_n interrupt generation
 * @{
 */
#define ATLC_LC_FMAC_CTRL5__RX_SYNC_PLS_N_EN__SHIFT                          19
#define ATLC_LC_FMAC_CTRL5__RX_SYNC_PLS_N_EN__WIDTH                           1
#define ATLC_LC_FMAC_CTRL5__RX_SYNC_PLS_N_EN__MASK                  0x00080000U
#define ATLC_LC_FMAC_CTRL5__RX_SYNC_PLS_N_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00080000U) >> 19)
#define ATLC_LC_FMAC_CTRL5__RX_SYNC_PLS_N_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 19) & 0x00080000U)
#define ATLC_LC_FMAC_CTRL5__RX_SYNC_PLS_N_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00080000U) | (((uint32_t)(src) <<\
                    19) & 0x00080000U)
#define ATLC_LC_FMAC_CTRL5__RX_SYNC_PLS_N_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 19) & ~0x00080000U)))
#define ATLC_LC_FMAC_CTRL5__RX_SYNC_PLS_N_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00080000U) | ((uint32_t)(1) << 19)
#define ATLC_LC_FMAC_CTRL5__RX_SYNC_PLS_N_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00080000U) | ((uint32_t)(0) << 19)
#define ATLC_LC_FMAC_CTRL5__RX_SYNC_PLS_N_EN__RESET_VALUE           0x00000000U
/** @} */

/* macros for field tm_stmp_pst_chk_en */
/**
 * @defgroup at_lc_regs_core_tm_stmp_pst_chk_en_field tm_stmp_pst_chk_en_field
 * @brief macros for field tm_stmp_pst_chk_en
 * @details enable bit of past time stamp check
 * @{
 */
#define ATLC_LC_FMAC_CTRL5__TM_STMP_PST_CHK_EN__SHIFT                        20
#define ATLC_LC_FMAC_CTRL5__TM_STMP_PST_CHK_EN__WIDTH                         1
#define ATLC_LC_FMAC_CTRL5__TM_STMP_PST_CHK_EN__MASK                0x00100000U
#define ATLC_LC_FMAC_CTRL5__TM_STMP_PST_CHK_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00100000U) >> 20)
#define ATLC_LC_FMAC_CTRL5__TM_STMP_PST_CHK_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 20) & 0x00100000U)
#define ATLC_LC_FMAC_CTRL5__TM_STMP_PST_CHK_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00100000U) | (((uint32_t)(src) <<\
                    20) & 0x00100000U)
#define ATLC_LC_FMAC_CTRL5__TM_STMP_PST_CHK_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 20) & ~0x00100000U)))
#define ATLC_LC_FMAC_CTRL5__TM_STMP_PST_CHK_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00100000U) | ((uint32_t)(1) << 20)
#define ATLC_LC_FMAC_CTRL5__TM_STMP_PST_CHK_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00100000U) | ((uint32_t)(0) << 20)
#define ATLC_LC_FMAC_CTRL5__TM_STMP_PST_CHK_EN__RESET_VALUE         0x00000001U
/** @} */

/* macros for field phr_err_chk_en */
/**
 * @defgroup at_lc_regs_core_phr_err_chk_en_field phr_err_chk_en_field
 * @brief macros for field phr_err_chk_en
 * @details Not used for fmac. Keep it as 0
 * @{
 */
#define ATLC_LC_FMAC_CTRL5__PHR_ERR_CHK_EN__SHIFT                            21
#define ATLC_LC_FMAC_CTRL5__PHR_ERR_CHK_EN__WIDTH                             1
#define ATLC_LC_FMAC_CTRL5__PHR_ERR_CHK_EN__MASK                    0x00200000U
#define ATLC_LC_FMAC_CTRL5__PHR_ERR_CHK_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00200000U) >> 21)
#define ATLC_LC_FMAC_CTRL5__PHR_ERR_CHK_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 21) & 0x00200000U)
#define ATLC_LC_FMAC_CTRL5__PHR_ERR_CHK_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00200000U) | (((uint32_t)(src) <<\
                    21) & 0x00200000U)
#define ATLC_LC_FMAC_CTRL5__PHR_ERR_CHK_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 21) & ~0x00200000U)))
#define ATLC_LC_FMAC_CTRL5__PHR_ERR_CHK_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00200000U) | ((uint32_t)(1) << 21)
#define ATLC_LC_FMAC_CTRL5__PHR_ERR_CHK_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00200000U) | ((uint32_t)(0) << 21)
#define ATLC_LC_FMAC_CTRL5__PHR_ERR_CHK_EN__RESET_VALUE             0x00000000U
/** @} */
#define ATLC_LC_FMAC_CTRL5__TYPE                                       uint32_t
#define ATLC_LC_FMAC_CTRL5__READ                                    0x003ffff3U
#define ATLC_LC_FMAC_CTRL5__WRITE                                   0x003ffff3U
#define ATLC_LC_FMAC_CTRL5__PRESERVED                               0x00000000U
#define ATLC_LC_FMAC_CTRL5__RESET_VALUE                             0x00100091U

#endif /* __ATLC_LC_FMAC_CTRL5_MACRO__ */

/** @} end of lc_fmac_ctrl5 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_fmac_ctrl6 */
/**
 * @defgroup at_lc_regs_core_lc_fmac_ctrl6 lc_fmac_ctrl6
 * @brief Contains register fields associated with lc_fmac_ctrl6. definitions.
 * @{
 */
#ifndef __ATLC_LC_FMAC_CTRL6_MACRO__
#define __ATLC_LC_FMAC_CTRL6_MACRO__

/* macros for field rate */
/**
 * @defgroup at_lc_regs_core_rate_field rate_field
 * @brief macros for field rate
 * @details 00 => 1 Mbps, 01 => 2 Mbps, 10 => 250 Kbps
 * @{
 */
#define ATLC_LC_FMAC_CTRL6__RATE__SHIFT                                       0
#define ATLC_LC_FMAC_CTRL6__RATE__WIDTH                                       4
#define ATLC_LC_FMAC_CTRL6__RATE__MASK                              0x0000000fU
#define ATLC_LC_FMAC_CTRL6__RATE__READ(src)     ((uint32_t)(src) & 0x0000000fU)
#define ATLC_LC_FMAC_CTRL6__RATE__WRITE(src)    ((uint32_t)(src) & 0x0000000fU)
#define ATLC_LC_FMAC_CTRL6__RATE__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000000fU) | ((uint32_t)(src) &\
                    0x0000000fU)
#define ATLC_LC_FMAC_CTRL6__RATE__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x0000000fU)))
#define ATLC_LC_FMAC_CTRL6__RATE__RESET_VALUE                       0x00000000U
/** @} */

/* macros for field phdr_len */
/**
 * @defgroup at_lc_regs_core_phdr_len_field phdr_len_field
 * @brief macros for field phdr_len
 * @details phy header length in bytes [0-3]
 * @{
 */
#define ATLC_LC_FMAC_CTRL6__PHDR_LEN__SHIFT                                   4
#define ATLC_LC_FMAC_CTRL6__PHDR_LEN__WIDTH                                   4
#define ATLC_LC_FMAC_CTRL6__PHDR_LEN__MASK                          0x000000f0U
#define ATLC_LC_FMAC_CTRL6__PHDR_LEN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x000000f0U) >> 4)
#define ATLC_LC_FMAC_CTRL6__PHDR_LEN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 4) & 0x000000f0U)
#define ATLC_LC_FMAC_CTRL6__PHDR_LEN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000f0U) | (((uint32_t)(src) <<\
                    4) & 0x000000f0U)
#define ATLC_LC_FMAC_CTRL6__PHDR_LEN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 4) & ~0x000000f0U)))
#define ATLC_LC_FMAC_CTRL6__PHDR_LEN__RESET_VALUE                   0x00000000U
/** @} */

/* macros for field hdr_ftch_dly_sync_pls_n */
/**
 * @defgroup at_lc_regs_core_hdr_ftch_dly_sync_pls_n_field hdr_ftch_dly_sync_pls_n_field
 * @brief macros for field hdr_ftch_dly_sync_pls_n
 * @details delay header fetch n bit after sync word starts to be transmitted used only when hdr_ftch_dly_en is set.
 * @{
 */
#define ATLC_LC_FMAC_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N__SHIFT                    8
#define ATLC_LC_FMAC_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N__WIDTH                    5
#define ATLC_LC_FMAC_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N__MASK           0x00001f00U
#define ATLC_LC_FMAC_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00001f00U) >> 8)
#define ATLC_LC_FMAC_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00001f00U)
#define ATLC_LC_FMAC_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00001f00U) | (((uint32_t)(src) <<\
                    8) & 0x00001f00U)
#define ATLC_LC_FMAC_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00001f00U)))
#define ATLC_LC_FMAC_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N__RESET_VALUE    0x00000000U
/** @} */
#define ATLC_LC_FMAC_CTRL6__TYPE                                       uint32_t
#define ATLC_LC_FMAC_CTRL6__READ                                    0x00001fffU
#define ATLC_LC_FMAC_CTRL6__WRITE                                   0x00001fffU
#define ATLC_LC_FMAC_CTRL6__PRESERVED                               0x00000000U
#define ATLC_LC_FMAC_CTRL6__RESET_VALUE                             0x00000000U

#endif /* __ATLC_LC_FMAC_CTRL6_MACRO__ */

/** @} end of lc_fmac_ctrl6 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_fmac_ctrl7 */
/**
 * @defgroup at_lc_regs_core_lc_fmac_ctrl7 lc_fmac_ctrl7
 * @brief Contains register fields associated with lc_fmac_ctrl7. definitions.
 * @{
 */
#ifndef __ATLC_LC_FMAC_CTRL7_MACRO__
#define __ATLC_LC_FMAC_CTRL7_MACRO__

/* macros for field rx_ed_mns_n */
/**
 * @defgroup at_lc_regs_core_rx_ed_mns_n_field rx_ed_mns_n_field
 * @brief macros for field rx_ed_mns_n
 * @details generate an interrupt this number of us before rx end (not support FMAC now)
 * @{
 */
#define ATLC_LC_FMAC_CTRL7__RX_ED_MNS_N__SHIFT                                0
#define ATLC_LC_FMAC_CTRL7__RX_ED_MNS_N__WIDTH                                7
#define ATLC_LC_FMAC_CTRL7__RX_ED_MNS_N__MASK                       0x0000007fU
#define ATLC_LC_FMAC_CTRL7__RX_ED_MNS_N__READ(src) \
                    ((uint32_t)(src)\
                    & 0x0000007fU)
#define ATLC_LC_FMAC_CTRL7__RX_ED_MNS_N__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x0000007fU)
#define ATLC_LC_FMAC_CTRL7__RX_ED_MNS_N__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000007fU) | ((uint32_t)(src) &\
                    0x0000007fU)
#define ATLC_LC_FMAC_CTRL7__RX_ED_MNS_N__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x0000007fU)))
#define ATLC_LC_FMAC_CTRL7__RX_ED_MNS_N__RESET_VALUE                0x00000000U
/** @} */

/* macros for field rx_ed_mns_n_en */
/**
 * @defgroup at_lc_regs_core_rx_ed_mns_n_en_field rx_ed_mns_n_en_field
 * @brief macros for field rx_ed_mns_n_en
 * @details enable bit of rx_ed_mns_n interrupt generation (not support FMAC now)
 * @{
 */
#define ATLC_LC_FMAC_CTRL7__RX_ED_MNS_N_EN__SHIFT                             7
#define ATLC_LC_FMAC_CTRL7__RX_ED_MNS_N_EN__WIDTH                             1
#define ATLC_LC_FMAC_CTRL7__RX_ED_MNS_N_EN__MASK                    0x00000080U
#define ATLC_LC_FMAC_CTRL7__RX_ED_MNS_N_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000080U) >> 7)
#define ATLC_LC_FMAC_CTRL7__RX_ED_MNS_N_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 7) & 0x00000080U)
#define ATLC_LC_FMAC_CTRL7__RX_ED_MNS_N_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | (((uint32_t)(src) <<\
                    7) & 0x00000080U)
#define ATLC_LC_FMAC_CTRL7__RX_ED_MNS_N_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 7) & ~0x00000080U)))
#define ATLC_LC_FMAC_CTRL7__RX_ED_MNS_N_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(1) << 7)
#define ATLC_LC_FMAC_CTRL7__RX_ED_MNS_N_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(0) << 7)
#define ATLC_LC_FMAC_CTRL7__RX_ED_MNS_N_EN__RESET_VALUE             0x00000000U
/** @} */

/* macros for field tx_ed_mns_n */
/**
 * @defgroup at_lc_regs_core_tx_ed_mns_n_field tx_ed_mns_n_field
 * @brief macros for field tx_ed_mns_n
 * @details generate an interrupt this number of us before tx end (not support FMAC now)
 * @{
 */
#define ATLC_LC_FMAC_CTRL7__TX_ED_MNS_N__SHIFT                                8
#define ATLC_LC_FMAC_CTRL7__TX_ED_MNS_N__WIDTH                                7
#define ATLC_LC_FMAC_CTRL7__TX_ED_MNS_N__MASK                       0x00007f00U
#define ATLC_LC_FMAC_CTRL7__TX_ED_MNS_N__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00007f00U) >> 8)
#define ATLC_LC_FMAC_CTRL7__TX_ED_MNS_N__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00007f00U)
#define ATLC_LC_FMAC_CTRL7__TX_ED_MNS_N__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00007f00U) | (((uint32_t)(src) <<\
                    8) & 0x00007f00U)
#define ATLC_LC_FMAC_CTRL7__TX_ED_MNS_N__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00007f00U)))
#define ATLC_LC_FMAC_CTRL7__TX_ED_MNS_N__RESET_VALUE                0x00000000U
/** @} */

/* macros for field tx_ed_mns_n_en */
/**
 * @defgroup at_lc_regs_core_tx_ed_mns_n_en_field tx_ed_mns_n_en_field
 * @brief macros for field tx_ed_mns_n_en
 * @details enable bit of tx_ed_mns_n interrupt generation (not support FMAC now)
 * @{
 */
#define ATLC_LC_FMAC_CTRL7__TX_ED_MNS_N_EN__SHIFT                            15
#define ATLC_LC_FMAC_CTRL7__TX_ED_MNS_N_EN__WIDTH                             1
#define ATLC_LC_FMAC_CTRL7__TX_ED_MNS_N_EN__MASK                    0x00008000U
#define ATLC_LC_FMAC_CTRL7__TX_ED_MNS_N_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00008000U) >> 15)
#define ATLC_LC_FMAC_CTRL7__TX_ED_MNS_N_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 15) & 0x00008000U)
#define ATLC_LC_FMAC_CTRL7__TX_ED_MNS_N_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | (((uint32_t)(src) <<\
                    15) & 0x00008000U)
#define ATLC_LC_FMAC_CTRL7__TX_ED_MNS_N_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 15) & ~0x00008000U)))
#define ATLC_LC_FMAC_CTRL7__TX_ED_MNS_N_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | ((uint32_t)(1) << 15)
#define ATLC_LC_FMAC_CTRL7__TX_ED_MNS_N_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | ((uint32_t)(0) << 15)
#define ATLC_LC_FMAC_CTRL7__TX_ED_MNS_N_EN__RESET_VALUE             0x00000000U
/** @} */

/* macros for field rx_ed_mns_n_pst_en */
/**
 * @defgroup at_lc_regs_core_rx_ed_mns_n_pst_en_field rx_ed_mns_n_pst_en_field
 * @brief macros for field rx_ed_mns_n_pst_en
 * @details generate rx_ed_mns_n interrupt when ATLC finds the requested time has already passed. (not support FMAC now)
 * @{
 */
#define ATLC_LC_FMAC_CTRL7__RX_ED_MNS_N_PST_EN__SHIFT                        16
#define ATLC_LC_FMAC_CTRL7__RX_ED_MNS_N_PST_EN__WIDTH                         1
#define ATLC_LC_FMAC_CTRL7__RX_ED_MNS_N_PST_EN__MASK                0x00010000U
#define ATLC_LC_FMAC_CTRL7__RX_ED_MNS_N_PST_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_LC_FMAC_CTRL7__RX_ED_MNS_N_PST_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00010000U)
#define ATLC_LC_FMAC_CTRL7__RX_ED_MNS_N_PST_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | (((uint32_t)(src) <<\
                    16) & 0x00010000U)
#define ATLC_LC_FMAC_CTRL7__RX_ED_MNS_N_PST_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00010000U)))
#define ATLC_LC_FMAC_CTRL7__RX_ED_MNS_N_PST_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_LC_FMAC_CTRL7__RX_ED_MNS_N_PST_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_LC_FMAC_CTRL7__RX_ED_MNS_N_PST_EN__RESET_VALUE         0x00000000U
/** @} */

/* macros for field tx_ed_mns_n_pst_en */
/**
 * @defgroup at_lc_regs_core_tx_ed_mns_n_pst_en_field tx_ed_mns_n_pst_en_field
 * @brief macros for field tx_ed_mns_n_pst_en
 * @details generate tx_ed_mns_n interrupt when ATLC finds the requested time has already passed. (not support FMAC now)
 * @{
 */
#define ATLC_LC_FMAC_CTRL7__TX_ED_MNS_N_PST_EN__SHIFT                        17
#define ATLC_LC_FMAC_CTRL7__TX_ED_MNS_N_PST_EN__WIDTH                         1
#define ATLC_LC_FMAC_CTRL7__TX_ED_MNS_N_PST_EN__MASK                0x00020000U
#define ATLC_LC_FMAC_CTRL7__TX_ED_MNS_N_PST_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00020000U) >> 17)
#define ATLC_LC_FMAC_CTRL7__TX_ED_MNS_N_PST_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 17) & 0x00020000U)
#define ATLC_LC_FMAC_CTRL7__TX_ED_MNS_N_PST_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00020000U) | (((uint32_t)(src) <<\
                    17) & 0x00020000U)
#define ATLC_LC_FMAC_CTRL7__TX_ED_MNS_N_PST_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 17) & ~0x00020000U)))
#define ATLC_LC_FMAC_CTRL7__TX_ED_MNS_N_PST_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00020000U) | ((uint32_t)(1) << 17)
#define ATLC_LC_FMAC_CTRL7__TX_ED_MNS_N_PST_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00020000U) | ((uint32_t)(0) << 17)
#define ATLC_LC_FMAC_CTRL7__TX_ED_MNS_N_PST_EN__RESET_VALUE         0x00000000U
/** @} */
#define ATLC_LC_FMAC_CTRL7__TYPE                                       uint32_t
#define ATLC_LC_FMAC_CTRL7__READ                                    0x0003ffffU
#define ATLC_LC_FMAC_CTRL7__WRITE                                   0x0003ffffU
#define ATLC_LC_FMAC_CTRL7__PRESERVED                               0x00000000U
#define ATLC_LC_FMAC_CTRL7__RESET_VALUE                             0x00000000U

#endif /* __ATLC_LC_FMAC_CTRL7_MACRO__ */

/** @} end of lc_fmac_ctrl7 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_ble_ctrl0 */
/**
 * @defgroup at_lc_regs_core_lc_ble_ctrl0 lc_ble_ctrl0
 * @brief Contains register fields associated with lc_ble_ctrl0. definitions.
 * @{
 */
#ifndef __ATLC_LC_BLE_CTRL0_MACRO__
#define __ATLC_LC_BLE_CTRL0_MACRO__

/* macros for field at_lc_md */
/**
 * @defgroup at_lc_regs_core_at_lc_md_field at_lc_md_field
 * @brief macros for field at_lc_md
 * @details 1 => use atmosic lc, 0 => use ceva lc supported only for chip with both atlc and ceva.
 * @{
 */
#define ATLC_LC_BLE_CTRL0__AT_LC_MD__SHIFT                                    0
#define ATLC_LC_BLE_CTRL0__AT_LC_MD__WIDTH                                    1
#define ATLC_LC_BLE_CTRL0__AT_LC_MD__MASK                           0x00000001U
#define ATLC_LC_BLE_CTRL0__AT_LC_MD__READ(src)  ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_BLE_CTRL0__AT_LC_MD__WRITE(src) ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_BLE_CTRL0__AT_LC_MD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_LC_BLE_CTRL0__AT_LC_MD__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_LC_BLE_CTRL0__AT_LC_MD__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_BLE_CTRL0__AT_LC_MD__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_BLE_CTRL0__AT_LC_MD__RESET_VALUE                    0x00000001U
/** @} */

/* macros for field op_md */
/**
 * @defgroup at_lc_regs_core_op_md_field op_md_field
 * @brief macros for field op_md
 * @details operation mode 1 => host, 0 => device supported for flexMAC set to 0 for BLE/154.
 * @{
 */
#define ATLC_LC_BLE_CTRL0__OP_MD__SHIFT                                       1
#define ATLC_LC_BLE_CTRL0__OP_MD__WIDTH                                       1
#define ATLC_LC_BLE_CTRL0__OP_MD__MASK                              0x00000002U
#define ATLC_LC_BLE_CTRL0__OP_MD__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000002U) >> 1)
#define ATLC_LC_BLE_CTRL0__OP_MD__WRITE(src) \
                    (((uint32_t)(src)\
                    << 1) & 0x00000002U)
#define ATLC_LC_BLE_CTRL0__OP_MD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | (((uint32_t)(src) <<\
                    1) & 0x00000002U)
#define ATLC_LC_BLE_CTRL0__OP_MD__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 1) & ~0x00000002U)))
#define ATLC_LC_BLE_CTRL0__OP_MD__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(1) << 1)
#define ATLC_LC_BLE_CTRL0__OP_MD__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(0) << 1)
#define ATLC_LC_BLE_CTRL0__OP_MD__RESET_VALUE                       0x00000000U
/** @} */

/* macros for field flw_md */
/**
 * @defgroup at_lc_regs_core_flw_md_field flw_md_field
 * @brief macros for field flw_md
 * @details flow cmode 1 => enhanced flexMAC, 0 => basic flexMAC set to 1 for BLE/154.
 * @{
 */
#define ATLC_LC_BLE_CTRL0__FLW_MD__SHIFT                                      2
#define ATLC_LC_BLE_CTRL0__FLW_MD__WIDTH                                      1
#define ATLC_LC_BLE_CTRL0__FLW_MD__MASK                             0x00000004U
#define ATLC_LC_BLE_CTRL0__FLW_MD__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000004U) >> 2)
#define ATLC_LC_BLE_CTRL0__FLW_MD__WRITE(src) \
                    (((uint32_t)(src)\
                    << 2) & 0x00000004U)
#define ATLC_LC_BLE_CTRL0__FLW_MD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | (((uint32_t)(src) <<\
                    2) & 0x00000004U)
#define ATLC_LC_BLE_CTRL0__FLW_MD__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 2) & ~0x00000004U)))
#define ATLC_LC_BLE_CTRL0__FLW_MD__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(1) << 2)
#define ATLC_LC_BLE_CTRL0__FLW_MD__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(0) << 2)
#define ATLC_LC_BLE_CTRL0__FLW_MD__RESET_VALUE                      0x00000001U
/** @} */

/* macros for field dscr_en */
/**
 * @defgroup at_lc_regs_core_dscr_en_field dscr_en_field
 * @brief macros for field dscr_en
 * @details enable tx and rx descriptor decode mode.
 * @{
 */
#define ATLC_LC_BLE_CTRL0__DSCR_EN__SHIFT                                     3
#define ATLC_LC_BLE_CTRL0__DSCR_EN__WIDTH                                     1
#define ATLC_LC_BLE_CTRL0__DSCR_EN__MASK                            0x00000008U
#define ATLC_LC_BLE_CTRL0__DSCR_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000008U) >> 3)
#define ATLC_LC_BLE_CTRL0__DSCR_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 3) & 0x00000008U)
#define ATLC_LC_BLE_CTRL0__DSCR_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | (((uint32_t)(src) <<\
                    3) & 0x00000008U)
#define ATLC_LC_BLE_CTRL0__DSCR_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 3) & ~0x00000008U)))
#define ATLC_LC_BLE_CTRL0__DSCR_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | ((uint32_t)(1) << 3)
#define ATLC_LC_BLE_CTRL0__DSCR_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | ((uint32_t)(0) << 3)
#define ATLC_LC_BLE_CTRL0__DSCR_EN__RESET_VALUE                     0x00000000U
/** @} */

/* macros for field air_tm_stmp */
/**
 * @defgroup at_lc_regs_core_air_tm_stmp_field air_tm_stmp_field
 * @brief macros for field air_tm_stmp
 * @details air time stamp mode where all times are defined relative to on air time.
 * @{
 */
#define ATLC_LC_BLE_CTRL0__AIR_TM_STMP__SHIFT                                 4
#define ATLC_LC_BLE_CTRL0__AIR_TM_STMP__WIDTH                                 1
#define ATLC_LC_BLE_CTRL0__AIR_TM_STMP__MASK                        0x00000010U
#define ATLC_LC_BLE_CTRL0__AIR_TM_STMP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000010U) >> 4)
#define ATLC_LC_BLE_CTRL0__AIR_TM_STMP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 4) & 0x00000010U)
#define ATLC_LC_BLE_CTRL0__AIR_TM_STMP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | (((uint32_t)(src) <<\
                    4) & 0x00000010U)
#define ATLC_LC_BLE_CTRL0__AIR_TM_STMP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 4) & ~0x00000010U)))
#define ATLC_LC_BLE_CTRL0__AIR_TM_STMP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | ((uint32_t)(1) << 4)
#define ATLC_LC_BLE_CTRL0__AIR_TM_STMP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | ((uint32_t)(0) << 4)
#define ATLC_LC_BLE_CTRL0__AIR_TM_STMP__RESET_VALUE                 0x00000001U
/** @} */

/* macros for field rsrvd */
/**
 * @defgroup at_lc_regs_core_rsrvd_field rsrvd_field
 * @brief macros for field rsrvd
 * @details reserverd
 * @{
 */
#define ATLC_LC_BLE_CTRL0__RSRVD__SHIFT                                       5
#define ATLC_LC_BLE_CTRL0__RSRVD__WIDTH                                       1
#define ATLC_LC_BLE_CTRL0__RSRVD__MASK                              0x00000020U
#define ATLC_LC_BLE_CTRL0__RSRVD__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000020U) >> 5)
#define ATLC_LC_BLE_CTRL0__RSRVD__WRITE(src) \
                    (((uint32_t)(src)\
                    << 5) & 0x00000020U)
#define ATLC_LC_BLE_CTRL0__RSRVD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | (((uint32_t)(src) <<\
                    5) & 0x00000020U)
#define ATLC_LC_BLE_CTRL0__RSRVD__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 5) & ~0x00000020U)))
#define ATLC_LC_BLE_CTRL0__RSRVD__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | ((uint32_t)(1) << 5)
#define ATLC_LC_BLE_CTRL0__RSRVD__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | ((uint32_t)(0) << 5)
#define ATLC_LC_BLE_CTRL0__RSRVD__RESET_VALUE                       0x00000000U
/** @} */

/* macros for field aa_en */
/**
 * @defgroup at_lc_regs_core_aa_en_field aa_en_field
 * @brief macros for field aa_en
 * @details enable autoacknowledgment supported for flexMAC.
 * @{
 */
#define ATLC_LC_BLE_CTRL0__AA_EN__SHIFT                                       6
#define ATLC_LC_BLE_CTRL0__AA_EN__WIDTH                                       1
#define ATLC_LC_BLE_CTRL0__AA_EN__MASK                              0x00000040U
#define ATLC_LC_BLE_CTRL0__AA_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000040U) >> 6)
#define ATLC_LC_BLE_CTRL0__AA_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 6) & 0x00000040U)
#define ATLC_LC_BLE_CTRL0__AA_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | (((uint32_t)(src) <<\
                    6) & 0x00000040U)
#define ATLC_LC_BLE_CTRL0__AA_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 6) & ~0x00000040U)))
#define ATLC_LC_BLE_CTRL0__AA_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | ((uint32_t)(1) << 6)
#define ATLC_LC_BLE_CTRL0__AA_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | ((uint32_t)(0) << 6)
#define ATLC_LC_BLE_CTRL0__AA_EN__RESET_VALUE                       0x00000000U
/** @} */

/* macros for field rt_en */
/**
 * @defgroup at_lc_regs_core_rt_en_field rt_en_field
 * @brief macros for field rt_en
 * @details enable retransmission supported for flexMAC.
 * @{
 */
#define ATLC_LC_BLE_CTRL0__RT_EN__SHIFT                                       7
#define ATLC_LC_BLE_CTRL0__RT_EN__WIDTH                                       1
#define ATLC_LC_BLE_CTRL0__RT_EN__MASK                              0x00000080U
#define ATLC_LC_BLE_CTRL0__RT_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000080U) >> 7)
#define ATLC_LC_BLE_CTRL0__RT_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 7) & 0x00000080U)
#define ATLC_LC_BLE_CTRL0__RT_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | (((uint32_t)(src) <<\
                    7) & 0x00000080U)
#define ATLC_LC_BLE_CTRL0__RT_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 7) & ~0x00000080U)))
#define ATLC_LC_BLE_CTRL0__RT_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(1) << 7)
#define ATLC_LC_BLE_CTRL0__RT_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(0) << 7)
#define ATLC_LC_BLE_CTRL0__RT_EN__RESET_VALUE                       0x00000000U
/** @} */

/* macros for field wht_en */
/**
 * @defgroup at_lc_regs_core_wht_en_field wht_en_field
 * @brief macros for field wht_en
 * @details enable whitenning no affect when descriptor mode is enabled.
 * @{
 */
#define ATLC_LC_BLE_CTRL0__WHT_EN__SHIFT                                      8
#define ATLC_LC_BLE_CTRL0__WHT_EN__WIDTH                                      1
#define ATLC_LC_BLE_CTRL0__WHT_EN__MASK                             0x00000100U
#define ATLC_LC_BLE_CTRL0__WHT_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000100U) >> 8)
#define ATLC_LC_BLE_CTRL0__WHT_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00000100U)
#define ATLC_LC_BLE_CTRL0__WHT_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | (((uint32_t)(src) <<\
                    8) & 0x00000100U)
#define ATLC_LC_BLE_CTRL0__WHT_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00000100U)))
#define ATLC_LC_BLE_CTRL0__WHT_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | ((uint32_t)(1) << 8)
#define ATLC_LC_BLE_CTRL0__WHT_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | ((uint32_t)(0) << 8)
#define ATLC_LC_BLE_CTRL0__WHT_EN__RESET_VALUE                      0x00000001U
/** @} */

/* macros for field crypt_md */
/**
 * @defgroup at_lc_regs_core_crypt_md_field crypt_md_field
 * @brief macros for field crypt_md
 * @details crypto mode 000 => no crypto, 101 => CTR
 * @{
 */
#define ATLC_LC_BLE_CTRL0__CRYPT_MD__SHIFT                                    9
#define ATLC_LC_BLE_CTRL0__CRYPT_MD__WIDTH                                    3
#define ATLC_LC_BLE_CTRL0__CRYPT_MD__MASK                           0x00000e00U
#define ATLC_LC_BLE_CTRL0__CRYPT_MD__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000e00U) >> 9)
#define ATLC_LC_BLE_CTRL0__CRYPT_MD__WRITE(src) \
                    (((uint32_t)(src)\
                    << 9) & 0x00000e00U)
#define ATLC_LC_BLE_CTRL0__CRYPT_MD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000e00U) | (((uint32_t)(src) <<\
                    9) & 0x00000e00U)
#define ATLC_LC_BLE_CTRL0__CRYPT_MD__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 9) & ~0x00000e00U)))
#define ATLC_LC_BLE_CTRL0__CRYPT_MD__RESET_VALUE                    0x00000000U
/** @} */

/* macros for field sync_en */
/**
 * @defgroup at_lc_regs_core_sync_en_field sync_en_field
 * @brief macros for field sync_en
 * @details enable sync word 0 and/or sync word 1 set to 1 for BLE and 154 to use sync_wrd0. 2 sync words are used for flexMAC.
 * @{
 */
#define ATLC_LC_BLE_CTRL0__SYNC_EN__SHIFT                                    12
#define ATLC_LC_BLE_CTRL0__SYNC_EN__WIDTH                                     2
#define ATLC_LC_BLE_CTRL0__SYNC_EN__MASK                            0x00003000U
#define ATLC_LC_BLE_CTRL0__SYNC_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00003000U) >> 12)
#define ATLC_LC_BLE_CTRL0__SYNC_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 12) & 0x00003000U)
#define ATLC_LC_BLE_CTRL0__SYNC_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00003000U) | (((uint32_t)(src) <<\
                    12) & 0x00003000U)
#define ATLC_LC_BLE_CTRL0__SYNC_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 12) & ~0x00003000U)))
#define ATLC_LC_BLE_CTRL0__SYNC_EN__RESET_VALUE                     0x00000001U
/** @} */

/* macros for field crc_len */
/**
 * @defgroup at_lc_regs_core_crc_len_field crc_len_field
 * @brief macros for field crc_len
 * @details crc length in bytes - valid between 0 to 4 set to 3 for BLE and 2 for 154 set to 1 or 2 for flexMAC. 0 => crc insertion/check disabled.
 * @{
 */
#define ATLC_LC_BLE_CTRL0__CRC_LEN__SHIFT                                    16
#define ATLC_LC_BLE_CTRL0__CRC_LEN__WIDTH                                     3
#define ATLC_LC_BLE_CTRL0__CRC_LEN__MASK                            0x00070000U
#define ATLC_LC_BLE_CTRL0__CRC_LEN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00070000U) >> 16)
#define ATLC_LC_BLE_CTRL0__CRC_LEN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00070000U)
#define ATLC_LC_BLE_CTRL0__CRC_LEN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00070000U) | (((uint32_t)(src) <<\
                    16) & 0x00070000U)
#define ATLC_LC_BLE_CTRL0__CRC_LEN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00070000U)))
#define ATLC_LC_BLE_CTRL0__CRC_LEN__RESET_VALUE                     0x00000003U
/** @} */

/* macros for field addr_len */
/**
 * @defgroup at_lc_regs_core_addr_len_field addr_len_field
 * @brief macros for field addr_len
 * @details address length in bytes - valid between 0 to 1 set to 0 for BLE and 154. set to 0 to 1 for flexMAC.
 * @{
 */
#define ATLC_LC_BLE_CTRL0__ADDR_LEN__SHIFT                                   20
#define ATLC_LC_BLE_CTRL0__ADDR_LEN__WIDTH                                    3
#define ATLC_LC_BLE_CTRL0__ADDR_LEN__MASK                           0x00700000U
#define ATLC_LC_BLE_CTRL0__ADDR_LEN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00700000U) >> 20)
#define ATLC_LC_BLE_CTRL0__ADDR_LEN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 20) & 0x00700000U)
#define ATLC_LC_BLE_CTRL0__ADDR_LEN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00700000U) | (((uint32_t)(src) <<\
                    20) & 0x00700000U)
#define ATLC_LC_BLE_CTRL0__ADDR_LEN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 20) & ~0x00700000U)))
#define ATLC_LC_BLE_CTRL0__ADDR_LEN__RESET_VALUE                    0x00000000U
/** @} */

/* macros for field sync_len */
/**
 * @defgroup at_lc_regs_core_sync_len_field sync_len_field
 * @brief macros for field sync_len
 * @details sync word length in bytes - valid between 2 to 4 set to 4 for BLE AA and 1 for 154 SFD. set to 2, 3, 4 for flexMAC.
 * @{
 */
#define ATLC_LC_BLE_CTRL0__SYNC_LEN__SHIFT                                   24
#define ATLC_LC_BLE_CTRL0__SYNC_LEN__WIDTH                                    3
#define ATLC_LC_BLE_CTRL0__SYNC_LEN__MASK                           0x07000000U
#define ATLC_LC_BLE_CTRL0__SYNC_LEN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x07000000U) >> 24)
#define ATLC_LC_BLE_CTRL0__SYNC_LEN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 24) & 0x07000000U)
#define ATLC_LC_BLE_CTRL0__SYNC_LEN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x07000000U) | (((uint32_t)(src) <<\
                    24) & 0x07000000U)
#define ATLC_LC_BLE_CTRL0__SYNC_LEN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 24) & ~0x07000000U)))
#define ATLC_LC_BLE_CTRL0__SYNC_LEN__RESET_VALUE                    0x00000004U
/** @} */

/* macros for field hdr_ftch_dly_en */
/**
 * @defgroup at_lc_regs_core_hdr_ftch_dly_en_field hdr_ftch_dly_en_field
 * @brief macros for field hdr_ftch_dly_en
 * @details enable feature to delay fetching of header till sync word transmission
 * @{
 */
#define ATLC_LC_BLE_CTRL0__HDR_FTCH_DLY_EN__SHIFT                            27
#define ATLC_LC_BLE_CTRL0__HDR_FTCH_DLY_EN__WIDTH                             1
#define ATLC_LC_BLE_CTRL0__HDR_FTCH_DLY_EN__MASK                    0x08000000U
#define ATLC_LC_BLE_CTRL0__HDR_FTCH_DLY_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x08000000U) >> 27)
#define ATLC_LC_BLE_CTRL0__HDR_FTCH_DLY_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 27) & 0x08000000U)
#define ATLC_LC_BLE_CTRL0__HDR_FTCH_DLY_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x08000000U) | (((uint32_t)(src) <<\
                    27) & 0x08000000U)
#define ATLC_LC_BLE_CTRL0__HDR_FTCH_DLY_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 27) & ~0x08000000U)))
#define ATLC_LC_BLE_CTRL0__HDR_FTCH_DLY_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x08000000U) | ((uint32_t)(1) << 27)
#define ATLC_LC_BLE_CTRL0__HDR_FTCH_DLY_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x08000000U) | ((uint32_t)(0) << 27)
#define ATLC_LC_BLE_CTRL0__HDR_FTCH_DLY_EN__RESET_VALUE             0x00000001U
/** @} */

/* macros for field aes_16MHz_en */
/**
 * @defgroup at_lc_regs_core_aes_16MHz_en_field aes_16MHz_en_field
 * @brief macros for field aes_16MHz_en
 * @details enable aes to run at 16 MHz
 * @{
 */
#define ATLC_LC_BLE_CTRL0__AES_16MHZ_EN__SHIFT                               28
#define ATLC_LC_BLE_CTRL0__AES_16MHZ_EN__WIDTH                                1
#define ATLC_LC_BLE_CTRL0__AES_16MHZ_EN__MASK                       0x10000000U
#define ATLC_LC_BLE_CTRL0__AES_16MHZ_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x10000000U) >> 28)
#define ATLC_LC_BLE_CTRL0__AES_16MHZ_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 28) & 0x10000000U)
#define ATLC_LC_BLE_CTRL0__AES_16MHZ_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x10000000U) | (((uint32_t)(src) <<\
                    28) & 0x10000000U)
#define ATLC_LC_BLE_CTRL0__AES_16MHZ_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 28) & ~0x10000000U)))
#define ATLC_LC_BLE_CTRL0__AES_16MHZ_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x10000000U) | ((uint32_t)(1) << 28)
#define ATLC_LC_BLE_CTRL0__AES_16MHZ_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x10000000U) | ((uint32_t)(0) << 28)
#define ATLC_LC_BLE_CTRL0__AES_16MHZ_EN__RESET_VALUE                0x00000001U
/** @} */

/* macros for field use_hw_syncwrd_crc */
/**
 * @defgroup at_lc_regs_core_use_hw_syncwrd_crc_field use_hw_syncwrd_crc_field
 * @brief macros for field use_hw_syncwrd_crc
 * @details (not supported in this protocol) set 1 to have HW compute sync word crc.
 * @{
 */
#define ATLC_LC_BLE_CTRL0__USE_HW_SYNCWRD_CRC__SHIFT                         29
#define ATLC_LC_BLE_CTRL0__USE_HW_SYNCWRD_CRC__WIDTH                          1
#define ATLC_LC_BLE_CTRL0__USE_HW_SYNCWRD_CRC__MASK                 0x20000000U
#define ATLC_LC_BLE_CTRL0__USE_HW_SYNCWRD_CRC__READ(src) \
                    (((uint32_t)(src)\
                    & 0x20000000U) >> 29)
#define ATLC_LC_BLE_CTRL0__USE_HW_SYNCWRD_CRC__WRITE(src) \
                    (((uint32_t)(src)\
                    << 29) & 0x20000000U)
#define ATLC_LC_BLE_CTRL0__USE_HW_SYNCWRD_CRC__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x20000000U) | (((uint32_t)(src) <<\
                    29) & 0x20000000U)
#define ATLC_LC_BLE_CTRL0__USE_HW_SYNCWRD_CRC__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 29) & ~0x20000000U)))
#define ATLC_LC_BLE_CTRL0__USE_HW_SYNCWRD_CRC__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x20000000U) | ((uint32_t)(1) << 29)
#define ATLC_LC_BLE_CTRL0__USE_HW_SYNCWRD_CRC__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x20000000U) | ((uint32_t)(0) << 29)
#define ATLC_LC_BLE_CTRL0__USE_HW_SYNCWRD_CRC__RESET_VALUE          0x00000000U
/** @} */
#define ATLC_LC_BLE_CTRL0__TYPE                                        uint32_t
#define ATLC_LC_BLE_CTRL0__READ                                     0x3f773fffU
#define ATLC_LC_BLE_CTRL0__WRITE                                    0x3f773fffU
#define ATLC_LC_BLE_CTRL0__PRESERVED                                0x00000000U
#define ATLC_LC_BLE_CTRL0__RESET_VALUE                              0x1c031115U

#endif /* __ATLC_LC_BLE_CTRL0_MACRO__ */

/** @} end of lc_ble_ctrl0 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_ble_ctrl1 */
/**
 * @defgroup at_lc_regs_core_lc_ble_ctrl1 lc_ble_ctrl1
 * @brief Contains register fields associated with lc_ble_ctrl1. definitions.
 * @{
 */
#ifndef __ATLC_LC_BLE_CTRL1_MACRO__
#define __ATLC_LC_BLE_CTRL1_MACRO__

/* macros for field byp_crypt_zero_pyld */
/**
 * @defgroup at_lc_regs_core_byp_crypt_zero_pyld_field byp_crypt_zero_pyld_field
 * @brief macros for field byp_crypt_zero_pyld
 * @details use 0 for crypt_mod and 0 for mic_len for zero payload packet
 * @{
 */
#define ATLC_LC_BLE_CTRL1__BYP_CRYPT_ZERO_PYLD__SHIFT                         0
#define ATLC_LC_BLE_CTRL1__BYP_CRYPT_ZERO_PYLD__WIDTH                         1
#define ATLC_LC_BLE_CTRL1__BYP_CRYPT_ZERO_PYLD__MASK                0x00000001U
#define ATLC_LC_BLE_CTRL1__BYP_CRYPT_ZERO_PYLD__READ(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_LC_BLE_CTRL1__BYP_CRYPT_ZERO_PYLD__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_LC_BLE_CTRL1__BYP_CRYPT_ZERO_PYLD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_LC_BLE_CTRL1__BYP_CRYPT_ZERO_PYLD__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_LC_BLE_CTRL1__BYP_CRYPT_ZERO_PYLD__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_BLE_CTRL1__BYP_CRYPT_ZERO_PYLD__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_BLE_CTRL1__BYP_CRYPT_ZERO_PYLD__RESET_VALUE         0x00000001U
/** @} */

/* macros for field rsrvd */
/**
 * @defgroup at_lc_regs_core_rsrvd_field rsrvd_field
 * @brief macros for field rsrvd
 * @details reserverd
 * @{
 */
#define ATLC_LC_BLE_CTRL1__RSRVD__SHIFT                                       1
#define ATLC_LC_BLE_CTRL1__RSRVD__WIDTH                                      12
#define ATLC_LC_BLE_CTRL1__RSRVD__MASK                              0x00001ffeU
#define ATLC_LC_BLE_CTRL1__RSRVD__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00001ffeU) >> 1)
#define ATLC_LC_BLE_CTRL1__RSRVD__WRITE(src) \
                    (((uint32_t)(src)\
                    << 1) & 0x00001ffeU)
#define ATLC_LC_BLE_CTRL1__RSRVD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00001ffeU) | (((uint32_t)(src) <<\
                    1) & 0x00001ffeU)
#define ATLC_LC_BLE_CTRL1__RSRVD__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 1) & ~0x00001ffeU)))
#define ATLC_LC_BLE_CTRL1__RSRVD__RESET_VALUE                       0x00000000U
/** @} */

/* macros for field crypt_aeskey_byt_rvrt */
/**
 * @defgroup at_lc_regs_core_crypt_aeskey_byt_rvrt_field crypt_aeskey_byt_rvrt_field
 * @brief macros for field crypt_aeskey_byt_rvrt
 * @details revert the byte order within aeskey word
 * @{
 */
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_BYT_RVRT__SHIFT                      13
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_BYT_RVRT__WIDTH                       1
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_BYT_RVRT__MASK              0x00002000U
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_BYT_RVRT__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00002000U) >> 13)
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_BYT_RVRT__WRITE(src) \
                    (((uint32_t)(src)\
                    << 13) & 0x00002000U)
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_BYT_RVRT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00002000U) | (((uint32_t)(src) <<\
                    13) & 0x00002000U)
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_BYT_RVRT__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 13) & ~0x00002000U)))
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_BYT_RVRT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00002000U) | ((uint32_t)(1) << 13)
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_BYT_RVRT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00002000U) | ((uint32_t)(0) << 13)
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_BYT_RVRT__RESET_VALUE       0x00000001U
/** @} */

/* macros for field crypt_aeskey_wrd4_rvrt */
/**
 * @defgroup at_lc_regs_core_crypt_aeskey_wrd4_rvrt_field crypt_aeskey_wrd4_rvrt_field
 * @brief macros for field crypt_aeskey_wrd4_rvrt
 * @details revert the 4 words order of aeskey
 * @{
 */
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_WRD4_RVRT__SHIFT                     14
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_WRD4_RVRT__WIDTH                      1
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_WRD4_RVRT__MASK             0x00004000U
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_WRD4_RVRT__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00004000U) >> 14)
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_WRD4_RVRT__WRITE(src) \
                    (((uint32_t)(src)\
                    << 14) & 0x00004000U)
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_WRD4_RVRT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00004000U) | (((uint32_t)(src) <<\
                    14) & 0x00004000U)
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_WRD4_RVRT__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 14) & ~0x00004000U)))
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_WRD4_RVRT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00004000U) | ((uint32_t)(1) << 14)
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_WRD4_RVRT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00004000U) | ((uint32_t)(0) << 14)
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_WRD4_RVRT__RESET_VALUE      0x00000001U
/** @} */

/* macros for field crypt_aeskey_wrd8_rvrt */
/**
 * @defgroup at_lc_regs_core_crypt_aeskey_wrd8_rvrt_field crypt_aeskey_wrd8_rvrt_field
 * @brief macros for field crypt_aeskey_wrd8_rvrt
 * @details revert the 8 words order of aeskey
 * @{
 */
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_WRD8_RVRT__SHIFT                     15
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_WRD8_RVRT__WIDTH                      1
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_WRD8_RVRT__MASK             0x00008000U
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_WRD8_RVRT__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00008000U) >> 15)
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_WRD8_RVRT__WRITE(src) \
                    (((uint32_t)(src)\
                    << 15) & 0x00008000U)
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_WRD8_RVRT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | (((uint32_t)(src) <<\
                    15) & 0x00008000U)
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_WRD8_RVRT__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 15) & ~0x00008000U)))
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_WRD8_RVRT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | ((uint32_t)(1) << 15)
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_WRD8_RVRT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | ((uint32_t)(0) << 15)
#define ATLC_LC_BLE_CTRL1__CRYPT_AESKEY_WRD8_RVRT__RESET_VALUE      0x00000000U
/** @} */

/* macros for field max_rx_pyld_len */
/**
 * @defgroup at_lc_regs_core_max_rx_pyld_len_field max_rx_pyld_len_field
 * @brief macros for field max_rx_pyld_len
 * @details maximum allowed received packet length
 * @{
 */
#define ATLC_LC_BLE_CTRL1__MAX_RX_PYLD_LEN__SHIFT                            16
#define ATLC_LC_BLE_CTRL1__MAX_RX_PYLD_LEN__WIDTH                             8
#define ATLC_LC_BLE_CTRL1__MAX_RX_PYLD_LEN__MASK                    0x00ff0000U
#define ATLC_LC_BLE_CTRL1__MAX_RX_PYLD_LEN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_LC_BLE_CTRL1__MAX_RX_PYLD_LEN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00ff0000U)
#define ATLC_LC_BLE_CTRL1__MAX_RX_PYLD_LEN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00ff0000U) | (((uint32_t)(src) <<\
                    16) & 0x00ff0000U)
#define ATLC_LC_BLE_CTRL1__MAX_RX_PYLD_LEN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00ff0000U)))
#define ATLC_LC_BLE_CTRL1__MAX_RX_PYLD_LEN__RESET_VALUE             0x000000ffU
/** @} */

/* macros for field crypt_iv_byt_rvrt */
/**
 * @defgroup at_lc_regs_core_crypt_iv_byt_rvrt_field crypt_iv_byt_rvrt_field
 * @brief macros for field crypt_iv_byt_rvrt
 * @details revert the byte order within iv word
 * @{
 */
#define ATLC_LC_BLE_CTRL1__CRYPT_IV_BYT_RVRT__SHIFT                          24
#define ATLC_LC_BLE_CTRL1__CRYPT_IV_BYT_RVRT__WIDTH                           1
#define ATLC_LC_BLE_CTRL1__CRYPT_IV_BYT_RVRT__MASK                  0x01000000U
#define ATLC_LC_BLE_CTRL1__CRYPT_IV_BYT_RVRT__READ(src) \
                    (((uint32_t)(src)\
                    & 0x01000000U) >> 24)
#define ATLC_LC_BLE_CTRL1__CRYPT_IV_BYT_RVRT__WRITE(src) \
                    (((uint32_t)(src)\
                    << 24) & 0x01000000U)
#define ATLC_LC_BLE_CTRL1__CRYPT_IV_BYT_RVRT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x01000000U) | (((uint32_t)(src) <<\
                    24) & 0x01000000U)
#define ATLC_LC_BLE_CTRL1__CRYPT_IV_BYT_RVRT__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 24) & ~0x01000000U)))
#define ATLC_LC_BLE_CTRL1__CRYPT_IV_BYT_RVRT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x01000000U) | ((uint32_t)(1) << 24)
#define ATLC_LC_BLE_CTRL1__CRYPT_IV_BYT_RVRT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x01000000U) | ((uint32_t)(0) << 24)
#define ATLC_LC_BLE_CTRL1__CRYPT_IV_BYT_RVRT__RESET_VALUE           0x00000000U
/** @} */

/* macros for field crypt_iv_wrd2_rvrt */
/**
 * @defgroup at_lc_regs_core_crypt_iv_wrd2_rvrt_field crypt_iv_wrd2_rvrt_field
 * @brief macros for field crypt_iv_wrd2_rvrt
 * @details revert the 2 words order of iv
 * @{
 */
#define ATLC_LC_BLE_CTRL1__CRYPT_IV_WRD2_RVRT__SHIFT                         25
#define ATLC_LC_BLE_CTRL1__CRYPT_IV_WRD2_RVRT__WIDTH                          1
#define ATLC_LC_BLE_CTRL1__CRYPT_IV_WRD2_RVRT__MASK                 0x02000000U
#define ATLC_LC_BLE_CTRL1__CRYPT_IV_WRD2_RVRT__READ(src) \
                    (((uint32_t)(src)\
                    & 0x02000000U) >> 25)
#define ATLC_LC_BLE_CTRL1__CRYPT_IV_WRD2_RVRT__WRITE(src) \
                    (((uint32_t)(src)\
                    << 25) & 0x02000000U)
#define ATLC_LC_BLE_CTRL1__CRYPT_IV_WRD2_RVRT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x02000000U) | (((uint32_t)(src) <<\
                    25) & 0x02000000U)
#define ATLC_LC_BLE_CTRL1__CRYPT_IV_WRD2_RVRT__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 25) & ~0x02000000U)))
#define ATLC_LC_BLE_CTRL1__CRYPT_IV_WRD2_RVRT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x02000000U) | ((uint32_t)(1) << 25)
#define ATLC_LC_BLE_CTRL1__CRYPT_IV_WRD2_RVRT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x02000000U) | ((uint32_t)(0) << 25)
#define ATLC_LC_BLE_CTRL1__CRYPT_IV_WRD2_RVRT__RESET_VALUE          0x00000000U
/** @} */

/* macros for field crc_plynml_en */
/**
 * @defgroup at_lc_regs_core_crc_plynml_en_field crc_plynml_en_field
 * @brief macros for field crc_plynml_en
 * @details enable programmable polynomial
 * @{
 */
#define ATLC_LC_BLE_CTRL1__CRC_PLYNML_EN__SHIFT                              26
#define ATLC_LC_BLE_CTRL1__CRC_PLYNML_EN__WIDTH                               1
#define ATLC_LC_BLE_CTRL1__CRC_PLYNML_EN__MASK                      0x04000000U
#define ATLC_LC_BLE_CTRL1__CRC_PLYNML_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x04000000U) >> 26)
#define ATLC_LC_BLE_CTRL1__CRC_PLYNML_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 26) & 0x04000000U)
#define ATLC_LC_BLE_CTRL1__CRC_PLYNML_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x04000000U) | (((uint32_t)(src) <<\
                    26) & 0x04000000U)
#define ATLC_LC_BLE_CTRL1__CRC_PLYNML_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 26) & ~0x04000000U)))
#define ATLC_LC_BLE_CTRL1__CRC_PLYNML_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x04000000U) | ((uint32_t)(1) << 26)
#define ATLC_LC_BLE_CTRL1__CRC_PLYNML_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x04000000U) | ((uint32_t)(0) << 26)
#define ATLC_LC_BLE_CTRL1__CRC_PLYNML_EN__RESET_VALUE               0x00000000U
/** @} */
#define ATLC_LC_BLE_CTRL1__TYPE                                        uint32_t
#define ATLC_LC_BLE_CTRL1__READ                                     0x07ffffffU
#define ATLC_LC_BLE_CTRL1__WRITE                                    0x07ffffffU
#define ATLC_LC_BLE_CTRL1__PRESERVED                                0x00000000U
#define ATLC_LC_BLE_CTRL1__RESET_VALUE                              0x00ff6001U

#endif /* __ATLC_LC_BLE_CTRL1_MACRO__ */

/** @} end of lc_ble_ctrl1 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_ble_ctrl2 */
/**
 * @defgroup at_lc_regs_core_lc_ble_ctrl2 lc_ble_ctrl2
 * @brief Contains register fields associated with lc_ble_ctrl2. definitions.
 * @{
 */
#ifndef __ATLC_LC_BLE_CTRL2_MACRO__
#define __ATLC_LC_BLE_CTRL2_MACRO__

/* macros for field rx_to */
/**
 * @defgroup at_lc_regs_core_rx_to_field rx_to_field
 * @brief macros for field rx_to
 * @details receive window timeout in micro seconds no affect when descriptor mode is enabled. should not be set to 0.
 * @{
 */
#define ATLC_LC_BLE_CTRL2__RX_TO__SHIFT                                       0
#define ATLC_LC_BLE_CTRL2__RX_TO__WIDTH                                      32
#define ATLC_LC_BLE_CTRL2__RX_TO__MASK                              0xffffffffU
#define ATLC_LC_BLE_CTRL2__RX_TO__READ(src)     ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_BLE_CTRL2__RX_TO__WRITE(src)    ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_BLE_CTRL2__RX_TO__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_LC_BLE_CTRL2__RX_TO__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_LC_BLE_CTRL2__RX_TO__RESET_VALUE                       0x000001c2U
/** @} */
#define ATLC_LC_BLE_CTRL2__TYPE                                        uint32_t
#define ATLC_LC_BLE_CTRL2__READ                                     0xffffffffU
#define ATLC_LC_BLE_CTRL2__WRITE                                    0xffffffffU
#define ATLC_LC_BLE_CTRL2__PRESERVED                                0x00000000U
#define ATLC_LC_BLE_CTRL2__RESET_VALUE                              0x000001c2U

#endif /* __ATLC_LC_BLE_CTRL2_MACRO__ */

/** @} end of lc_ble_ctrl2 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_ble_ctrl3 */
/**
 * @defgroup at_lc_regs_core_lc_ble_ctrl3 lc_ble_ctrl3
 * @brief Contains register fields associated with lc_ble_ctrl3. definitions.
 * @{
 */
#ifndef __ATLC_LC_BLE_CTRL3_MACRO__
#define __ATLC_LC_BLE_CTRL3_MACRO__

/* macros for field artd */
/**
 * @defgroup at_lc_regs_core_artd_field artd_field
 * @brief macros for field artd
 * @details auto retransmit delay in micro seconds supported for flexMAC.
 * @{
 */
#define ATLC_LC_BLE_CTRL3__ARTD__SHIFT                                        0
#define ATLC_LC_BLE_CTRL3__ARTD__WIDTH                                        8
#define ATLC_LC_BLE_CTRL3__ARTD__MASK                               0x000000ffU
#define ATLC_LC_BLE_CTRL3__ARTD__READ(src)      ((uint32_t)(src) & 0x000000ffU)
#define ATLC_LC_BLE_CTRL3__ARTD__WRITE(src)     ((uint32_t)(src) & 0x000000ffU)
#define ATLC_LC_BLE_CTRL3__ARTD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_LC_BLE_CTRL3__ARTD__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_LC_BLE_CTRL3__ARTD__RESET_VALUE                        0x00000000U
/** @} */

/* macros for field artmx */
/**
 * @defgroup at_lc_regs_core_artmx_field artmx_field
 * @brief macros for field artmx
 * @details auto retransmit count for maximum number of retransmit supported for flexMAC.
 * @{
 */
#define ATLC_LC_BLE_CTRL3__ARTMX__SHIFT                                       8
#define ATLC_LC_BLE_CTRL3__ARTMX__WIDTH                                       4
#define ATLC_LC_BLE_CTRL3__ARTMX__MASK                              0x00000f00U
#define ATLC_LC_BLE_CTRL3__ARTMX__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000f00U) >> 8)
#define ATLC_LC_BLE_CTRL3__ARTMX__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00000f00U)
#define ATLC_LC_BLE_CTRL3__ARTMX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000f00U) | (((uint32_t)(src) <<\
                    8) & 0x00000f00U)
#define ATLC_LC_BLE_CTRL3__ARTMX__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00000f00U)))
#define ATLC_LC_BLE_CTRL3__ARTMX__RESET_VALUE                       0x00000000U
/** @} */
#define ATLC_LC_BLE_CTRL3__TYPE                                        uint32_t
#define ATLC_LC_BLE_CTRL3__READ                                     0x00000fffU
#define ATLC_LC_BLE_CTRL3__WRITE                                    0x00000fffU
#define ATLC_LC_BLE_CTRL3__PRESERVED                                0x00000000U
#define ATLC_LC_BLE_CTRL3__RESET_VALUE                              0x00000000U

#endif /* __ATLC_LC_BLE_CTRL3_MACRO__ */

/** @} end of lc_ble_ctrl3 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_ble_ctrl4 */
/**
 * @defgroup at_lc_regs_core_lc_ble_ctrl4 lc_ble_ctrl4
 * @brief Contains register fields associated with lc_ble_ctrl4. definitions.
 * @{
 */
#ifndef __ATLC_LC_BLE_CTRL4_MACRO__
#define __ATLC_LC_BLE_CTRL4_MACRO__

/* macros for field chnl_hp_en */
/**
 * @defgroup at_lc_regs_core_chnl_hp_en_field chnl_hp_en_field
 * @brief macros for field chnl_hp_en
 * @details enable auto channel hopping not supported now. sw controls channel hoping.
 * @{
 */
#define ATLC_LC_BLE_CTRL4__CHNL_HP_EN__SHIFT                                  0
#define ATLC_LC_BLE_CTRL4__CHNL_HP_EN__WIDTH                                  1
#define ATLC_LC_BLE_CTRL4__CHNL_HP_EN__MASK                         0x00000001U
#define ATLC_LC_BLE_CTRL4__CHNL_HP_EN__READ(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_LC_BLE_CTRL4__CHNL_HP_EN__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_LC_BLE_CTRL4__CHNL_HP_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_LC_BLE_CTRL4__CHNL_HP_EN__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_LC_BLE_CTRL4__CHNL_HP_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_BLE_CTRL4__CHNL_HP_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_BLE_CTRL4__CHNL_HP_EN__RESET_VALUE                  0x00000000U
/** @} */

/* macros for field chnl_idx */
/**
 * @defgroup at_lc_regs_core_chnl_idx_field chnl_idx_field
 * @brief macros for field chnl_idx
 * @details offset from 2402MHz in 1MHz steps no effect when descriptor mode is enabled.
 * @{
 */
#define ATLC_LC_BLE_CTRL4__CHNL_IDX__SHIFT                                    8
#define ATLC_LC_BLE_CTRL4__CHNL_IDX__WIDTH                                    7
#define ATLC_LC_BLE_CTRL4__CHNL_IDX__MASK                           0x00007f00U
#define ATLC_LC_BLE_CTRL4__CHNL_IDX__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00007f00U) >> 8)
#define ATLC_LC_BLE_CTRL4__CHNL_IDX__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00007f00U)
#define ATLC_LC_BLE_CTRL4__CHNL_IDX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00007f00U) | (((uint32_t)(src) <<\
                    8) & 0x00007f00U)
#define ATLC_LC_BLE_CTRL4__CHNL_IDX__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00007f00U)))
#define ATLC_LC_BLE_CTRL4__CHNL_IDX__RESET_VALUE                    0x00000001U
/** @} */

/* macros for field tx_pwr */
/**
 * @defgroup at_lc_regs_core_tx_pwr_field tx_pwr_field
 * @brief macros for field tx_pwr
 * @details tx power pass directly to radio TX power level entry 0, -20dBm TX power level entry 1, -10dBm TX power level entry 2, -8dBm TX power level entry 3, -6dBm TX power level entry 4, -4dBm TX power level entry 5, -2dBm TX power level entry 6, 0dBm TX power level entry 7, 2dBm TX power level entry 8, 4dBm TX power level entry 9, 6dBm TX power level entry 10, 8dBm TX power level entry 11, extra no effect when descriptor mode is enabled.
 * @{
 */
#define ATLC_LC_BLE_CTRL4__TX_PWR__SHIFT                                     16
#define ATLC_LC_BLE_CTRL4__TX_PWR__WIDTH                                      4
#define ATLC_LC_BLE_CTRL4__TX_PWR__MASK                             0x000f0000U
#define ATLC_LC_BLE_CTRL4__TX_PWR__READ(src) \
                    (((uint32_t)(src)\
                    & 0x000f0000U) >> 16)
#define ATLC_LC_BLE_CTRL4__TX_PWR__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x000f0000U)
#define ATLC_LC_BLE_CTRL4__TX_PWR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000f0000U) | (((uint32_t)(src) <<\
                    16) & 0x000f0000U)
#define ATLC_LC_BLE_CTRL4__TX_PWR__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x000f0000U)))
#define ATLC_LC_BLE_CTRL4__TX_PWR__RESET_VALUE                      0x00000001U
/** @} */
#define ATLC_LC_BLE_CTRL4__TYPE                                        uint32_t
#define ATLC_LC_BLE_CTRL4__READ                                     0x000f7f01U
#define ATLC_LC_BLE_CTRL4__WRITE                                    0x000f7f01U
#define ATLC_LC_BLE_CTRL4__PRESERVED                                0x00000000U
#define ATLC_LC_BLE_CTRL4__RESET_VALUE                              0x00010100U

#endif /* __ATLC_LC_BLE_CTRL4_MACRO__ */

/** @} end of lc_ble_ctrl4 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_ble_ctrl5 */
/**
 * @defgroup at_lc_regs_core_lc_ble_ctrl5 lc_ble_ctrl5
 * @brief Contains register fields associated with lc_ble_ctrl5. definitions.
 * @{
 */
#ifndef __ATLC_LC_BLE_CTRL5_MACRO__
#define __ATLC_LC_BLE_CTRL5_MACRO__

/* macros for field endianness */
/**
 * @defgroup at_lc_regs_core_endianness_field endianness_field
 * @brief macros for field endianness
 * @details 0 => lsb of each byte LSB is transmitted first, 1 => msb of each byte MSB is transmitted first applies to all fields except crc.
 * @{
 */
#define ATLC_LC_BLE_CTRL5__ENDIANNESS__SHIFT                                  0
#define ATLC_LC_BLE_CTRL5__ENDIANNESS__WIDTH                                  1
#define ATLC_LC_BLE_CTRL5__ENDIANNESS__MASK                         0x00000001U
#define ATLC_LC_BLE_CTRL5__ENDIANNESS__READ(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_LC_BLE_CTRL5__ENDIANNESS__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_LC_BLE_CTRL5__ENDIANNESS__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_LC_BLE_CTRL5__ENDIANNESS__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_LC_BLE_CTRL5__ENDIANNESS__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_BLE_CTRL5__ENDIANNESS__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_BLE_CTRL5__ENDIANNESS__RESET_VALUE                  0x00000000U
/** @} */

/* macros for field sync_wrd_sel */
/**
 * @defgroup at_lc_regs_core_sync_wrd_sel_field sync_wrd_sel_field
 * @brief macros for field sync_wrd_sel
 * @details 0 => use sync word 0, 1 => use sync word 1 used in basic mode, ignored in enhanced mode since it is specified in header supported for flexMAC which can choose different sync word.
 * @{
 */
#define ATLC_LC_BLE_CTRL5__SYNC_WRD_SEL__SHIFT                                1
#define ATLC_LC_BLE_CTRL5__SYNC_WRD_SEL__WIDTH                                1
#define ATLC_LC_BLE_CTRL5__SYNC_WRD_SEL__MASK                       0x00000002U
#define ATLC_LC_BLE_CTRL5__SYNC_WRD_SEL__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000002U) >> 1)
#define ATLC_LC_BLE_CTRL5__SYNC_WRD_SEL__WRITE(src) \
                    (((uint32_t)(src)\
                    << 1) & 0x00000002U)
#define ATLC_LC_BLE_CTRL5__SYNC_WRD_SEL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | (((uint32_t)(src) <<\
                    1) & 0x00000002U)
#define ATLC_LC_BLE_CTRL5__SYNC_WRD_SEL__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 1) & ~0x00000002U)))
#define ATLC_LC_BLE_CTRL5__SYNC_WRD_SEL__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(1) << 1)
#define ATLC_LC_BLE_CTRL5__SYNC_WRD_SEL__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(0) << 1)
#define ATLC_LC_BLE_CTRL5__SYNC_WRD_SEL__RESET_VALUE                0x00000000U
/** @} */

/* macros for field nd_rx */
/**
 * @defgroup at_lc_regs_core_nd_rx_field nd_rx_field
 * @brief macros for field nd_rx
 * @details node index when address length => 0 0 for BLE/154 where address length is 0.
 * @{
 */
#define ATLC_LC_BLE_CTRL5__ND_RX__SHIFT                                       4
#define ATLC_LC_BLE_CTRL5__ND_RX__WIDTH                                       3
#define ATLC_LC_BLE_CTRL5__ND_RX__MASK                              0x00000070U
#define ATLC_LC_BLE_CTRL5__ND_RX__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000070U) >> 4)
#define ATLC_LC_BLE_CTRL5__ND_RX__WRITE(src) \
                    (((uint32_t)(src)\
                    << 4) & 0x00000070U)
#define ATLC_LC_BLE_CTRL5__ND_RX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000070U) | (((uint32_t)(src) <<\
                    4) & 0x00000070U)
#define ATLC_LC_BLE_CTRL5__ND_RX__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 4) & ~0x00000070U)))
#define ATLC_LC_BLE_CTRL5__ND_RX__RESET_VALUE                       0x00000000U
/** @} */

/* macros for field endianness_crc */
/**
 * @defgroup at_lc_regs_core_endianness_crc_field endianness_crc_field
 * @brief macros for field endianness_crc
 * @details 0 => lsb of each byte LSB is transmitted first, 1 => msb of each byte MSB is transmitted first applies to only crc.
 * @{
 */
#define ATLC_LC_BLE_CTRL5__ENDIANNESS_CRC__SHIFT                              7
#define ATLC_LC_BLE_CTRL5__ENDIANNESS_CRC__WIDTH                              1
#define ATLC_LC_BLE_CTRL5__ENDIANNESS_CRC__MASK                     0x00000080U
#define ATLC_LC_BLE_CTRL5__ENDIANNESS_CRC__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000080U) >> 7)
#define ATLC_LC_BLE_CTRL5__ENDIANNESS_CRC__WRITE(src) \
                    (((uint32_t)(src)\
                    << 7) & 0x00000080U)
#define ATLC_LC_BLE_CTRL5__ENDIANNESS_CRC__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | (((uint32_t)(src) <<\
                    7) & 0x00000080U)
#define ATLC_LC_BLE_CTRL5__ENDIANNESS_CRC__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 7) & ~0x00000080U)))
#define ATLC_LC_BLE_CTRL5__ENDIANNESS_CRC__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(1) << 7)
#define ATLC_LC_BLE_CTRL5__ENDIANNESS_CRC__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(0) << 7)
#define ATLC_LC_BLE_CTRL5__ENDIANNESS_CRC__RESET_VALUE              0x00000001U
/** @} */

/* macros for field rx_sync_pls_n */
/**
 * @defgroup at_lc_regs_core_rx_sync_pls_n_field rx_sync_pls_n_field
 * @brief macros for field rx_sync_pls_n
 * @details generate an interrupt after receiving this number of bits after sync words
 * @{
 */
#define ATLC_LC_BLE_CTRL5__RX_SYNC_PLS_N__SHIFT                               8
#define ATLC_LC_BLE_CTRL5__RX_SYNC_PLS_N__WIDTH                              11
#define ATLC_LC_BLE_CTRL5__RX_SYNC_PLS_N__MASK                      0x0007ff00U
#define ATLC_LC_BLE_CTRL5__RX_SYNC_PLS_N__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0007ff00U) >> 8)
#define ATLC_LC_BLE_CTRL5__RX_SYNC_PLS_N__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0007ff00U)
#define ATLC_LC_BLE_CTRL5__RX_SYNC_PLS_N__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0007ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0007ff00U)
#define ATLC_LC_BLE_CTRL5__RX_SYNC_PLS_N__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0007ff00U)))
#define ATLC_LC_BLE_CTRL5__RX_SYNC_PLS_N__RESET_VALUE               0x00000000U
/** @} */

/* macros for field rx_sync_pls_n_en */
/**
 * @defgroup at_lc_regs_core_rx_sync_pls_n_en_field rx_sync_pls_n_en_field
 * @brief macros for field rx_sync_pls_n_en
 * @details enable bit of rx_sync_pls_n interrupt generation
 * @{
 */
#define ATLC_LC_BLE_CTRL5__RX_SYNC_PLS_N_EN__SHIFT                           19
#define ATLC_LC_BLE_CTRL5__RX_SYNC_PLS_N_EN__WIDTH                            1
#define ATLC_LC_BLE_CTRL5__RX_SYNC_PLS_N_EN__MASK                   0x00080000U
#define ATLC_LC_BLE_CTRL5__RX_SYNC_PLS_N_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00080000U) >> 19)
#define ATLC_LC_BLE_CTRL5__RX_SYNC_PLS_N_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 19) & 0x00080000U)
#define ATLC_LC_BLE_CTRL5__RX_SYNC_PLS_N_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00080000U) | (((uint32_t)(src) <<\
                    19) & 0x00080000U)
#define ATLC_LC_BLE_CTRL5__RX_SYNC_PLS_N_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 19) & ~0x00080000U)))
#define ATLC_LC_BLE_CTRL5__RX_SYNC_PLS_N_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00080000U) | ((uint32_t)(1) << 19)
#define ATLC_LC_BLE_CTRL5__RX_SYNC_PLS_N_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00080000U) | ((uint32_t)(0) << 19)
#define ATLC_LC_BLE_CTRL5__RX_SYNC_PLS_N_EN__RESET_VALUE            0x00000000U
/** @} */

/* macros for field tm_stmp_pst_chk_en */
/**
 * @defgroup at_lc_regs_core_tm_stmp_pst_chk_en_field tm_stmp_pst_chk_en_field
 * @brief macros for field tm_stmp_pst_chk_en
 * @details enable bit of past time stamp check
 * @{
 */
#define ATLC_LC_BLE_CTRL5__TM_STMP_PST_CHK_EN__SHIFT                         20
#define ATLC_LC_BLE_CTRL5__TM_STMP_PST_CHK_EN__WIDTH                          1
#define ATLC_LC_BLE_CTRL5__TM_STMP_PST_CHK_EN__MASK                 0x00100000U
#define ATLC_LC_BLE_CTRL5__TM_STMP_PST_CHK_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00100000U) >> 20)
#define ATLC_LC_BLE_CTRL5__TM_STMP_PST_CHK_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 20) & 0x00100000U)
#define ATLC_LC_BLE_CTRL5__TM_STMP_PST_CHK_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00100000U) | (((uint32_t)(src) <<\
                    20) & 0x00100000U)
#define ATLC_LC_BLE_CTRL5__TM_STMP_PST_CHK_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 20) & ~0x00100000U)))
#define ATLC_LC_BLE_CTRL5__TM_STMP_PST_CHK_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00100000U) | ((uint32_t)(1) << 20)
#define ATLC_LC_BLE_CTRL5__TM_STMP_PST_CHK_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00100000U) | ((uint32_t)(0) << 20)
#define ATLC_LC_BLE_CTRL5__TM_STMP_PST_CHK_EN__RESET_VALUE          0x00000001U
/** @} */

/* macros for field phr_err_chk_en */
/**
 * @defgroup at_lc_regs_core_phr_err_chk_en_field phr_err_chk_en_field
 * @brief macros for field phr_err_chk_en
 * @details Not used for BLE. Keep it as 0
 * @{
 */
#define ATLC_LC_BLE_CTRL5__PHR_ERR_CHK_EN__SHIFT                             21
#define ATLC_LC_BLE_CTRL5__PHR_ERR_CHK_EN__WIDTH                              1
#define ATLC_LC_BLE_CTRL5__PHR_ERR_CHK_EN__MASK                     0x00200000U
#define ATLC_LC_BLE_CTRL5__PHR_ERR_CHK_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00200000U) >> 21)
#define ATLC_LC_BLE_CTRL5__PHR_ERR_CHK_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 21) & 0x00200000U)
#define ATLC_LC_BLE_CTRL5__PHR_ERR_CHK_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00200000U) | (((uint32_t)(src) <<\
                    21) & 0x00200000U)
#define ATLC_LC_BLE_CTRL5__PHR_ERR_CHK_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 21) & ~0x00200000U)))
#define ATLC_LC_BLE_CTRL5__PHR_ERR_CHK_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00200000U) | ((uint32_t)(1) << 21)
#define ATLC_LC_BLE_CTRL5__PHR_ERR_CHK_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00200000U) | ((uint32_t)(0) << 21)
#define ATLC_LC_BLE_CTRL5__PHR_ERR_CHK_EN__RESET_VALUE              0x00000000U
/** @} */
#define ATLC_LC_BLE_CTRL5__TYPE                                        uint32_t
#define ATLC_LC_BLE_CTRL5__READ                                     0x003ffff3U
#define ATLC_LC_BLE_CTRL5__WRITE                                    0x003ffff3U
#define ATLC_LC_BLE_CTRL5__PRESERVED                                0x00000000U
#define ATLC_LC_BLE_CTRL5__RESET_VALUE                              0x00100080U

#endif /* __ATLC_LC_BLE_CTRL5_MACRO__ */

/** @} end of lc_ble_ctrl5 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_ble_ctrl6 */
/**
 * @defgroup at_lc_regs_core_lc_ble_ctrl6 lc_ble_ctrl6
 * @brief Contains register fields associated with lc_ble_ctrl6. definitions.
 * @{
 */
#ifndef __ATLC_LC_BLE_CTRL6_MACRO__
#define __ATLC_LC_BLE_CTRL6_MACRO__

/* macros for field rate */
/**
 * @defgroup at_lc_regs_core_rate_field rate_field
 * @brief macros for field rate
 * @details 0 => 1M, 1 => 2M, 2 => 500K, 3 => 125K
 * @{
 */
#define ATLC_LC_BLE_CTRL6__RATE__SHIFT                                        0
#define ATLC_LC_BLE_CTRL6__RATE__WIDTH                                        4
#define ATLC_LC_BLE_CTRL6__RATE__MASK                               0x0000000fU
#define ATLC_LC_BLE_CTRL6__RATE__READ(src)      ((uint32_t)(src) & 0x0000000fU)
#define ATLC_LC_BLE_CTRL6__RATE__WRITE(src)     ((uint32_t)(src) & 0x0000000fU)
#define ATLC_LC_BLE_CTRL6__RATE__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000000fU) | ((uint32_t)(src) &\
                    0x0000000fU)
#define ATLC_LC_BLE_CTRL6__RATE__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x0000000fU)))
#define ATLC_LC_BLE_CTRL6__RATE__RESET_VALUE                        0x00000000U
/** @} */

/* macros for field phdr_len */
/**
 * @defgroup at_lc_regs_core_phdr_len_field phdr_len_field
 * @brief macros for field phdr_len
 * @details phy header length in bytes. Fixed at 2 for BLE.
 * @{
 */
#define ATLC_LC_BLE_CTRL6__PHDR_LEN__SHIFT                                    4
#define ATLC_LC_BLE_CTRL6__PHDR_LEN__WIDTH                                    4
#define ATLC_LC_BLE_CTRL6__PHDR_LEN__MASK                           0x000000f0U
#define ATLC_LC_BLE_CTRL6__PHDR_LEN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x000000f0U) >> 4)
#define ATLC_LC_BLE_CTRL6__PHDR_LEN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 4) & 0x000000f0U)
#define ATLC_LC_BLE_CTRL6__PHDR_LEN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000f0U) | (((uint32_t)(src) <<\
                    4) & 0x000000f0U)
#define ATLC_LC_BLE_CTRL6__PHDR_LEN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 4) & ~0x000000f0U)))
#define ATLC_LC_BLE_CTRL6__PHDR_LEN__RESET_VALUE                    0x00000002U
/** @} */

/* macros for field mic_len */
/**
 * @defgroup at_lc_regs_core_mic_len_field mic_len_field
 * @brief macros for field mic_len
 * @details 0 => no mic, 1 => 4 byte
 * @{
 */
#define ATLC_LC_BLE_CTRL6__MIC_LEN__SHIFT                                     8
#define ATLC_LC_BLE_CTRL6__MIC_LEN__WIDTH                                     2
#define ATLC_LC_BLE_CTRL6__MIC_LEN__MASK                            0x00000300U
#define ATLC_LC_BLE_CTRL6__MIC_LEN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000300U) >> 8)
#define ATLC_LC_BLE_CTRL6__MIC_LEN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00000300U)
#define ATLC_LC_BLE_CTRL6__MIC_LEN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000300U) | (((uint32_t)(src) <<\
                    8) & 0x00000300U)
#define ATLC_LC_BLE_CTRL6__MIC_LEN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00000300U)))
#define ATLC_LC_BLE_CTRL6__MIC_LEN__RESET_VALUE                     0x00000000U
/** @} */

/* macros for field hdr_ftch_dly_sync_pls_n_2mbps */
/**
 * @defgroup at_lc_regs_core_hdr_ftch_dly_sync_pls_n_2mbps_field hdr_ftch_dly_sync_pls_n_2mbps_field
 * @brief macros for field hdr_ftch_dly_sync_pls_n_2mbps
 * @details delay header fetch n bit after sync word starts to be transmitted used only when hdr_ftch_dly_en is set.
 * @{
 */
#define ATLC_LC_BLE_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N_2MBPS__SHIFT              10
#define ATLC_LC_BLE_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N_2MBPS__WIDTH               5
#define ATLC_LC_BLE_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N_2MBPS__MASK      0x00007c00U
#define ATLC_LC_BLE_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N_2MBPS__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00007c00U) >> 10)
#define ATLC_LC_BLE_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N_2MBPS__WRITE(src) \
                    (((uint32_t)(src)\
                    << 10) & 0x00007c00U)
#define ATLC_LC_BLE_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N_2MBPS__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00007c00U) | (((uint32_t)(src) <<\
                    10) & 0x00007c00U)
#define ATLC_LC_BLE_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N_2MBPS__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 10) & ~0x00007c00U)))
#define ATLC_LC_BLE_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N_2MBPS__RESET_VALUE \
                    0x00000010U
/** @} */

/* macros for field hdr_ftch_dly_sync_pls_n_1mbps */
/**
 * @defgroup at_lc_regs_core_hdr_ftch_dly_sync_pls_n_1mbps_field hdr_ftch_dly_sync_pls_n_1mbps_field
 * @brief macros for field hdr_ftch_dly_sync_pls_n_1mbps
 * @details delay header fetch n bit after sync word starts to be transmitted used only when hdr_ftch_dly_en is set.
 * @{
 */
#define ATLC_LC_BLE_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N_1MBPS__SHIFT              15
#define ATLC_LC_BLE_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N_1MBPS__WIDTH               5
#define ATLC_LC_BLE_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N_1MBPS__MASK      0x000f8000U
#define ATLC_LC_BLE_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N_1MBPS__READ(src) \
                    (((uint32_t)(src)\
                    & 0x000f8000U) >> 15)
#define ATLC_LC_BLE_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N_1MBPS__WRITE(src) \
                    (((uint32_t)(src)\
                    << 15) & 0x000f8000U)
#define ATLC_LC_BLE_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N_1MBPS__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000f8000U) | (((uint32_t)(src) <<\
                    15) & 0x000f8000U)
#define ATLC_LC_BLE_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N_1MBPS__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 15) & ~0x000f8000U)))
#define ATLC_LC_BLE_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N_1MBPS__RESET_VALUE \
                    0x00000018U
/** @} */
#define ATLC_LC_BLE_CTRL6__TYPE                                        uint32_t
#define ATLC_LC_BLE_CTRL6__READ                                     0x000fffffU
#define ATLC_LC_BLE_CTRL6__WRITE                                    0x000fffffU
#define ATLC_LC_BLE_CTRL6__PRESERVED                                0x00000000U
#define ATLC_LC_BLE_CTRL6__RESET_VALUE                              0x000c4020U

#endif /* __ATLC_LC_BLE_CTRL6_MACRO__ */

/** @} end of lc_ble_ctrl6 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_ble_ctrl7 */
/**
 * @defgroup at_lc_regs_core_lc_ble_ctrl7 lc_ble_ctrl7
 * @brief Contains register fields associated with lc_ble_ctrl7. definitions.
 * @{
 */
#ifndef __ATLC_LC_BLE_CTRL7_MACRO__
#define __ATLC_LC_BLE_CTRL7_MACRO__

/* macros for field rx_ed_mns_n */
/**
 * @defgroup at_lc_regs_core_rx_ed_mns_n_field rx_ed_mns_n_field
 * @brief macros for field rx_ed_mns_n
 * @details generate an interrupt this number of us before rx end
 * @{
 */
#define ATLC_LC_BLE_CTRL7__RX_ED_MNS_N__SHIFT                                 0
#define ATLC_LC_BLE_CTRL7__RX_ED_MNS_N__WIDTH                                 7
#define ATLC_LC_BLE_CTRL7__RX_ED_MNS_N__MASK                        0x0000007fU
#define ATLC_LC_BLE_CTRL7__RX_ED_MNS_N__READ(src) \
                    ((uint32_t)(src)\
                    & 0x0000007fU)
#define ATLC_LC_BLE_CTRL7__RX_ED_MNS_N__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x0000007fU)
#define ATLC_LC_BLE_CTRL7__RX_ED_MNS_N__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000007fU) | ((uint32_t)(src) &\
                    0x0000007fU)
#define ATLC_LC_BLE_CTRL7__RX_ED_MNS_N__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x0000007fU)))
#define ATLC_LC_BLE_CTRL7__RX_ED_MNS_N__RESET_VALUE                 0x00000010U
/** @} */

/* macros for field rx_ed_mns_n_en */
/**
 * @defgroup at_lc_regs_core_rx_ed_mns_n_en_field rx_ed_mns_n_en_field
 * @brief macros for field rx_ed_mns_n_en
 * @details enable bit of rx_ed_mns_n interrupt generation
 * @{
 */
#define ATLC_LC_BLE_CTRL7__RX_ED_MNS_N_EN__SHIFT                              7
#define ATLC_LC_BLE_CTRL7__RX_ED_MNS_N_EN__WIDTH                              1
#define ATLC_LC_BLE_CTRL7__RX_ED_MNS_N_EN__MASK                     0x00000080U
#define ATLC_LC_BLE_CTRL7__RX_ED_MNS_N_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000080U) >> 7)
#define ATLC_LC_BLE_CTRL7__RX_ED_MNS_N_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 7) & 0x00000080U)
#define ATLC_LC_BLE_CTRL7__RX_ED_MNS_N_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | (((uint32_t)(src) <<\
                    7) & 0x00000080U)
#define ATLC_LC_BLE_CTRL7__RX_ED_MNS_N_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 7) & ~0x00000080U)))
#define ATLC_LC_BLE_CTRL7__RX_ED_MNS_N_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(1) << 7)
#define ATLC_LC_BLE_CTRL7__RX_ED_MNS_N_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(0) << 7)
#define ATLC_LC_BLE_CTRL7__RX_ED_MNS_N_EN__RESET_VALUE              0x00000001U
/** @} */

/* macros for field tx_ed_mns_n */
/**
 * @defgroup at_lc_regs_core_tx_ed_mns_n_field tx_ed_mns_n_field
 * @brief macros for field tx_ed_mns_n
 * @details generate an interrupt this number of us before tx end
 * @{
 */
#define ATLC_LC_BLE_CTRL7__TX_ED_MNS_N__SHIFT                                 8
#define ATLC_LC_BLE_CTRL7__TX_ED_MNS_N__WIDTH                                 7
#define ATLC_LC_BLE_CTRL7__TX_ED_MNS_N__MASK                        0x00007f00U
#define ATLC_LC_BLE_CTRL7__TX_ED_MNS_N__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00007f00U) >> 8)
#define ATLC_LC_BLE_CTRL7__TX_ED_MNS_N__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00007f00U)
#define ATLC_LC_BLE_CTRL7__TX_ED_MNS_N__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00007f00U) | (((uint32_t)(src) <<\
                    8) & 0x00007f00U)
#define ATLC_LC_BLE_CTRL7__TX_ED_MNS_N__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00007f00U)))
#define ATLC_LC_BLE_CTRL7__TX_ED_MNS_N__RESET_VALUE                 0x0000000eU
/** @} */

/* macros for field tx_ed_mns_n_en */
/**
 * @defgroup at_lc_regs_core_tx_ed_mns_n_en_field tx_ed_mns_n_en_field
 * @brief macros for field tx_ed_mns_n_en
 * @details enable bit of tx_ed_mns_n interrupt generation
 * @{
 */
#define ATLC_LC_BLE_CTRL7__TX_ED_MNS_N_EN__SHIFT                             15
#define ATLC_LC_BLE_CTRL7__TX_ED_MNS_N_EN__WIDTH                              1
#define ATLC_LC_BLE_CTRL7__TX_ED_MNS_N_EN__MASK                     0x00008000U
#define ATLC_LC_BLE_CTRL7__TX_ED_MNS_N_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00008000U) >> 15)
#define ATLC_LC_BLE_CTRL7__TX_ED_MNS_N_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 15) & 0x00008000U)
#define ATLC_LC_BLE_CTRL7__TX_ED_MNS_N_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | (((uint32_t)(src) <<\
                    15) & 0x00008000U)
#define ATLC_LC_BLE_CTRL7__TX_ED_MNS_N_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 15) & ~0x00008000U)))
#define ATLC_LC_BLE_CTRL7__TX_ED_MNS_N_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | ((uint32_t)(1) << 15)
#define ATLC_LC_BLE_CTRL7__TX_ED_MNS_N_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | ((uint32_t)(0) << 15)
#define ATLC_LC_BLE_CTRL7__TX_ED_MNS_N_EN__RESET_VALUE              0x00000001U
/** @} */

/* macros for field rx_ed_mns_n_pst_en */
/**
 * @defgroup at_lc_regs_core_rx_ed_mns_n_pst_en_field rx_ed_mns_n_pst_en_field
 * @brief macros for field rx_ed_mns_n_pst_en
 * @details generate rx_ed_mns_n interrupt when ATLC finds the requested time has already passed.
 * @{
 */
#define ATLC_LC_BLE_CTRL7__RX_ED_MNS_N_PST_EN__SHIFT                         16
#define ATLC_LC_BLE_CTRL7__RX_ED_MNS_N_PST_EN__WIDTH                          1
#define ATLC_LC_BLE_CTRL7__RX_ED_MNS_N_PST_EN__MASK                 0x00010000U
#define ATLC_LC_BLE_CTRL7__RX_ED_MNS_N_PST_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_LC_BLE_CTRL7__RX_ED_MNS_N_PST_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00010000U)
#define ATLC_LC_BLE_CTRL7__RX_ED_MNS_N_PST_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | (((uint32_t)(src) <<\
                    16) & 0x00010000U)
#define ATLC_LC_BLE_CTRL7__RX_ED_MNS_N_PST_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00010000U)))
#define ATLC_LC_BLE_CTRL7__RX_ED_MNS_N_PST_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_LC_BLE_CTRL7__RX_ED_MNS_N_PST_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_LC_BLE_CTRL7__RX_ED_MNS_N_PST_EN__RESET_VALUE          0x00000001U
/** @} */

/* macros for field tx_ed_mns_n_pst_en */
/**
 * @defgroup at_lc_regs_core_tx_ed_mns_n_pst_en_field tx_ed_mns_n_pst_en_field
 * @brief macros for field tx_ed_mns_n_pst_en
 * @details generate tx_ed_mns_n interrupt when ATLC finds the requested time has already passed.
 * @{
 */
#define ATLC_LC_BLE_CTRL7__TX_ED_MNS_N_PST_EN__SHIFT                         17
#define ATLC_LC_BLE_CTRL7__TX_ED_MNS_N_PST_EN__WIDTH                          1
#define ATLC_LC_BLE_CTRL7__TX_ED_MNS_N_PST_EN__MASK                 0x00020000U
#define ATLC_LC_BLE_CTRL7__TX_ED_MNS_N_PST_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00020000U) >> 17)
#define ATLC_LC_BLE_CTRL7__TX_ED_MNS_N_PST_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 17) & 0x00020000U)
#define ATLC_LC_BLE_CTRL7__TX_ED_MNS_N_PST_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00020000U) | (((uint32_t)(src) <<\
                    17) & 0x00020000U)
#define ATLC_LC_BLE_CTRL7__TX_ED_MNS_N_PST_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 17) & ~0x00020000U)))
#define ATLC_LC_BLE_CTRL7__TX_ED_MNS_N_PST_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00020000U) | ((uint32_t)(1) << 17)
#define ATLC_LC_BLE_CTRL7__TX_ED_MNS_N_PST_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00020000U) | ((uint32_t)(0) << 17)
#define ATLC_LC_BLE_CTRL7__TX_ED_MNS_N_PST_EN__RESET_VALUE          0x00000001U
/** @} */
#define ATLC_LC_BLE_CTRL7__TYPE                                        uint32_t
#define ATLC_LC_BLE_CTRL7__READ                                     0x0003ffffU
#define ATLC_LC_BLE_CTRL7__WRITE                                    0x0003ffffU
#define ATLC_LC_BLE_CTRL7__PRESERVED                                0x00000000U
#define ATLC_LC_BLE_CTRL7__RESET_VALUE                              0x00038e90U

#endif /* __ATLC_LC_BLE_CTRL7_MACRO__ */

/** @} end of lc_ble_ctrl7 */

/* macros for BlueprintGlobalNameSpace::ATLC_mac_154_ctrl0 */
/**
 * @defgroup at_lc_regs_core_mac_154_ctrl0 mac_154_ctrl0
 * @brief Contains register fields associated with mac_154_ctrl0. definitions.
 * @{
 */
#ifndef __ATLC_MAC_154_CTRL0_MACRO__
#define __ATLC_MAC_154_CTRL0_MACRO__

/* macros for field at_lc_md */
/**
 * @defgroup at_lc_regs_core_at_lc_md_field at_lc_md_field
 * @brief macros for field at_lc_md
 * @details 1 => use atmosic lc, 0 => use ceva lc supported only for chip with both atlc and ceva.
 * @{
 */
#define ATLC_MAC_154_CTRL0__AT_LC_MD__SHIFT                                   0
#define ATLC_MAC_154_CTRL0__AT_LC_MD__WIDTH                                   1
#define ATLC_MAC_154_CTRL0__AT_LC_MD__MASK                          0x00000001U
#define ATLC_MAC_154_CTRL0__AT_LC_MD__READ(src) ((uint32_t)(src) & 0x00000001U)
#define ATLC_MAC_154_CTRL0__AT_LC_MD__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_MAC_154_CTRL0__AT_LC_MD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_MAC_154_CTRL0__AT_LC_MD__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_MAC_154_CTRL0__AT_LC_MD__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_MAC_154_CTRL0__AT_LC_MD__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_MAC_154_CTRL0__AT_LC_MD__RESET_VALUE                   0x00000001U
/** @} */

/* macros for field op_md */
/**
 * @defgroup at_lc_regs_core_op_md_field op_md_field
 * @brief macros for field op_md
 * @details operation mode 1 => host, 0 => device supported for flexMAC set to 0 for BLE/154.
 * @{
 */
#define ATLC_MAC_154_CTRL0__OP_MD__SHIFT                                      1
#define ATLC_MAC_154_CTRL0__OP_MD__WIDTH                                      1
#define ATLC_MAC_154_CTRL0__OP_MD__MASK                             0x00000002U
#define ATLC_MAC_154_CTRL0__OP_MD__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000002U) >> 1)
#define ATLC_MAC_154_CTRL0__OP_MD__WRITE(src) \
                    (((uint32_t)(src)\
                    << 1) & 0x00000002U)
#define ATLC_MAC_154_CTRL0__OP_MD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | (((uint32_t)(src) <<\
                    1) & 0x00000002U)
#define ATLC_MAC_154_CTRL0__OP_MD__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 1) & ~0x00000002U)))
#define ATLC_MAC_154_CTRL0__OP_MD__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(1) << 1)
#define ATLC_MAC_154_CTRL0__OP_MD__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(0) << 1)
#define ATLC_MAC_154_CTRL0__OP_MD__RESET_VALUE                      0x00000000U
/** @} */

/* macros for field flw_md */
/**
 * @defgroup at_lc_regs_core_flw_md_field flw_md_field
 * @brief macros for field flw_md
 * @details flow cmode 1 => enhanced flexMAC, 0 => basic flexMAC set to 1 for BLE/154.
 * @{
 */
#define ATLC_MAC_154_CTRL0__FLW_MD__SHIFT                                     2
#define ATLC_MAC_154_CTRL0__FLW_MD__WIDTH                                     1
#define ATLC_MAC_154_CTRL0__FLW_MD__MASK                            0x00000004U
#define ATLC_MAC_154_CTRL0__FLW_MD__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000004U) >> 2)
#define ATLC_MAC_154_CTRL0__FLW_MD__WRITE(src) \
                    (((uint32_t)(src)\
                    << 2) & 0x00000004U)
#define ATLC_MAC_154_CTRL0__FLW_MD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | (((uint32_t)(src) <<\
                    2) & 0x00000004U)
#define ATLC_MAC_154_CTRL0__FLW_MD__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 2) & ~0x00000004U)))
#define ATLC_MAC_154_CTRL0__FLW_MD__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(1) << 2)
#define ATLC_MAC_154_CTRL0__FLW_MD__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(0) << 2)
#define ATLC_MAC_154_CTRL0__FLW_MD__RESET_VALUE                     0x00000001U
/** @} */

/* macros for field dscr_en */
/**
 * @defgroup at_lc_regs_core_dscr_en_field dscr_en_field
 * @brief macros for field dscr_en
 * @details enable tx and rx descriptor decode mode.
 * @{
 */
#define ATLC_MAC_154_CTRL0__DSCR_EN__SHIFT                                    3
#define ATLC_MAC_154_CTRL0__DSCR_EN__WIDTH                                    1
#define ATLC_MAC_154_CTRL0__DSCR_EN__MASK                           0x00000008U
#define ATLC_MAC_154_CTRL0__DSCR_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000008U) >> 3)
#define ATLC_MAC_154_CTRL0__DSCR_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 3) & 0x00000008U)
#define ATLC_MAC_154_CTRL0__DSCR_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | (((uint32_t)(src) <<\
                    3) & 0x00000008U)
#define ATLC_MAC_154_CTRL0__DSCR_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 3) & ~0x00000008U)))
#define ATLC_MAC_154_CTRL0__DSCR_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | ((uint32_t)(1) << 3)
#define ATLC_MAC_154_CTRL0__DSCR_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | ((uint32_t)(0) << 3)
#define ATLC_MAC_154_CTRL0__DSCR_EN__RESET_VALUE                    0x00000000U
/** @} */

/* macros for field air_tm_stmp */
/**
 * @defgroup at_lc_regs_core_air_tm_stmp_field air_tm_stmp_field
 * @brief macros for field air_tm_stmp
 * @details air time stamp mode where all times are defined relative to on air time.
 * @{
 */
#define ATLC_MAC_154_CTRL0__AIR_TM_STMP__SHIFT                                4
#define ATLC_MAC_154_CTRL0__AIR_TM_STMP__WIDTH                                1
#define ATLC_MAC_154_CTRL0__AIR_TM_STMP__MASK                       0x00000010U
#define ATLC_MAC_154_CTRL0__AIR_TM_STMP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000010U) >> 4)
#define ATLC_MAC_154_CTRL0__AIR_TM_STMP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 4) & 0x00000010U)
#define ATLC_MAC_154_CTRL0__AIR_TM_STMP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | (((uint32_t)(src) <<\
                    4) & 0x00000010U)
#define ATLC_MAC_154_CTRL0__AIR_TM_STMP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 4) & ~0x00000010U)))
#define ATLC_MAC_154_CTRL0__AIR_TM_STMP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | ((uint32_t)(1) << 4)
#define ATLC_MAC_154_CTRL0__AIR_TM_STMP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | ((uint32_t)(0) << 4)
#define ATLC_MAC_154_CTRL0__AIR_TM_STMP__RESET_VALUE                0x00000001U
/** @} */

/* macros for field rsrvd */
/**
 * @defgroup at_lc_regs_core_rsrvd_field rsrvd_field
 * @brief macros for field rsrvd
 * @details reserverd
 * @{
 */
#define ATLC_MAC_154_CTRL0__RSRVD__SHIFT                                      5
#define ATLC_MAC_154_CTRL0__RSRVD__WIDTH                                      1
#define ATLC_MAC_154_CTRL0__RSRVD__MASK                             0x00000020U
#define ATLC_MAC_154_CTRL0__RSRVD__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000020U) >> 5)
#define ATLC_MAC_154_CTRL0__RSRVD__WRITE(src) \
                    (((uint32_t)(src)\
                    << 5) & 0x00000020U)
#define ATLC_MAC_154_CTRL0__RSRVD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | (((uint32_t)(src) <<\
                    5) & 0x00000020U)
#define ATLC_MAC_154_CTRL0__RSRVD__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 5) & ~0x00000020U)))
#define ATLC_MAC_154_CTRL0__RSRVD__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | ((uint32_t)(1) << 5)
#define ATLC_MAC_154_CTRL0__RSRVD__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | ((uint32_t)(0) << 5)
#define ATLC_MAC_154_CTRL0__RSRVD__RESET_VALUE                      0x00000000U
/** @} */

/* macros for field aa_en */
/**
 * @defgroup at_lc_regs_core_aa_en_field aa_en_field
 * @brief macros for field aa_en
 * @details enable autoacknowledgment supported for flexMAC.
 * @{
 */
#define ATLC_MAC_154_CTRL0__AA_EN__SHIFT                                      6
#define ATLC_MAC_154_CTRL0__AA_EN__WIDTH                                      1
#define ATLC_MAC_154_CTRL0__AA_EN__MASK                             0x00000040U
#define ATLC_MAC_154_CTRL0__AA_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000040U) >> 6)
#define ATLC_MAC_154_CTRL0__AA_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 6) & 0x00000040U)
#define ATLC_MAC_154_CTRL0__AA_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | (((uint32_t)(src) <<\
                    6) & 0x00000040U)
#define ATLC_MAC_154_CTRL0__AA_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 6) & ~0x00000040U)))
#define ATLC_MAC_154_CTRL0__AA_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | ((uint32_t)(1) << 6)
#define ATLC_MAC_154_CTRL0__AA_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | ((uint32_t)(0) << 6)
#define ATLC_MAC_154_CTRL0__AA_EN__RESET_VALUE                      0x00000000U
/** @} */

/* macros for field rt_en */
/**
 * @defgroup at_lc_regs_core_rt_en_field rt_en_field
 * @brief macros for field rt_en
 * @details enable retransmission supported for flexMAC.
 * @{
 */
#define ATLC_MAC_154_CTRL0__RT_EN__SHIFT                                      7
#define ATLC_MAC_154_CTRL0__RT_EN__WIDTH                                      1
#define ATLC_MAC_154_CTRL0__RT_EN__MASK                             0x00000080U
#define ATLC_MAC_154_CTRL0__RT_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000080U) >> 7)
#define ATLC_MAC_154_CTRL0__RT_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 7) & 0x00000080U)
#define ATLC_MAC_154_CTRL0__RT_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | (((uint32_t)(src) <<\
                    7) & 0x00000080U)
#define ATLC_MAC_154_CTRL0__RT_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 7) & ~0x00000080U)))
#define ATLC_MAC_154_CTRL0__RT_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(1) << 7)
#define ATLC_MAC_154_CTRL0__RT_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(0) << 7)
#define ATLC_MAC_154_CTRL0__RT_EN__RESET_VALUE                      0x00000000U
/** @} */

/* macros for field wht_en */
/**
 * @defgroup at_lc_regs_core_wht_en_field wht_en_field
 * @brief macros for field wht_en
 * @details enable whitenning no affect when descriptor mode is enabled.
 * @{
 */
#define ATLC_MAC_154_CTRL0__WHT_EN__SHIFT                                     8
#define ATLC_MAC_154_CTRL0__WHT_EN__WIDTH                                     1
#define ATLC_MAC_154_CTRL0__WHT_EN__MASK                            0x00000100U
#define ATLC_MAC_154_CTRL0__WHT_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000100U) >> 8)
#define ATLC_MAC_154_CTRL0__WHT_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00000100U)
#define ATLC_MAC_154_CTRL0__WHT_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | (((uint32_t)(src) <<\
                    8) & 0x00000100U)
#define ATLC_MAC_154_CTRL0__WHT_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00000100U)))
#define ATLC_MAC_154_CTRL0__WHT_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | ((uint32_t)(1) << 8)
#define ATLC_MAC_154_CTRL0__WHT_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | ((uint32_t)(0) << 8)
#define ATLC_MAC_154_CTRL0__WHT_EN__RESET_VALUE                     0x00000000U
/** @} */

/* macros for field crypt_md */
/**
 * @defgroup at_lc_regs_core_crypt_md_field crypt_md_field
 * @brief macros for field crypt_md
 * @details crypto mode 000 => no crypto, 101 => CTR
 * @{
 */
#define ATLC_MAC_154_CTRL0__CRYPT_MD__SHIFT                                   9
#define ATLC_MAC_154_CTRL0__CRYPT_MD__WIDTH                                   3
#define ATLC_MAC_154_CTRL0__CRYPT_MD__MASK                          0x00000e00U
#define ATLC_MAC_154_CTRL0__CRYPT_MD__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000e00U) >> 9)
#define ATLC_MAC_154_CTRL0__CRYPT_MD__WRITE(src) \
                    (((uint32_t)(src)\
                    << 9) & 0x00000e00U)
#define ATLC_MAC_154_CTRL0__CRYPT_MD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000e00U) | (((uint32_t)(src) <<\
                    9) & 0x00000e00U)
#define ATLC_MAC_154_CTRL0__CRYPT_MD__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 9) & ~0x00000e00U)))
#define ATLC_MAC_154_CTRL0__CRYPT_MD__RESET_VALUE                   0x00000000U
/** @} */

/* macros for field sync_en */
/**
 * @defgroup at_lc_regs_core_sync_en_field sync_en_field
 * @brief macros for field sync_en
 * @details enable sync word 0 and/or sync word 1 set to 1 for BLE and 154 to use sync_wrd0. 2 sync words are used for flexMAC.
 * @{
 */
#define ATLC_MAC_154_CTRL0__SYNC_EN__SHIFT                                   12
#define ATLC_MAC_154_CTRL0__SYNC_EN__WIDTH                                    2
#define ATLC_MAC_154_CTRL0__SYNC_EN__MASK                           0x00003000U
#define ATLC_MAC_154_CTRL0__SYNC_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00003000U) >> 12)
#define ATLC_MAC_154_CTRL0__SYNC_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 12) & 0x00003000U)
#define ATLC_MAC_154_CTRL0__SYNC_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00003000U) | (((uint32_t)(src) <<\
                    12) & 0x00003000U)
#define ATLC_MAC_154_CTRL0__SYNC_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 12) & ~0x00003000U)))
#define ATLC_MAC_154_CTRL0__SYNC_EN__RESET_VALUE                    0x00000001U
/** @} */

/* macros for field crc_len */
/**
 * @defgroup at_lc_regs_core_crc_len_field crc_len_field
 * @brief macros for field crc_len
 * @details crc length in bytes - valid between 0 to 4 set to 3 for BLE and 2 for 154 set to 1 or 2 for flexMAC. 0 => crc insertion/check disabled.
 * @{
 */
#define ATLC_MAC_154_CTRL0__CRC_LEN__SHIFT                                   16
#define ATLC_MAC_154_CTRL0__CRC_LEN__WIDTH                                    3
#define ATLC_MAC_154_CTRL0__CRC_LEN__MASK                           0x00070000U
#define ATLC_MAC_154_CTRL0__CRC_LEN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00070000U) >> 16)
#define ATLC_MAC_154_CTRL0__CRC_LEN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00070000U)
#define ATLC_MAC_154_CTRL0__CRC_LEN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00070000U) | (((uint32_t)(src) <<\
                    16) & 0x00070000U)
#define ATLC_MAC_154_CTRL0__CRC_LEN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00070000U)))
#define ATLC_MAC_154_CTRL0__CRC_LEN__RESET_VALUE                    0x00000002U
/** @} */

/* macros for field addr_len */
/**
 * @defgroup at_lc_regs_core_addr_len_field addr_len_field
 * @brief macros for field addr_len
 * @details address length in bytes - valid between 0 to 5 set to 0 for BLE and 154. set to 3 to 5 for flexMAC.
 * @{
 */
#define ATLC_MAC_154_CTRL0__ADDR_LEN__SHIFT                                  20
#define ATLC_MAC_154_CTRL0__ADDR_LEN__WIDTH                                   3
#define ATLC_MAC_154_CTRL0__ADDR_LEN__MASK                          0x00700000U
#define ATLC_MAC_154_CTRL0__ADDR_LEN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00700000U) >> 20)
#define ATLC_MAC_154_CTRL0__ADDR_LEN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 20) & 0x00700000U)
#define ATLC_MAC_154_CTRL0__ADDR_LEN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00700000U) | (((uint32_t)(src) <<\
                    20) & 0x00700000U)
#define ATLC_MAC_154_CTRL0__ADDR_LEN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 20) & ~0x00700000U)))
#define ATLC_MAC_154_CTRL0__ADDR_LEN__RESET_VALUE                   0x00000000U
/** @} */

/* macros for field sync_len */
/**
 * @defgroup at_lc_regs_core_sync_len_field sync_len_field
 * @brief macros for field sync_len
 * @details sync word length in bytes - valid between 1 to 4 set to 4 for BLE AA and 1 for 154 SFD. set to 1 for flexMAC.
 * @{
 */
#define ATLC_MAC_154_CTRL0__SYNC_LEN__SHIFT                                  24
#define ATLC_MAC_154_CTRL0__SYNC_LEN__WIDTH                                   3
#define ATLC_MAC_154_CTRL0__SYNC_LEN__MASK                          0x07000000U
#define ATLC_MAC_154_CTRL0__SYNC_LEN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x07000000U) >> 24)
#define ATLC_MAC_154_CTRL0__SYNC_LEN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 24) & 0x07000000U)
#define ATLC_MAC_154_CTRL0__SYNC_LEN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x07000000U) | (((uint32_t)(src) <<\
                    24) & 0x07000000U)
#define ATLC_MAC_154_CTRL0__SYNC_LEN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 24) & ~0x07000000U)))
#define ATLC_MAC_154_CTRL0__SYNC_LEN__RESET_VALUE                   0x00000001U
/** @} */

/* macros for field hdr_ftch_dly_en */
/**
 * @defgroup at_lc_regs_core_hdr_ftch_dly_en_field hdr_ftch_dly_en_field
 * @brief macros for field hdr_ftch_dly_en
 * @details enable feature to delay fetching of header till sync word transmission
 * @{
 */
#define ATLC_MAC_154_CTRL0__HDR_FTCH_DLY_EN__SHIFT                           27
#define ATLC_MAC_154_CTRL0__HDR_FTCH_DLY_EN__WIDTH                            1
#define ATLC_MAC_154_CTRL0__HDR_FTCH_DLY_EN__MASK                   0x08000000U
#define ATLC_MAC_154_CTRL0__HDR_FTCH_DLY_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x08000000U) >> 27)
#define ATLC_MAC_154_CTRL0__HDR_FTCH_DLY_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 27) & 0x08000000U)
#define ATLC_MAC_154_CTRL0__HDR_FTCH_DLY_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x08000000U) | (((uint32_t)(src) <<\
                    27) & 0x08000000U)
#define ATLC_MAC_154_CTRL0__HDR_FTCH_DLY_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 27) & ~0x08000000U)))
#define ATLC_MAC_154_CTRL0__HDR_FTCH_DLY_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x08000000U) | ((uint32_t)(1) << 27)
#define ATLC_MAC_154_CTRL0__HDR_FTCH_DLY_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x08000000U) | ((uint32_t)(0) << 27)
#define ATLC_MAC_154_CTRL0__HDR_FTCH_DLY_EN__RESET_VALUE            0x00000001U
/** @} */

/* macros for field aes_16MHz_en */
/**
 * @defgroup at_lc_regs_core_aes_16MHz_en_field aes_16MHz_en_field
 * @brief macros for field aes_16MHz_en
 * @details enable aes to run at 16 MHz
 * @{
 */
#define ATLC_MAC_154_CTRL0__AES_16MHZ_EN__SHIFT                              28
#define ATLC_MAC_154_CTRL0__AES_16MHZ_EN__WIDTH                               1
#define ATLC_MAC_154_CTRL0__AES_16MHZ_EN__MASK                      0x10000000U
#define ATLC_MAC_154_CTRL0__AES_16MHZ_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x10000000U) >> 28)
#define ATLC_MAC_154_CTRL0__AES_16MHZ_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 28) & 0x10000000U)
#define ATLC_MAC_154_CTRL0__AES_16MHZ_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x10000000U) | (((uint32_t)(src) <<\
                    28) & 0x10000000U)
#define ATLC_MAC_154_CTRL0__AES_16MHZ_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 28) & ~0x10000000U)))
#define ATLC_MAC_154_CTRL0__AES_16MHZ_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x10000000U) | ((uint32_t)(1) << 28)
#define ATLC_MAC_154_CTRL0__AES_16MHZ_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x10000000U) | ((uint32_t)(0) << 28)
#define ATLC_MAC_154_CTRL0__AES_16MHZ_EN__RESET_VALUE               0x00000001U
/** @} */

/* macros for field use_hw_syncwrd_crc */
/**
 * @defgroup at_lc_regs_core_use_hw_syncwrd_crc_field use_hw_syncwrd_crc_field
 * @brief macros for field use_hw_syncwrd_crc
 * @details (not supported in this protocol) set 1 to have HW compute sync word crc.
 * @{
 */
#define ATLC_MAC_154_CTRL0__USE_HW_SYNCWRD_CRC__SHIFT                        29
#define ATLC_MAC_154_CTRL0__USE_HW_SYNCWRD_CRC__WIDTH                         1
#define ATLC_MAC_154_CTRL0__USE_HW_SYNCWRD_CRC__MASK                0x20000000U
#define ATLC_MAC_154_CTRL0__USE_HW_SYNCWRD_CRC__READ(src) \
                    (((uint32_t)(src)\
                    & 0x20000000U) >> 29)
#define ATLC_MAC_154_CTRL0__USE_HW_SYNCWRD_CRC__WRITE(src) \
                    (((uint32_t)(src)\
                    << 29) & 0x20000000U)
#define ATLC_MAC_154_CTRL0__USE_HW_SYNCWRD_CRC__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x20000000U) | (((uint32_t)(src) <<\
                    29) & 0x20000000U)
#define ATLC_MAC_154_CTRL0__USE_HW_SYNCWRD_CRC__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 29) & ~0x20000000U)))
#define ATLC_MAC_154_CTRL0__USE_HW_SYNCWRD_CRC__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x20000000U) | ((uint32_t)(1) << 29)
#define ATLC_MAC_154_CTRL0__USE_HW_SYNCWRD_CRC__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x20000000U) | ((uint32_t)(0) << 29)
#define ATLC_MAC_154_CTRL0__USE_HW_SYNCWRD_CRC__RESET_VALUE         0x00000000U
/** @} */
#define ATLC_MAC_154_CTRL0__TYPE                                       uint32_t
#define ATLC_MAC_154_CTRL0__READ                                    0x3f773fffU
#define ATLC_MAC_154_CTRL0__WRITE                                   0x3f773fffU
#define ATLC_MAC_154_CTRL0__PRESERVED                               0x00000000U
#define ATLC_MAC_154_CTRL0__RESET_VALUE                             0x19021015U

#endif /* __ATLC_MAC_154_CTRL0_MACRO__ */

/** @} end of mac_154_ctrl0 */

/* macros for BlueprintGlobalNameSpace::ATLC_mac_154_ctrl1 */
/**
 * @defgroup at_lc_regs_core_mac_154_ctrl1 mac_154_ctrl1
 * @brief Contains register fields associated with mac_154_ctrl1. definitions.
 * @{
 */
#ifndef __ATLC_MAC_154_CTRL1_MACRO__
#define __ATLC_MAC_154_CTRL1_MACRO__

/* macros for field force_output_to_carrier_wave */
/**
 * @defgroup at_lc_regs_core_force_output_to_carrier_wave_field force_output_to_carrier_wave_field
 * @brief macros for field force_output_to_carrier_wave
 * @details force constant tone generation in duo sim and duo emulation does not drive anothing in asic.
 * @{
 */
#define ATLC_MAC_154_CTRL1__FORCE_OUTPUT_TO_CARRIER_WAVE__SHIFT               0
#define ATLC_MAC_154_CTRL1__FORCE_OUTPUT_TO_CARRIER_WAVE__WIDTH               1
#define ATLC_MAC_154_CTRL1__FORCE_OUTPUT_TO_CARRIER_WAVE__MASK      0x00000001U
#define ATLC_MAC_154_CTRL1__FORCE_OUTPUT_TO_CARRIER_WAVE__READ(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_MAC_154_CTRL1__FORCE_OUTPUT_TO_CARRIER_WAVE__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_MAC_154_CTRL1__FORCE_OUTPUT_TO_CARRIER_WAVE__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_MAC_154_CTRL1__FORCE_OUTPUT_TO_CARRIER_WAVE__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_MAC_154_CTRL1__FORCE_OUTPUT_TO_CARRIER_WAVE__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_MAC_154_CTRL1__FORCE_OUTPUT_TO_CARRIER_WAVE__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_MAC_154_CTRL1__FORCE_OUTPUT_TO_CARRIER_WAVE__RESET_VALUE \
                    0x00000000U
/** @} */

/* macros for field byp_crypt_zero_pyld */
/**
 * @defgroup at_lc_regs_core_byp_crypt_zero_pyld_field byp_crypt_zero_pyld_field
 * @brief macros for field byp_crypt_zero_pyld
 * @details use 0 for crypt_mod and 0 for mic_len for zero payload packet
 * @{
 */
#define ATLC_MAC_154_CTRL1__BYP_CRYPT_ZERO_PYLD__SHIFT                        1
#define ATLC_MAC_154_CTRL1__BYP_CRYPT_ZERO_PYLD__WIDTH                        1
#define ATLC_MAC_154_CTRL1__BYP_CRYPT_ZERO_PYLD__MASK               0x00000002U
#define ATLC_MAC_154_CTRL1__BYP_CRYPT_ZERO_PYLD__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000002U) >> 1)
#define ATLC_MAC_154_CTRL1__BYP_CRYPT_ZERO_PYLD__WRITE(src) \
                    (((uint32_t)(src)\
                    << 1) & 0x00000002U)
#define ATLC_MAC_154_CTRL1__BYP_CRYPT_ZERO_PYLD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | (((uint32_t)(src) <<\
                    1) & 0x00000002U)
#define ATLC_MAC_154_CTRL1__BYP_CRYPT_ZERO_PYLD__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 1) & ~0x00000002U)))
#define ATLC_MAC_154_CTRL1__BYP_CRYPT_ZERO_PYLD__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(1) << 1)
#define ATLC_MAC_154_CTRL1__BYP_CRYPT_ZERO_PYLD__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(0) << 1)
#define ATLC_MAC_154_CTRL1__BYP_CRYPT_ZERO_PYLD__RESET_VALUE        0x00000001U
/** @} */

/* macros for field rsrvd */
/**
 * @defgroup at_lc_regs_core_rsrvd_field rsrvd_field
 * @brief macros for field rsrvd
 * @details reserverd
 * @{
 */
#define ATLC_MAC_154_CTRL1__RSRVD__SHIFT                                      2
#define ATLC_MAC_154_CTRL1__RSRVD__WIDTH                                     11
#define ATLC_MAC_154_CTRL1__RSRVD__MASK                             0x00001ffcU
#define ATLC_MAC_154_CTRL1__RSRVD__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00001ffcU) >> 2)
#define ATLC_MAC_154_CTRL1__RSRVD__WRITE(src) \
                    (((uint32_t)(src)\
                    << 2) & 0x00001ffcU)
#define ATLC_MAC_154_CTRL1__RSRVD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00001ffcU) | (((uint32_t)(src) <<\
                    2) & 0x00001ffcU)
#define ATLC_MAC_154_CTRL1__RSRVD__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 2) & ~0x00001ffcU)))
#define ATLC_MAC_154_CTRL1__RSRVD__RESET_VALUE                      0x00000000U
/** @} */

/* macros for field crypt_aeskey_byt_rvrt */
/**
 * @defgroup at_lc_regs_core_crypt_aeskey_byt_rvrt_field crypt_aeskey_byt_rvrt_field
 * @brief macros for field crypt_aeskey_byt_rvrt
 * @details revert the byte order within aeskey word
 * @{
 */
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_BYT_RVRT__SHIFT                     13
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_BYT_RVRT__WIDTH                      1
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_BYT_RVRT__MASK             0x00002000U
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_BYT_RVRT__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00002000U) >> 13)
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_BYT_RVRT__WRITE(src) \
                    (((uint32_t)(src)\
                    << 13) & 0x00002000U)
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_BYT_RVRT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00002000U) | (((uint32_t)(src) <<\
                    13) & 0x00002000U)
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_BYT_RVRT__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 13) & ~0x00002000U)))
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_BYT_RVRT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00002000U) | ((uint32_t)(1) << 13)
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_BYT_RVRT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00002000U) | ((uint32_t)(0) << 13)
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_BYT_RVRT__RESET_VALUE      0x00000000U
/** @} */

/* macros for field crypt_aeskey_wrd4_rvrt */
/**
 * @defgroup at_lc_regs_core_crypt_aeskey_wrd4_rvrt_field crypt_aeskey_wrd4_rvrt_field
 * @brief macros for field crypt_aeskey_wrd4_rvrt
 * @details revert the 4 words order of aeskey
 * @{
 */
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_WRD4_RVRT__SHIFT                    14
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_WRD4_RVRT__WIDTH                     1
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_WRD4_RVRT__MASK            0x00004000U
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_WRD4_RVRT__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00004000U) >> 14)
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_WRD4_RVRT__WRITE(src) \
                    (((uint32_t)(src)\
                    << 14) & 0x00004000U)
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_WRD4_RVRT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00004000U) | (((uint32_t)(src) <<\
                    14) & 0x00004000U)
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_WRD4_RVRT__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 14) & ~0x00004000U)))
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_WRD4_RVRT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00004000U) | ((uint32_t)(1) << 14)
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_WRD4_RVRT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00004000U) | ((uint32_t)(0) << 14)
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_WRD4_RVRT__RESET_VALUE     0x00000000U
/** @} */

/* macros for field crypt_aeskey_wrd8_rvrt */
/**
 * @defgroup at_lc_regs_core_crypt_aeskey_wrd8_rvrt_field crypt_aeskey_wrd8_rvrt_field
 * @brief macros for field crypt_aeskey_wrd8_rvrt
 * @details revert the 8 words order of aeskey
 * @{
 */
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_WRD8_RVRT__SHIFT                    15
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_WRD8_RVRT__WIDTH                     1
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_WRD8_RVRT__MASK            0x00008000U
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_WRD8_RVRT__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00008000U) >> 15)
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_WRD8_RVRT__WRITE(src) \
                    (((uint32_t)(src)\
                    << 15) & 0x00008000U)
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_WRD8_RVRT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | (((uint32_t)(src) <<\
                    15) & 0x00008000U)
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_WRD8_RVRT__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 15) & ~0x00008000U)))
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_WRD8_RVRT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | ((uint32_t)(1) << 15)
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_WRD8_RVRT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | ((uint32_t)(0) << 15)
#define ATLC_MAC_154_CTRL1__CRYPT_AESKEY_WRD8_RVRT__RESET_VALUE     0x00000000U
/** @} */

/* macros for field max_rx_pyld_len */
/**
 * @defgroup at_lc_regs_core_max_rx_pyld_len_field max_rx_pyld_len_field
 * @brief macros for field max_rx_pyld_len
 * @details maximum allowed received packet length
 * @{
 */
#define ATLC_MAC_154_CTRL1__MAX_RX_PYLD_LEN__SHIFT                           16
#define ATLC_MAC_154_CTRL1__MAX_RX_PYLD_LEN__WIDTH                            8
#define ATLC_MAC_154_CTRL1__MAX_RX_PYLD_LEN__MASK                   0x00ff0000U
#define ATLC_MAC_154_CTRL1__MAX_RX_PYLD_LEN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_MAC_154_CTRL1__MAX_RX_PYLD_LEN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00ff0000U)
#define ATLC_MAC_154_CTRL1__MAX_RX_PYLD_LEN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00ff0000U) | (((uint32_t)(src) <<\
                    16) & 0x00ff0000U)
#define ATLC_MAC_154_CTRL1__MAX_RX_PYLD_LEN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00ff0000U)))
#define ATLC_MAC_154_CTRL1__MAX_RX_PYLD_LEN__RESET_VALUE            0x0000007fU
/** @} */

/* macros for field crypt_iv_byt_rvrt */
/**
 * @defgroup at_lc_regs_core_crypt_iv_byt_rvrt_field crypt_iv_byt_rvrt_field
 * @brief macros for field crypt_iv_byt_rvrt
 * @details revert the byte order within iv word
 * @{
 */
#define ATLC_MAC_154_CTRL1__CRYPT_IV_BYT_RVRT__SHIFT                         24
#define ATLC_MAC_154_CTRL1__CRYPT_IV_BYT_RVRT__WIDTH                          1
#define ATLC_MAC_154_CTRL1__CRYPT_IV_BYT_RVRT__MASK                 0x01000000U
#define ATLC_MAC_154_CTRL1__CRYPT_IV_BYT_RVRT__READ(src) \
                    (((uint32_t)(src)\
                    & 0x01000000U) >> 24)
#define ATLC_MAC_154_CTRL1__CRYPT_IV_BYT_RVRT__WRITE(src) \
                    (((uint32_t)(src)\
                    << 24) & 0x01000000U)
#define ATLC_MAC_154_CTRL1__CRYPT_IV_BYT_RVRT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x01000000U) | (((uint32_t)(src) <<\
                    24) & 0x01000000U)
#define ATLC_MAC_154_CTRL1__CRYPT_IV_BYT_RVRT__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 24) & ~0x01000000U)))
#define ATLC_MAC_154_CTRL1__CRYPT_IV_BYT_RVRT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x01000000U) | ((uint32_t)(1) << 24)
#define ATLC_MAC_154_CTRL1__CRYPT_IV_BYT_RVRT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x01000000U) | ((uint32_t)(0) << 24)
#define ATLC_MAC_154_CTRL1__CRYPT_IV_BYT_RVRT__RESET_VALUE          0x00000000U
/** @} */

/* macros for field crypt_iv_wrd2_rvrt */
/**
 * @defgroup at_lc_regs_core_crypt_iv_wrd2_rvrt_field crypt_iv_wrd2_rvrt_field
 * @brief macros for field crypt_iv_wrd2_rvrt
 * @details revert the 2 words order of iv
 * @{
 */
#define ATLC_MAC_154_CTRL1__CRYPT_IV_WRD2_RVRT__SHIFT                        25
#define ATLC_MAC_154_CTRL1__CRYPT_IV_WRD2_RVRT__WIDTH                         1
#define ATLC_MAC_154_CTRL1__CRYPT_IV_WRD2_RVRT__MASK                0x02000000U
#define ATLC_MAC_154_CTRL1__CRYPT_IV_WRD2_RVRT__READ(src) \
                    (((uint32_t)(src)\
                    & 0x02000000U) >> 25)
#define ATLC_MAC_154_CTRL1__CRYPT_IV_WRD2_RVRT__WRITE(src) \
                    (((uint32_t)(src)\
                    << 25) & 0x02000000U)
#define ATLC_MAC_154_CTRL1__CRYPT_IV_WRD2_RVRT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x02000000U) | (((uint32_t)(src) <<\
                    25) & 0x02000000U)
#define ATLC_MAC_154_CTRL1__CRYPT_IV_WRD2_RVRT__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 25) & ~0x02000000U)))
#define ATLC_MAC_154_CTRL1__CRYPT_IV_WRD2_RVRT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x02000000U) | ((uint32_t)(1) << 25)
#define ATLC_MAC_154_CTRL1__CRYPT_IV_WRD2_RVRT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x02000000U) | ((uint32_t)(0) << 25)
#define ATLC_MAC_154_CTRL1__CRYPT_IV_WRD2_RVRT__RESET_VALUE         0x00000000U
/** @} */

/* macros for field crc_plynml_en */
/**
 * @defgroup at_lc_regs_core_crc_plynml_en_field crc_plynml_en_field
 * @brief macros for field crc_plynml_en
 * @details enable programmable polynomial
 * @{
 */
#define ATLC_MAC_154_CTRL1__CRC_PLYNML_EN__SHIFT                             26
#define ATLC_MAC_154_CTRL1__CRC_PLYNML_EN__WIDTH                              1
#define ATLC_MAC_154_CTRL1__CRC_PLYNML_EN__MASK                     0x04000000U
#define ATLC_MAC_154_CTRL1__CRC_PLYNML_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x04000000U) >> 26)
#define ATLC_MAC_154_CTRL1__CRC_PLYNML_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 26) & 0x04000000U)
#define ATLC_MAC_154_CTRL1__CRC_PLYNML_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x04000000U) | (((uint32_t)(src) <<\
                    26) & 0x04000000U)
#define ATLC_MAC_154_CTRL1__CRC_PLYNML_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 26) & ~0x04000000U)))
#define ATLC_MAC_154_CTRL1__CRC_PLYNML_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x04000000U) | ((uint32_t)(1) << 26)
#define ATLC_MAC_154_CTRL1__CRC_PLYNML_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x04000000U) | ((uint32_t)(0) << 26)
#define ATLC_MAC_154_CTRL1__CRC_PLYNML_EN__RESET_VALUE              0x00000000U
/** @} */
#define ATLC_MAC_154_CTRL1__TYPE                                       uint32_t
#define ATLC_MAC_154_CTRL1__READ                                    0x07ffffffU
#define ATLC_MAC_154_CTRL1__WRITE                                   0x07ffffffU
#define ATLC_MAC_154_CTRL1__PRESERVED                               0x00000000U
#define ATLC_MAC_154_CTRL1__RESET_VALUE                             0x007f0002U

#endif /* __ATLC_MAC_154_CTRL1_MACRO__ */

/** @} end of mac_154_ctrl1 */

/* macros for BlueprintGlobalNameSpace::ATLC_mac_154_ctrl2 */
/**
 * @defgroup at_lc_regs_core_mac_154_ctrl2 mac_154_ctrl2
 * @brief Contains register fields associated with mac_154_ctrl2. definitions.
 * @{
 */
#ifndef __ATLC_MAC_154_CTRL2_MACRO__
#define __ATLC_MAC_154_CTRL2_MACRO__

/* macros for field rx_to */
/**
 * @defgroup at_lc_regs_core_rx_to_field rx_to_field
 * @brief macros for field rx_to
 * @details receive window timeout in micro seconds no affect when descriptor mode is enabled. should not be set to 0.
 * @{
 */
#define ATLC_MAC_154_CTRL2__RX_TO__SHIFT                                      0
#define ATLC_MAC_154_CTRL2__RX_TO__WIDTH                                     32
#define ATLC_MAC_154_CTRL2__RX_TO__MASK                             0xffffffffU
#define ATLC_MAC_154_CTRL2__RX_TO__READ(src)    ((uint32_t)(src) & 0xffffffffU)
#define ATLC_MAC_154_CTRL2__RX_TO__WRITE(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_MAC_154_CTRL2__RX_TO__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_MAC_154_CTRL2__RX_TO__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_MAC_154_CTRL2__RX_TO__RESET_VALUE                      0x000001c2U
/** @} */
#define ATLC_MAC_154_CTRL2__TYPE                                       uint32_t
#define ATLC_MAC_154_CTRL2__READ                                    0xffffffffU
#define ATLC_MAC_154_CTRL2__WRITE                                   0xffffffffU
#define ATLC_MAC_154_CTRL2__PRESERVED                               0x00000000U
#define ATLC_MAC_154_CTRL2__RESET_VALUE                             0x000001c2U

#endif /* __ATLC_MAC_154_CTRL2_MACRO__ */

/** @} end of mac_154_ctrl2 */

/* macros for BlueprintGlobalNameSpace::ATLC_mac_154_ctrl3 */
/**
 * @defgroup at_lc_regs_core_mac_154_ctrl3 mac_154_ctrl3
 * @brief Contains register fields associated with mac_154_ctrl3. definitions.
 * @{
 */
#ifndef __ATLC_MAC_154_CTRL3_MACRO__
#define __ATLC_MAC_154_CTRL3_MACRO__

/* macros for field artd */
/**
 * @defgroup at_lc_regs_core_artd_field artd_field
 * @brief macros for field artd
 * @details auto retransmit delay in micro seconds supported for flexMAC.
 * @{
 */
#define ATLC_MAC_154_CTRL3__ARTD__SHIFT                                       0
#define ATLC_MAC_154_CTRL3__ARTD__WIDTH                                       8
#define ATLC_MAC_154_CTRL3__ARTD__MASK                              0x000000ffU
#define ATLC_MAC_154_CTRL3__ARTD__READ(src)     ((uint32_t)(src) & 0x000000ffU)
#define ATLC_MAC_154_CTRL3__ARTD__WRITE(src)    ((uint32_t)(src) & 0x000000ffU)
#define ATLC_MAC_154_CTRL3__ARTD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_MAC_154_CTRL3__ARTD__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_MAC_154_CTRL3__ARTD__RESET_VALUE                       0x00000000U
/** @} */

/* macros for field artmx */
/**
 * @defgroup at_lc_regs_core_artmx_field artmx_field
 * @brief macros for field artmx
 * @details auto retransmit count for maximum number of retransmit supported for flexMAC.
 * @{
 */
#define ATLC_MAC_154_CTRL3__ARTMX__SHIFT                                      8
#define ATLC_MAC_154_CTRL3__ARTMX__WIDTH                                      4
#define ATLC_MAC_154_CTRL3__ARTMX__MASK                             0x00000f00U
#define ATLC_MAC_154_CTRL3__ARTMX__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000f00U) >> 8)
#define ATLC_MAC_154_CTRL3__ARTMX__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00000f00U)
#define ATLC_MAC_154_CTRL3__ARTMX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000f00U) | (((uint32_t)(src) <<\
                    8) & 0x00000f00U)
#define ATLC_MAC_154_CTRL3__ARTMX__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00000f00U)))
#define ATLC_MAC_154_CTRL3__ARTMX__RESET_VALUE                      0x00000000U
/** @} */
#define ATLC_MAC_154_CTRL3__TYPE                                       uint32_t
#define ATLC_MAC_154_CTRL3__READ                                    0x00000fffU
#define ATLC_MAC_154_CTRL3__WRITE                                   0x00000fffU
#define ATLC_MAC_154_CTRL3__PRESERVED                               0x00000000U
#define ATLC_MAC_154_CTRL3__RESET_VALUE                             0x00000000U

#endif /* __ATLC_MAC_154_CTRL3_MACRO__ */

/** @} end of mac_154_ctrl3 */

/* macros for BlueprintGlobalNameSpace::ATLC_mac_154_ctrl4 */
/**
 * @defgroup at_lc_regs_core_mac_154_ctrl4 mac_154_ctrl4
 * @brief Contains register fields associated with mac_154_ctrl4. definitions.
 * @{
 */
#ifndef __ATLC_MAC_154_CTRL4_MACRO__
#define __ATLC_MAC_154_CTRL4_MACRO__

/* macros for field chnl_hp_en */
/**
 * @defgroup at_lc_regs_core_chnl_hp_en_field chnl_hp_en_field
 * @brief macros for field chnl_hp_en
 * @details enable auto channel hopping not supported now. sw controls channel hoping.
 * @{
 */
#define ATLC_MAC_154_CTRL4__CHNL_HP_EN__SHIFT                                 0
#define ATLC_MAC_154_CTRL4__CHNL_HP_EN__WIDTH                                 1
#define ATLC_MAC_154_CTRL4__CHNL_HP_EN__MASK                        0x00000001U
#define ATLC_MAC_154_CTRL4__CHNL_HP_EN__READ(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_MAC_154_CTRL4__CHNL_HP_EN__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_MAC_154_CTRL4__CHNL_HP_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_MAC_154_CTRL4__CHNL_HP_EN__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_MAC_154_CTRL4__CHNL_HP_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_MAC_154_CTRL4__CHNL_HP_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_MAC_154_CTRL4__CHNL_HP_EN__RESET_VALUE                 0x00000000U
/** @} */

/* macros for field chnl_idx */
/**
 * @defgroup at_lc_regs_core_chnl_idx_field chnl_idx_field
 * @brief macros for field chnl_idx
 * @details offset from 2402MHz in 1MHz steps no effect when descriptor mode is enabled.
 * @{
 */
#define ATLC_MAC_154_CTRL4__CHNL_IDX__SHIFT                                   8
#define ATLC_MAC_154_CTRL4__CHNL_IDX__WIDTH                                   7
#define ATLC_MAC_154_CTRL4__CHNL_IDX__MASK                          0x00007f00U
#define ATLC_MAC_154_CTRL4__CHNL_IDX__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00007f00U) >> 8)
#define ATLC_MAC_154_CTRL4__CHNL_IDX__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00007f00U)
#define ATLC_MAC_154_CTRL4__CHNL_IDX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00007f00U) | (((uint32_t)(src) <<\
                    8) & 0x00007f00U)
#define ATLC_MAC_154_CTRL4__CHNL_IDX__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00007f00U)))
#define ATLC_MAC_154_CTRL4__CHNL_IDX__RESET_VALUE                   0x00000001U
/** @} */

/* macros for field tx_pwr */
/**
 * @defgroup at_lc_regs_core_tx_pwr_field tx_pwr_field
 * @brief macros for field tx_pwr
 * @details tx power pass directly to radio TX power level entry 0, -20dBm TX power level entry 1, -10dBm TX power level entry 2, -8dBm TX power level entry 3, -6dBm TX power level entry 4, -4dBm TX power level entry 5, -2dBm TX power level entry 6, 0dBm TX power level entry 7, 2dBm TX power level entry 8, 4dBm TX power level entry 9, 6dBm TX power level entry 10, 8dBm TX power level entry 11, extra no effect when descriptor mode is enabled.
 * @{
 */
#define ATLC_MAC_154_CTRL4__TX_PWR__SHIFT                                    16
#define ATLC_MAC_154_CTRL4__TX_PWR__WIDTH                                     4
#define ATLC_MAC_154_CTRL4__TX_PWR__MASK                            0x000f0000U
#define ATLC_MAC_154_CTRL4__TX_PWR__READ(src) \
                    (((uint32_t)(src)\
                    & 0x000f0000U) >> 16)
#define ATLC_MAC_154_CTRL4__TX_PWR__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x000f0000U)
#define ATLC_MAC_154_CTRL4__TX_PWR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000f0000U) | (((uint32_t)(src) <<\
                    16) & 0x000f0000U)
#define ATLC_MAC_154_CTRL4__TX_PWR__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x000f0000U)))
#define ATLC_MAC_154_CTRL4__TX_PWR__RESET_VALUE                     0x00000001U
/** @} */
#define ATLC_MAC_154_CTRL4__TYPE                                       uint32_t
#define ATLC_MAC_154_CTRL4__READ                                    0x000f7f01U
#define ATLC_MAC_154_CTRL4__WRITE                                   0x000f7f01U
#define ATLC_MAC_154_CTRL4__PRESERVED                               0x00000000U
#define ATLC_MAC_154_CTRL4__RESET_VALUE                             0x00010100U

#endif /* __ATLC_MAC_154_CTRL4_MACRO__ */

/** @} end of mac_154_ctrl4 */

/* macros for BlueprintGlobalNameSpace::ATLC_mac_154_ctrl5 */
/**
 * @defgroup at_lc_regs_core_mac_154_ctrl5 mac_154_ctrl5
 * @brief Contains register fields associated with mac_154_ctrl5. definitions.
 * @{
 */
#ifndef __ATLC_MAC_154_CTRL5_MACRO__
#define __ATLC_MAC_154_CTRL5_MACRO__

/* macros for field endianness */
/**
 * @defgroup at_lc_regs_core_endianness_field endianness_field
 * @brief macros for field endianness
 * @details 0 => lsb of each byte LSB is transmitted first, 1 => msb of each byte MSB is transmitted first applies to all fields except crc
 * @{
 */
#define ATLC_MAC_154_CTRL5__ENDIANNESS__SHIFT                                 0
#define ATLC_MAC_154_CTRL5__ENDIANNESS__WIDTH                                 1
#define ATLC_MAC_154_CTRL5__ENDIANNESS__MASK                        0x00000001U
#define ATLC_MAC_154_CTRL5__ENDIANNESS__READ(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_MAC_154_CTRL5__ENDIANNESS__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_MAC_154_CTRL5__ENDIANNESS__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_MAC_154_CTRL5__ENDIANNESS__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_MAC_154_CTRL5__ENDIANNESS__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_MAC_154_CTRL5__ENDIANNESS__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_MAC_154_CTRL5__ENDIANNESS__RESET_VALUE                 0x00000000U
/** @} */

/* macros for field sync_wrd_sel */
/**
 * @defgroup at_lc_regs_core_sync_wrd_sel_field sync_wrd_sel_field
 * @brief macros for field sync_wrd_sel
 * @details 0 => use sync word 0, 1 => use sync word 1 used in basic mode, ignored in enhanced mode since it is specified in header supported for flexMAC which can choose different sync word.
 * @{
 */
#define ATLC_MAC_154_CTRL5__SYNC_WRD_SEL__SHIFT                               1
#define ATLC_MAC_154_CTRL5__SYNC_WRD_SEL__WIDTH                               1
#define ATLC_MAC_154_CTRL5__SYNC_WRD_SEL__MASK                      0x00000002U
#define ATLC_MAC_154_CTRL5__SYNC_WRD_SEL__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000002U) >> 1)
#define ATLC_MAC_154_CTRL5__SYNC_WRD_SEL__WRITE(src) \
                    (((uint32_t)(src)\
                    << 1) & 0x00000002U)
#define ATLC_MAC_154_CTRL5__SYNC_WRD_SEL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | (((uint32_t)(src) <<\
                    1) & 0x00000002U)
#define ATLC_MAC_154_CTRL5__SYNC_WRD_SEL__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 1) & ~0x00000002U)))
#define ATLC_MAC_154_CTRL5__SYNC_WRD_SEL__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(1) << 1)
#define ATLC_MAC_154_CTRL5__SYNC_WRD_SEL__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(0) << 1)
#define ATLC_MAC_154_CTRL5__SYNC_WRD_SEL__RESET_VALUE               0x00000000U
/** @} */

/* macros for field nd_rx */
/**
 * @defgroup at_lc_regs_core_nd_rx_field nd_rx_field
 * @brief macros for field nd_rx
 * @details node index when address length => 0 0 for BLE/154 where address length is 0.
 * @{
 */
#define ATLC_MAC_154_CTRL5__ND_RX__SHIFT                                      4
#define ATLC_MAC_154_CTRL5__ND_RX__WIDTH                                      3
#define ATLC_MAC_154_CTRL5__ND_RX__MASK                             0x00000070U
#define ATLC_MAC_154_CTRL5__ND_RX__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000070U) >> 4)
#define ATLC_MAC_154_CTRL5__ND_RX__WRITE(src) \
                    (((uint32_t)(src)\
                    << 4) & 0x00000070U)
#define ATLC_MAC_154_CTRL5__ND_RX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000070U) | (((uint32_t)(src) <<\
                    4) & 0x00000070U)
#define ATLC_MAC_154_CTRL5__ND_RX__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 4) & ~0x00000070U)))
#define ATLC_MAC_154_CTRL5__ND_RX__RESET_VALUE                      0x00000000U
/** @} */

/* macros for field endianness_crc */
/**
 * @defgroup at_lc_regs_core_endianness_crc_field endianness_crc_field
 * @brief macros for field endianness_crc
 * @details 0 => lsb of each byte LSB is transmitted first, 1 => msb of each byte MSB is transmitted first applies to only crc
 * @{
 */
#define ATLC_MAC_154_CTRL5__ENDIANNESS_CRC__SHIFT                             7
#define ATLC_MAC_154_CTRL5__ENDIANNESS_CRC__WIDTH                             1
#define ATLC_MAC_154_CTRL5__ENDIANNESS_CRC__MASK                    0x00000080U
#define ATLC_MAC_154_CTRL5__ENDIANNESS_CRC__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000080U) >> 7)
#define ATLC_MAC_154_CTRL5__ENDIANNESS_CRC__WRITE(src) \
                    (((uint32_t)(src)\
                    << 7) & 0x00000080U)
#define ATLC_MAC_154_CTRL5__ENDIANNESS_CRC__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | (((uint32_t)(src) <<\
                    7) & 0x00000080U)
#define ATLC_MAC_154_CTRL5__ENDIANNESS_CRC__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 7) & ~0x00000080U)))
#define ATLC_MAC_154_CTRL5__ENDIANNESS_CRC__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(1) << 7)
#define ATLC_MAC_154_CTRL5__ENDIANNESS_CRC__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(0) << 7)
#define ATLC_MAC_154_CTRL5__ENDIANNESS_CRC__RESET_VALUE             0x00000000U
/** @} */

/* macros for field rx_sync_pls_n */
/**
 * @defgroup at_lc_regs_core_rx_sync_pls_n_field rx_sync_pls_n_field
 * @brief macros for field rx_sync_pls_n
 * @details generate an interrupt after receiving this number of bits after sync words
 * @{
 */
#define ATLC_MAC_154_CTRL5__RX_SYNC_PLS_N__SHIFT                              8
#define ATLC_MAC_154_CTRL5__RX_SYNC_PLS_N__WIDTH                             11
#define ATLC_MAC_154_CTRL5__RX_SYNC_PLS_N__MASK                     0x0007ff00U
#define ATLC_MAC_154_CTRL5__RX_SYNC_PLS_N__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0007ff00U) >> 8)
#define ATLC_MAC_154_CTRL5__RX_SYNC_PLS_N__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0007ff00U)
#define ATLC_MAC_154_CTRL5__RX_SYNC_PLS_N__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0007ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0007ff00U)
#define ATLC_MAC_154_CTRL5__RX_SYNC_PLS_N__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0007ff00U)))
#define ATLC_MAC_154_CTRL5__RX_SYNC_PLS_N__RESET_VALUE              0x00000000U
/** @} */

/* macros for field rx_sync_pls_n_en */
/**
 * @defgroup at_lc_regs_core_rx_sync_pls_n_en_field rx_sync_pls_n_en_field
 * @brief macros for field rx_sync_pls_n_en
 * @details enable bit of rx_sync_pls_n interrupt generation
 * @{
 */
#define ATLC_MAC_154_CTRL5__RX_SYNC_PLS_N_EN__SHIFT                          19
#define ATLC_MAC_154_CTRL5__RX_SYNC_PLS_N_EN__WIDTH                           1
#define ATLC_MAC_154_CTRL5__RX_SYNC_PLS_N_EN__MASK                  0x00080000U
#define ATLC_MAC_154_CTRL5__RX_SYNC_PLS_N_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00080000U) >> 19)
#define ATLC_MAC_154_CTRL5__RX_SYNC_PLS_N_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 19) & 0x00080000U)
#define ATLC_MAC_154_CTRL5__RX_SYNC_PLS_N_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00080000U) | (((uint32_t)(src) <<\
                    19) & 0x00080000U)
#define ATLC_MAC_154_CTRL5__RX_SYNC_PLS_N_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 19) & ~0x00080000U)))
#define ATLC_MAC_154_CTRL5__RX_SYNC_PLS_N_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00080000U) | ((uint32_t)(1) << 19)
#define ATLC_MAC_154_CTRL5__RX_SYNC_PLS_N_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00080000U) | ((uint32_t)(0) << 19)
#define ATLC_MAC_154_CTRL5__RX_SYNC_PLS_N_EN__RESET_VALUE           0x00000000U
/** @} */

/* macros for field tm_stmp_pst_chk_en */
/**
 * @defgroup at_lc_regs_core_tm_stmp_pst_chk_en_field tm_stmp_pst_chk_en_field
 * @brief macros for field tm_stmp_pst_chk_en
 * @details enable bit of past time stamp check
 * @{
 */
#define ATLC_MAC_154_CTRL5__TM_STMP_PST_CHK_EN__SHIFT                        20
#define ATLC_MAC_154_CTRL5__TM_STMP_PST_CHK_EN__WIDTH                         1
#define ATLC_MAC_154_CTRL5__TM_STMP_PST_CHK_EN__MASK                0x00100000U
#define ATLC_MAC_154_CTRL5__TM_STMP_PST_CHK_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00100000U) >> 20)
#define ATLC_MAC_154_CTRL5__TM_STMP_PST_CHK_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 20) & 0x00100000U)
#define ATLC_MAC_154_CTRL5__TM_STMP_PST_CHK_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00100000U) | (((uint32_t)(src) <<\
                    20) & 0x00100000U)
#define ATLC_MAC_154_CTRL5__TM_STMP_PST_CHK_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 20) & ~0x00100000U)))
#define ATLC_MAC_154_CTRL5__TM_STMP_PST_CHK_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00100000U) | ((uint32_t)(1) << 20)
#define ATLC_MAC_154_CTRL5__TM_STMP_PST_CHK_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00100000U) | ((uint32_t)(0) << 20)
#define ATLC_MAC_154_CTRL5__TM_STMP_PST_CHK_EN__RESET_VALUE         0x00000001U
/** @} */

/* macros for field phr_err_chk_en */
/**
 * @defgroup at_lc_regs_core_phr_err_chk_en_field phr_err_chk_en_field
 * @brief macros for field phr_err_chk_en
 * @details enable bit of PHR reserved bit check
 * @{
 */
#define ATLC_MAC_154_CTRL5__PHR_ERR_CHK_EN__SHIFT                            21
#define ATLC_MAC_154_CTRL5__PHR_ERR_CHK_EN__WIDTH                             1
#define ATLC_MAC_154_CTRL5__PHR_ERR_CHK_EN__MASK                    0x00200000U
#define ATLC_MAC_154_CTRL5__PHR_ERR_CHK_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00200000U) >> 21)
#define ATLC_MAC_154_CTRL5__PHR_ERR_CHK_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 21) & 0x00200000U)
#define ATLC_MAC_154_CTRL5__PHR_ERR_CHK_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00200000U) | (((uint32_t)(src) <<\
                    21) & 0x00200000U)
#define ATLC_MAC_154_CTRL5__PHR_ERR_CHK_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 21) & ~0x00200000U)))
#define ATLC_MAC_154_CTRL5__PHR_ERR_CHK_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00200000U) | ((uint32_t)(1) << 21)
#define ATLC_MAC_154_CTRL5__PHR_ERR_CHK_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00200000U) | ((uint32_t)(0) << 21)
#define ATLC_MAC_154_CTRL5__PHR_ERR_CHK_EN__RESET_VALUE             0x00000000U
/** @} */
#define ATLC_MAC_154_CTRL5__TYPE                                       uint32_t
#define ATLC_MAC_154_CTRL5__READ                                    0x003ffff3U
#define ATLC_MAC_154_CTRL5__WRITE                                   0x003ffff3U
#define ATLC_MAC_154_CTRL5__PRESERVED                               0x00000000U
#define ATLC_MAC_154_CTRL5__RESET_VALUE                             0x00100000U

#endif /* __ATLC_MAC_154_CTRL5_MACRO__ */

/** @} end of mac_154_ctrl5 */

/* macros for BlueprintGlobalNameSpace::ATLC_mac_154_ctrl6 */
/**
 * @defgroup at_lc_regs_core_mac_154_ctrl6 mac_154_ctrl6
 * @brief Contains register fields associated with mac_154_ctrl6. definitions.
 * @{
 */
#ifndef __ATLC_MAC_154_CTRL6_MACRO__
#define __ATLC_MAC_154_CTRL6_MACRO__

/* macros for field rate */
/**
 * @defgroup at_lc_regs_core_rate_field rate_field
 * @brief macros for field rate
 * @details 1 => 250K
 * @{
 */
#define ATLC_MAC_154_CTRL6__RATE__SHIFT                                       0
#define ATLC_MAC_154_CTRL6__RATE__WIDTH                                       4
#define ATLC_MAC_154_CTRL6__RATE__MASK                              0x0000000fU
#define ATLC_MAC_154_CTRL6__RATE__READ(src)     ((uint32_t)(src) & 0x0000000fU)
#define ATLC_MAC_154_CTRL6__RATE__WRITE(src)    ((uint32_t)(src) & 0x0000000fU)
#define ATLC_MAC_154_CTRL6__RATE__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000000fU) | ((uint32_t)(src) &\
                    0x0000000fU)
#define ATLC_MAC_154_CTRL6__RATE__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x0000000fU)))
#define ATLC_MAC_154_CTRL6__RATE__RESET_VALUE                       0x00000001U
/** @} */

/* macros for field phdr_len */
/**
 * @defgroup at_lc_regs_core_phdr_len_field phdr_len_field
 * @brief macros for field phdr_len
 * @details phy header length in bytes. Fixed at 1 for 15.4.
 * @{
 */
#define ATLC_MAC_154_CTRL6__PHDR_LEN__SHIFT                                   4
#define ATLC_MAC_154_CTRL6__PHDR_LEN__WIDTH                                   4
#define ATLC_MAC_154_CTRL6__PHDR_LEN__MASK                          0x000000f0U
#define ATLC_MAC_154_CTRL6__PHDR_LEN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x000000f0U) >> 4)
#define ATLC_MAC_154_CTRL6__PHDR_LEN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 4) & 0x000000f0U)
#define ATLC_MAC_154_CTRL6__PHDR_LEN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000f0U) | (((uint32_t)(src) <<\
                    4) & 0x000000f0U)
#define ATLC_MAC_154_CTRL6__PHDR_LEN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 4) & ~0x000000f0U)))
#define ATLC_MAC_154_CTRL6__PHDR_LEN__RESET_VALUE                   0x00000001U
/** @} */

/* macros for field mic_len */
/**
 * @defgroup at_lc_regs_core_mic_len_field mic_len_field
 * @brief macros for field mic_len
 * @details 0 => no mic, 1 => 4 byte, 2 => 8 byte, 3 => 16 byte
 * @{
 */
#define ATLC_MAC_154_CTRL6__MIC_LEN__SHIFT                                    8
#define ATLC_MAC_154_CTRL6__MIC_LEN__WIDTH                                    2
#define ATLC_MAC_154_CTRL6__MIC_LEN__MASK                           0x00000300U
#define ATLC_MAC_154_CTRL6__MIC_LEN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000300U) >> 8)
#define ATLC_MAC_154_CTRL6__MIC_LEN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00000300U)
#define ATLC_MAC_154_CTRL6__MIC_LEN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000300U) | (((uint32_t)(src) <<\
                    8) & 0x00000300U)
#define ATLC_MAC_154_CTRL6__MIC_LEN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00000300U)))
#define ATLC_MAC_154_CTRL6__MIC_LEN__RESET_VALUE                    0x00000000U
/** @} */

/* macros for field hdr_ftch_dly_sync_pls_n */
/**
 * @defgroup at_lc_regs_core_hdr_ftch_dly_sync_pls_n_field hdr_ftch_dly_sync_pls_n_field
 * @brief macros for field hdr_ftch_dly_sync_pls_n
 * @details delay header fetch n bit after sync word starts to be transmitted used only when hdr_ftch_dly_en is set.
 * @{
 */
#define ATLC_MAC_154_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N__SHIFT                   10
#define ATLC_MAC_154_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N__WIDTH                    5
#define ATLC_MAC_154_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N__MASK           0x00007c00U
#define ATLC_MAC_154_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00007c00U) >> 10)
#define ATLC_MAC_154_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N__WRITE(src) \
                    (((uint32_t)(src)\
                    << 10) & 0x00007c00U)
#define ATLC_MAC_154_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00007c00U) | (((uint32_t)(src) <<\
                    10) & 0x00007c00U)
#define ATLC_MAC_154_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 10) & ~0x00007c00U)))
#define ATLC_MAC_154_CTRL6__HDR_FTCH_DLY_SYNC_PLS_N__RESET_VALUE    0x00000004U
/** @} */
#define ATLC_MAC_154_CTRL6__TYPE                                       uint32_t
#define ATLC_MAC_154_CTRL6__READ                                    0x00007fffU
#define ATLC_MAC_154_CTRL6__WRITE                                   0x00007fffU
#define ATLC_MAC_154_CTRL6__PRESERVED                               0x00000000U
#define ATLC_MAC_154_CTRL6__RESET_VALUE                             0x00001011U

#endif /* __ATLC_MAC_154_CTRL6_MACRO__ */

/** @} end of mac_154_ctrl6 */

/* macros for BlueprintGlobalNameSpace::ATLC_mac_154_ctrl7 */
/**
 * @defgroup at_lc_regs_core_mac_154_ctrl7 mac_154_ctrl7
 * @brief Contains register fields associated with mac_154_ctrl7. definitions.
 * @{
 */
#ifndef __ATLC_MAC_154_CTRL7_MACRO__
#define __ATLC_MAC_154_CTRL7_MACRO__

/* macros for field rx_ed_mns_n */
/**
 * @defgroup at_lc_regs_core_rx_ed_mns_n_field rx_ed_mns_n_field
 * @brief macros for field rx_ed_mns_n
 * @details generate an interrupt this number of us before rx end
 * @{
 */
#define ATLC_MAC_154_CTRL7__RX_ED_MNS_N__SHIFT                                0
#define ATLC_MAC_154_CTRL7__RX_ED_MNS_N__WIDTH                                7
#define ATLC_MAC_154_CTRL7__RX_ED_MNS_N__MASK                       0x0000007fU
#define ATLC_MAC_154_CTRL7__RX_ED_MNS_N__READ(src) \
                    ((uint32_t)(src)\
                    & 0x0000007fU)
#define ATLC_MAC_154_CTRL7__RX_ED_MNS_N__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x0000007fU)
#define ATLC_MAC_154_CTRL7__RX_ED_MNS_N__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000007fU) | ((uint32_t)(src) &\
                    0x0000007fU)
#define ATLC_MAC_154_CTRL7__RX_ED_MNS_N__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x0000007fU)))
#define ATLC_MAC_154_CTRL7__RX_ED_MNS_N__RESET_VALUE                0x00000000U
/** @} */

/* macros for field rx_ed_mns_n_en */
/**
 * @defgroup at_lc_regs_core_rx_ed_mns_n_en_field rx_ed_mns_n_en_field
 * @brief macros for field rx_ed_mns_n_en
 * @details enable bit of rx_ed_mns_n interrupt generation
 * @{
 */
#define ATLC_MAC_154_CTRL7__RX_ED_MNS_N_EN__SHIFT                             7
#define ATLC_MAC_154_CTRL7__RX_ED_MNS_N_EN__WIDTH                             1
#define ATLC_MAC_154_CTRL7__RX_ED_MNS_N_EN__MASK                    0x00000080U
#define ATLC_MAC_154_CTRL7__RX_ED_MNS_N_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000080U) >> 7)
#define ATLC_MAC_154_CTRL7__RX_ED_MNS_N_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 7) & 0x00000080U)
#define ATLC_MAC_154_CTRL7__RX_ED_MNS_N_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | (((uint32_t)(src) <<\
                    7) & 0x00000080U)
#define ATLC_MAC_154_CTRL7__RX_ED_MNS_N_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 7) & ~0x00000080U)))
#define ATLC_MAC_154_CTRL7__RX_ED_MNS_N_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(1) << 7)
#define ATLC_MAC_154_CTRL7__RX_ED_MNS_N_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(0) << 7)
#define ATLC_MAC_154_CTRL7__RX_ED_MNS_N_EN__RESET_VALUE             0x00000000U
/** @} */

/* macros for field tx_ed_mns_n */
/**
 * @defgroup at_lc_regs_core_tx_ed_mns_n_field tx_ed_mns_n_field
 * @brief macros for field tx_ed_mns_n
 * @details generate an interrupt this number of us before tx end
 * @{
 */
#define ATLC_MAC_154_CTRL7__TX_ED_MNS_N__SHIFT                                8
#define ATLC_MAC_154_CTRL7__TX_ED_MNS_N__WIDTH                                7
#define ATLC_MAC_154_CTRL7__TX_ED_MNS_N__MASK                       0x00007f00U
#define ATLC_MAC_154_CTRL7__TX_ED_MNS_N__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00007f00U) >> 8)
#define ATLC_MAC_154_CTRL7__TX_ED_MNS_N__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00007f00U)
#define ATLC_MAC_154_CTRL7__TX_ED_MNS_N__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00007f00U) | (((uint32_t)(src) <<\
                    8) & 0x00007f00U)
#define ATLC_MAC_154_CTRL7__TX_ED_MNS_N__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00007f00U)))
#define ATLC_MAC_154_CTRL7__TX_ED_MNS_N__RESET_VALUE                0x00000000U
/** @} */

/* macros for field tx_ed_mns_n_en */
/**
 * @defgroup at_lc_regs_core_tx_ed_mns_n_en_field tx_ed_mns_n_en_field
 * @brief macros for field tx_ed_mns_n_en
 * @details enable bit of tx_ed_mns_n interrupt generation
 * @{
 */
#define ATLC_MAC_154_CTRL7__TX_ED_MNS_N_EN__SHIFT                            15
#define ATLC_MAC_154_CTRL7__TX_ED_MNS_N_EN__WIDTH                             1
#define ATLC_MAC_154_CTRL7__TX_ED_MNS_N_EN__MASK                    0x00008000U
#define ATLC_MAC_154_CTRL7__TX_ED_MNS_N_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00008000U) >> 15)
#define ATLC_MAC_154_CTRL7__TX_ED_MNS_N_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 15) & 0x00008000U)
#define ATLC_MAC_154_CTRL7__TX_ED_MNS_N_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | (((uint32_t)(src) <<\
                    15) & 0x00008000U)
#define ATLC_MAC_154_CTRL7__TX_ED_MNS_N_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 15) & ~0x00008000U)))
#define ATLC_MAC_154_CTRL7__TX_ED_MNS_N_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | ((uint32_t)(1) << 15)
#define ATLC_MAC_154_CTRL7__TX_ED_MNS_N_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | ((uint32_t)(0) << 15)
#define ATLC_MAC_154_CTRL7__TX_ED_MNS_N_EN__RESET_VALUE             0x00000000U
/** @} */

/* macros for field rx_ed_mns_n_pst_en */
/**
 * @defgroup at_lc_regs_core_rx_ed_mns_n_pst_en_field rx_ed_mns_n_pst_en_field
 * @brief macros for field rx_ed_mns_n_pst_en
 * @details generate rx_ed_mns_n interrupt when ATLC finds the requested time has already passed.
 * @{
 */
#define ATLC_MAC_154_CTRL7__RX_ED_MNS_N_PST_EN__SHIFT                        16
#define ATLC_MAC_154_CTRL7__RX_ED_MNS_N_PST_EN__WIDTH                         1
#define ATLC_MAC_154_CTRL7__RX_ED_MNS_N_PST_EN__MASK                0x00010000U
#define ATLC_MAC_154_CTRL7__RX_ED_MNS_N_PST_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_MAC_154_CTRL7__RX_ED_MNS_N_PST_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00010000U)
#define ATLC_MAC_154_CTRL7__RX_ED_MNS_N_PST_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | (((uint32_t)(src) <<\
                    16) & 0x00010000U)
#define ATLC_MAC_154_CTRL7__RX_ED_MNS_N_PST_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00010000U)))
#define ATLC_MAC_154_CTRL7__RX_ED_MNS_N_PST_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_MAC_154_CTRL7__RX_ED_MNS_N_PST_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_MAC_154_CTRL7__RX_ED_MNS_N_PST_EN__RESET_VALUE         0x00000001U
/** @} */

/* macros for field tx_ed_mns_n_pst_en */
/**
 * @defgroup at_lc_regs_core_tx_ed_mns_n_pst_en_field tx_ed_mns_n_pst_en_field
 * @brief macros for field tx_ed_mns_n_pst_en
 * @details generate tx_ed_mns_n interrupt when ATLC finds the requested time has already passed.
 * @{
 */
#define ATLC_MAC_154_CTRL7__TX_ED_MNS_N_PST_EN__SHIFT                        17
#define ATLC_MAC_154_CTRL7__TX_ED_MNS_N_PST_EN__WIDTH                         1
#define ATLC_MAC_154_CTRL7__TX_ED_MNS_N_PST_EN__MASK                0x00020000U
#define ATLC_MAC_154_CTRL7__TX_ED_MNS_N_PST_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00020000U) >> 17)
#define ATLC_MAC_154_CTRL7__TX_ED_MNS_N_PST_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 17) & 0x00020000U)
#define ATLC_MAC_154_CTRL7__TX_ED_MNS_N_PST_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00020000U) | (((uint32_t)(src) <<\
                    17) & 0x00020000U)
#define ATLC_MAC_154_CTRL7__TX_ED_MNS_N_PST_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 17) & ~0x00020000U)))
#define ATLC_MAC_154_CTRL7__TX_ED_MNS_N_PST_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00020000U) | ((uint32_t)(1) << 17)
#define ATLC_MAC_154_CTRL7__TX_ED_MNS_N_PST_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00020000U) | ((uint32_t)(0) << 17)
#define ATLC_MAC_154_CTRL7__TX_ED_MNS_N_PST_EN__RESET_VALUE         0x00000001U
/** @} */
#define ATLC_MAC_154_CTRL7__TYPE                                       uint32_t
#define ATLC_MAC_154_CTRL7__READ                                    0x0003ffffU
#define ATLC_MAC_154_CTRL7__WRITE                                   0x0003ffffU
#define ATLC_MAC_154_CTRL7__PRESERVED                               0x00000000U
#define ATLC_MAC_154_CTRL7__RESET_VALUE                             0x00030000U

#endif /* __ATLC_MAC_154_CTRL7_MACRO__ */

/** @} end of mac_154_ctrl7 */

/* macros for BlueprintGlobalNameSpace::ATLC_aesccm_acc_ctrl0 */
/**
 * @defgroup at_lc_regs_core_aesccm_acc_ctrl0 aesccm_acc_ctrl0
 * @brief Contains register fields associated with aesccm_acc_ctrl0. definitions.
 * @{
 */
#ifndef __ATLC_AESCCM_ACC_CTRL0_MACRO__
#define __ATLC_AESCCM_ACC_CTRL0_MACRO__

/* macros for field secu_level */
/**
 * @defgroup at_lc_regs_core_secu_level_field secu_level_field
 * @brief macros for field secu_level
 * @details 0 => none 1 => no payload secure/desecure only authentication mic 32 2 => no payload secure/desecure only authentication mic 64 3 => no payload secure/desecure only authentication mic 128 4 => reserved on 802.15.4.2015 , only secure/desecure payload, no authentication mic on 802.15.4.2006 5 => payload secure/desecure and authentication mic 32 6 => payload secure/desecure and authentication mic 64 7 => payload secure/desecure and authentication mic 128
 * @{
 */
#define ATLC_AESCCM_ACC_CTRL0__SECU_LEVEL__SHIFT                              0
#define ATLC_AESCCM_ACC_CTRL0__SECU_LEVEL__WIDTH                              3
#define ATLC_AESCCM_ACC_CTRL0__SECU_LEVEL__MASK                     0x00000007U
#define ATLC_AESCCM_ACC_CTRL0__SECU_LEVEL__READ(src) \
                    ((uint32_t)(src)\
                    & 0x00000007U)
#define ATLC_AESCCM_ACC_CTRL0__SECU_LEVEL__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x00000007U)
#define ATLC_AESCCM_ACC_CTRL0__SECU_LEVEL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000007U) | ((uint32_t)(src) &\
                    0x00000007U)
#define ATLC_AESCCM_ACC_CTRL0__SECU_LEVEL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000007U)))
#define ATLC_AESCCM_ACC_CTRL0__SECU_LEVEL__RESET_VALUE              0x00000000U
/** @} */

/* macros for field prtcl_use_secu */
/**
 * @defgroup at_lc_regs_core_prtcl_use_secu_field prtcl_use_secu_field
 * @brief macros for field prtcl_use_secu
 * @details 0 => 15.4, 1 => Zigbee, 2 => Rf4CE, other =>reserved
 * @{
 */
#define ATLC_AESCCM_ACC_CTRL0__PRTCL_USE_SECU__SHIFT                          3
#define ATLC_AESCCM_ACC_CTRL0__PRTCL_USE_SECU__WIDTH                          3
#define ATLC_AESCCM_ACC_CTRL0__PRTCL_USE_SECU__MASK                 0x00000038U
#define ATLC_AESCCM_ACC_CTRL0__PRTCL_USE_SECU__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000038U) >> 3)
#define ATLC_AESCCM_ACC_CTRL0__PRTCL_USE_SECU__WRITE(src) \
                    (((uint32_t)(src)\
                    << 3) & 0x00000038U)
#define ATLC_AESCCM_ACC_CTRL0__PRTCL_USE_SECU__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000038U) | (((uint32_t)(src) <<\
                    3) & 0x00000038U)
#define ATLC_AESCCM_ACC_CTRL0__PRTCL_USE_SECU__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 3) & ~0x00000038U)))
#define ATLC_AESCCM_ACC_CTRL0__PRTCL_USE_SECU__RESET_VALUE          0x00000000U
/** @} */
#define ATLC_AESCCM_ACC_CTRL0__TYPE                                    uint32_t
#define ATLC_AESCCM_ACC_CTRL0__READ                                 0x0000003fU
#define ATLC_AESCCM_ACC_CTRL0__WRITE                                0x0000003fU
#define ATLC_AESCCM_ACC_CTRL0__PRESERVED                            0x00000000U
#define ATLC_AESCCM_ACC_CTRL0__RESET_VALUE                          0x00000000U

#endif /* __ATLC_AESCCM_ACC_CTRL0_MACRO__ */

/** @} end of aesccm_acc_ctrl0 */

/* macros for BlueprintGlobalNameSpace::ATLC_aesccm_acc_ctrl1 */
/**
 * @defgroup at_lc_regs_core_aesccm_acc_ctrl1 aesccm_acc_ctrl1
 * @brief Contains register fields associated with aesccm_acc_ctrl1. definitions.
 * @{
 */
#ifndef __ATLC_AESCCM_ACC_CTRL1_MACRO__
#define __ATLC_AESCCM_ACC_CTRL1_MACRO__

/* macros for field mess_body_oft */
/**
 * @defgroup at_lc_regs_core_mess_body_oft_field mess_body_oft_field
 * @brief macros for field mess_body_oft
 * @details message body start point which compare to whole data (packet) first byte
 * @{
 */
#define ATLC_AESCCM_ACC_CTRL1__MESS_BODY_OFT__SHIFT                           0
#define ATLC_AESCCM_ACC_CTRL1__MESS_BODY_OFT__WIDTH                          16
#define ATLC_AESCCM_ACC_CTRL1__MESS_BODY_OFT__MASK                  0x0000ffffU
#define ATLC_AESCCM_ACC_CTRL1__MESS_BODY_OFT__READ(src) \
                    ((uint32_t)(src)\
                    & 0x0000ffffU)
#define ATLC_AESCCM_ACC_CTRL1__MESS_BODY_OFT__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x0000ffffU)
#define ATLC_AESCCM_ACC_CTRL1__MESS_BODY_OFT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_AESCCM_ACC_CTRL1__MESS_BODY_OFT__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x0000ffffU)))
#define ATLC_AESCCM_ACC_CTRL1__MESS_BODY_OFT__RESET_VALUE           0x00000000U
/** @} */

/* macros for field mess_body_len */
/**
 * @defgroup at_lc_regs_core_mess_body_len_field mess_body_len_field
 * @brief macros for field mess_body_len
 * @details message body length , the payload part lenght which need encrypt/decrypt
 * @{
 */
#define ATLC_AESCCM_ACC_CTRL1__MESS_BODY_LEN__SHIFT                          16
#define ATLC_AESCCM_ACC_CTRL1__MESS_BODY_LEN__WIDTH                          16
#define ATLC_AESCCM_ACC_CTRL1__MESS_BODY_LEN__MASK                  0xffff0000U
#define ATLC_AESCCM_ACC_CTRL1__MESS_BODY_LEN__READ(src) \
                    (((uint32_t)(src)\
                    & 0xffff0000U) >> 16)
#define ATLC_AESCCM_ACC_CTRL1__MESS_BODY_LEN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0xffff0000U)
#define ATLC_AESCCM_ACC_CTRL1__MESS_BODY_LEN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffff0000U) | (((uint32_t)(src) <<\
                    16) & 0xffff0000U)
#define ATLC_AESCCM_ACC_CTRL1__MESS_BODY_LEN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0xffff0000U)))
#define ATLC_AESCCM_ACC_CTRL1__MESS_BODY_LEN__RESET_VALUE           0x00000000U
/** @} */
#define ATLC_AESCCM_ACC_CTRL1__TYPE                                    uint32_t
#define ATLC_AESCCM_ACC_CTRL1__READ                                 0xffffffffU
#define ATLC_AESCCM_ACC_CTRL1__WRITE                                0xffffffffU
#define ATLC_AESCCM_ACC_CTRL1__PRESERVED                            0x00000000U
#define ATLC_AESCCM_ACC_CTRL1__RESET_VALUE                          0x00000000U

#endif /* __ATLC_AESCCM_ACC_CTRL1_MACRO__ */

/** @} end of aesccm_acc_ctrl1 */

/* macros for BlueprintGlobalNameSpace::ATLC_aesccm_acc_ctrl2 */
/**
 * @defgroup at_lc_regs_core_aesccm_acc_ctrl2 aesccm_acc_ctrl2
 * @brief Contains register fields associated with aesccm_acc_ctrl2. definitions.
 * @{
 */
#ifndef __ATLC_AESCCM_ACC_CTRL2_MACRO__
#define __ATLC_AESCCM_ACC_CTRL2_MACRO__

/* macros for field auth_body_oft */
/**
 * @defgroup at_lc_regs_core_auth_body_oft_field auth_body_oft_field
 * @brief macros for field auth_body_oft
 * @details authentication body start point which compare to whole data (packet) first byte
 * @{
 */
#define ATLC_AESCCM_ACC_CTRL2__AUTH_BODY_OFT__SHIFT                           0
#define ATLC_AESCCM_ACC_CTRL2__AUTH_BODY_OFT__WIDTH                          16
#define ATLC_AESCCM_ACC_CTRL2__AUTH_BODY_OFT__MASK                  0x0000ffffU
#define ATLC_AESCCM_ACC_CTRL2__AUTH_BODY_OFT__READ(src) \
                    ((uint32_t)(src)\
                    & 0x0000ffffU)
#define ATLC_AESCCM_ACC_CTRL2__AUTH_BODY_OFT__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x0000ffffU)
#define ATLC_AESCCM_ACC_CTRL2__AUTH_BODY_OFT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_AESCCM_ACC_CTRL2__AUTH_BODY_OFT__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x0000ffffU)))
#define ATLC_AESCCM_ACC_CTRL2__AUTH_BODY_OFT__RESET_VALUE           0x00000000U
/** @} */

/* macros for field auth_body_len */
/**
 * @defgroup at_lc_regs_core_auth_body_len_field auth_body_len_field
 * @brief macros for field auth_body_len
 * @details authtication body length , part lenght which need mic calculation
 * @{
 */
#define ATLC_AESCCM_ACC_CTRL2__AUTH_BODY_LEN__SHIFT                          16
#define ATLC_AESCCM_ACC_CTRL2__AUTH_BODY_LEN__WIDTH                          16
#define ATLC_AESCCM_ACC_CTRL2__AUTH_BODY_LEN__MASK                  0xffff0000U
#define ATLC_AESCCM_ACC_CTRL2__AUTH_BODY_LEN__READ(src) \
                    (((uint32_t)(src)\
                    & 0xffff0000U) >> 16)
#define ATLC_AESCCM_ACC_CTRL2__AUTH_BODY_LEN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0xffff0000U)
#define ATLC_AESCCM_ACC_CTRL2__AUTH_BODY_LEN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffff0000U) | (((uint32_t)(src) <<\
                    16) & 0xffff0000U)
#define ATLC_AESCCM_ACC_CTRL2__AUTH_BODY_LEN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0xffff0000U)))
#define ATLC_AESCCM_ACC_CTRL2__AUTH_BODY_LEN__RESET_VALUE           0x00000000U
/** @} */
#define ATLC_AESCCM_ACC_CTRL2__TYPE                                    uint32_t
#define ATLC_AESCCM_ACC_CTRL2__READ                                 0xffffffffU
#define ATLC_AESCCM_ACC_CTRL2__WRITE                                0xffffffffU
#define ATLC_AESCCM_ACC_CTRL2__PRESERVED                            0x00000000U
#define ATLC_AESCCM_ACC_CTRL2__RESET_VALUE                          0x00000000U

#endif /* __ATLC_AESCCM_ACC_CTRL2_MACRO__ */

/** @} end of aesccm_acc_ctrl2 */

/* macros for BlueprintGlobalNameSpace::ATLC_aesccm_acc_ctrl3 */
/**
 * @defgroup at_lc_regs_core_aesccm_acc_ctrl3 aesccm_acc_ctrl3
 * @brief Contains register fields associated with aesccm_acc_ctrl3. definitions.
 * @{
 */
#ifndef __ATLC_AESCCM_ACC_CTRL3_MACRO__
#define __ATLC_AESCCM_ACC_CTRL3_MACRO__

/* macros for field src_ptr */
/**
 * @defgroup at_lc_regs_core_src_ptr_field src_ptr_field
 * @brief macros for field src_ptr
 * @details related to cmd=0x11 => the unsecured data buffer pointer before apply secure operation
 * @{
 */
#define ATLC_AESCCM_ACC_CTRL3__SRC_PTR__SHIFT                                 0
#define ATLC_AESCCM_ACC_CTRL3__SRC_PTR__WIDTH                                16
#define ATLC_AESCCM_ACC_CTRL3__SRC_PTR__MASK                        0x0000ffffU
#define ATLC_AESCCM_ACC_CTRL3__SRC_PTR__READ(src) \
                    ((uint32_t)(src)\
                    & 0x0000ffffU)
#define ATLC_AESCCM_ACC_CTRL3__SRC_PTR__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x0000ffffU)
#define ATLC_AESCCM_ACC_CTRL3__SRC_PTR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_AESCCM_ACC_CTRL3__SRC_PTR__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x0000ffffU)))
#define ATLC_AESCCM_ACC_CTRL3__SRC_PTR__RESET_VALUE                 0x00000000U
/** @} */

/* macros for field dst_ptr */
/**
 * @defgroup at_lc_regs_core_dst_ptr_field dst_ptr_field
 * @brief macros for field dst_ptr
 * @details related to cmd=0x11 => the data buffer pointer of secured-data after apply secure operation
 * @{
 */
#define ATLC_AESCCM_ACC_CTRL3__DST_PTR__SHIFT                                16
#define ATLC_AESCCM_ACC_CTRL3__DST_PTR__WIDTH                                16
#define ATLC_AESCCM_ACC_CTRL3__DST_PTR__MASK                        0xffff0000U
#define ATLC_AESCCM_ACC_CTRL3__DST_PTR__READ(src) \
                    (((uint32_t)(src)\
                    & 0xffff0000U) >> 16)
#define ATLC_AESCCM_ACC_CTRL3__DST_PTR__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0xffff0000U)
#define ATLC_AESCCM_ACC_CTRL3__DST_PTR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffff0000U) | (((uint32_t)(src) <<\
                    16) & 0xffff0000U)
#define ATLC_AESCCM_ACC_CTRL3__DST_PTR__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0xffff0000U)))
#define ATLC_AESCCM_ACC_CTRL3__DST_PTR__RESET_VALUE                 0x00000000U
/** @} */
#define ATLC_AESCCM_ACC_CTRL3__TYPE                                    uint32_t
#define ATLC_AESCCM_ACC_CTRL3__READ                                 0xffffffffU
#define ATLC_AESCCM_ACC_CTRL3__WRITE                                0xffffffffU
#define ATLC_AESCCM_ACC_CTRL3__PRESERVED                            0x00000000U
#define ATLC_AESCCM_ACC_CTRL3__RESET_VALUE                          0x00000000U

#endif /* __ATLC_AESCCM_ACC_CTRL3_MACRO__ */

/** @} end of aesccm_acc_ctrl3 */

/* macros for BlueprintGlobalNameSpace::ATLC_aesccm_acc_ctrl4 */
/**
 * @defgroup at_lc_regs_core_aesccm_acc_ctrl4 aesccm_acc_ctrl4
 * @brief Contains register fields associated with aesccm_acc_ctrl4. definitions.
 * @{
 */
#ifndef __ATLC_AESCCM_ACC_CTRL4_MACRO__
#define __ATLC_AESCCM_ACC_CTRL4_MACRO__

/* macros for field rxsecure_dst_ptr */
/**
 * @defgroup at_lc_regs_core_rxsecure_dst_ptr_field rxsecure_dst_ptr_field
 * @brief macros for field rxsecure_dst_ptr
 * @details related to cmd=0x12 => when cmd=0x12 excute , will put received secured-data from RF-PHY for later call secure-desecure accelator processing
 * @{
 */
#define ATLC_AESCCM_ACC_CTRL4__RXSECURE_DST_PTR__SHIFT                        0
#define ATLC_AESCCM_ACC_CTRL4__RXSECURE_DST_PTR__WIDTH                       16
#define ATLC_AESCCM_ACC_CTRL4__RXSECURE_DST_PTR__MASK               0x0000ffffU
#define ATLC_AESCCM_ACC_CTRL4__RXSECURE_DST_PTR__READ(src) \
                    ((uint32_t)(src)\
                    & 0x0000ffffU)
#define ATLC_AESCCM_ACC_CTRL4__RXSECURE_DST_PTR__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x0000ffffU)
#define ATLC_AESCCM_ACC_CTRL4__RXSECURE_DST_PTR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_AESCCM_ACC_CTRL4__RXSECURE_DST_PTR__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x0000ffffU)))
#define ATLC_AESCCM_ACC_CTRL4__RXSECURE_DST_PTR__RESET_VALUE        0x00000000U
/** @} */
#define ATLC_AESCCM_ACC_CTRL4__TYPE                                    uint32_t
#define ATLC_AESCCM_ACC_CTRL4__READ                                 0x0000ffffU
#define ATLC_AESCCM_ACC_CTRL4__WRITE                                0x0000ffffU
#define ATLC_AESCCM_ACC_CTRL4__PRESERVED                            0x00000000U
#define ATLC_AESCCM_ACC_CTRL4__RESET_VALUE                          0x00000000U

#endif /* __ATLC_AESCCM_ACC_CTRL4_MACRO__ */

/** @} end of aesccm_acc_ctrl4 */

/* macros for BlueprintGlobalNameSpace::ATLC_mac_154_cca */
/**
 * @defgroup at_lc_regs_core_mac_154_cca mac_154_cca
 * @brief Contains register fields associated with mac_154_cca. definitions.
 * @{
 */
#ifndef __ATLC_MAC_154_CCA_MACRO__
#define __ATLC_MAC_154_CCA_MACRO__

/* macros for field rx_wndw */
/**
 * @defgroup at_lc_regs_core_rx_wndw_field rx_wndw_field
 * @brief macros for field rx_wndw
 * @details cca rx window size in micro second
 * @{
 */
#define ATLC_MAC_154_CCA__RX_WNDW__SHIFT                                      0
#define ATLC_MAC_154_CCA__RX_WNDW__WIDTH                                      8
#define ATLC_MAC_154_CCA__RX_WNDW__MASK                             0x000000ffU
#define ATLC_MAC_154_CCA__RX_WNDW__READ(src)    ((uint32_t)(src) & 0x000000ffU)
#define ATLC_MAC_154_CCA__RX_WNDW__WRITE(src)   ((uint32_t)(src) & 0x000000ffU)
#define ATLC_MAC_154_CCA__RX_WNDW__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_MAC_154_CCA__RX_WNDW__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_MAC_154_CCA__RX_WNDW__RESET_VALUE                      0x00000080U
/** @} */

/* macros for field rx2tx_tm */
/**
 * @defgroup at_lc_regs_core_rx2tx_tm_field rx2tx_tm_field
 * @brief macros for field rx2tx_tm
 * @details cca free rx to tx transition time in micro second
 * @{
 */
#define ATLC_MAC_154_CCA__RX2TX_TM__SHIFT                                     8
#define ATLC_MAC_154_CCA__RX2TX_TM__WIDTH                                     8
#define ATLC_MAC_154_CCA__RX2TX_TM__MASK                            0x0000ff00U
#define ATLC_MAC_154_CCA__RX2TX_TM__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_MAC_154_CCA__RX2TX_TM__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_MAC_154_CCA__RX2TX_TM__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_MAC_154_CCA__RX2TX_TM__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_MAC_154_CCA__RX2TX_TM__RESET_VALUE                     0x000000c0U
/** @} */

/* macros for field at_ed */
/**
 * @defgroup at_lc_regs_core_at_ed_field at_ed_field
 * @brief macros for field at_ed
 * @details cca at the end of rx window instead of cca continously and exits as soon as cca indicated busy
 * @{
 */
#define ATLC_MAC_154_CCA__AT_ED__SHIFT                                       31
#define ATLC_MAC_154_CCA__AT_ED__WIDTH                                        1
#define ATLC_MAC_154_CCA__AT_ED__MASK                               0x80000000U
#define ATLC_MAC_154_CCA__AT_ED__READ(src) \
                    (((uint32_t)(src)\
                    & 0x80000000U) >> 31)
#define ATLC_MAC_154_CCA__AT_ED__WRITE(src) \
                    (((uint32_t)(src)\
                    << 31) & 0x80000000U)
#define ATLC_MAC_154_CCA__AT_ED__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x80000000U) | (((uint32_t)(src) <<\
                    31) & 0x80000000U)
#define ATLC_MAC_154_CCA__AT_ED__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 31) & ~0x80000000U)))
#define ATLC_MAC_154_CCA__AT_ED__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x80000000U) | ((uint32_t)(1) << 31)
#define ATLC_MAC_154_CCA__AT_ED__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x80000000U) | ((uint32_t)(0) << 31)
#define ATLC_MAC_154_CCA__AT_ED__RESET_VALUE                        0x00000001U
/** @} */
#define ATLC_MAC_154_CCA__TYPE                                         uint32_t
#define ATLC_MAC_154_CCA__READ                                      0x8000ffffU
#define ATLC_MAC_154_CCA__WRITE                                     0x8000ffffU
#define ATLC_MAC_154_CCA__PRESERVED                                 0x00000000U
#define ATLC_MAC_154_CCA__RESET_VALUE                               0x8000c080U

#endif /* __ATLC_MAC_154_CCA_MACRO__ */

/** @} end of mac_154_cca */

/* macros for BlueprintGlobalNameSpace::ATLC_mdm_ctrl0 */
/**
 * @defgroup at_lc_regs_core_mdm_ctrl0 mdm_ctrl0
 * @brief Contains register fields associated with mdm_ctrl0. definitions.
 * @{
 */
#ifndef __ATLC_MDM_CTRL0_MACRO__
#define __ATLC_MDM_CTRL0_MACRO__

/* macros for field rx_en_low_tm */
/**
 * @defgroup at_lc_regs_core_rx_en_low_tm_field rx_en_low_tm_field
 * @brief macros for field rx_en_low_tm
 * @details number of 8 MHz clock rx_en need to be deasserted before asserted to look for packet supported for flexMAC.
 * @{
 */
#define ATLC_MDM_CTRL0__RX_EN_LOW_TM__SHIFT                                   0
#define ATLC_MDM_CTRL0__RX_EN_LOW_TM__WIDTH                                   8
#define ATLC_MDM_CTRL0__RX_EN_LOW_TM__MASK                          0x000000ffU
#define ATLC_MDM_CTRL0__RX_EN_LOW_TM__READ(src) ((uint32_t)(src) & 0x000000ffU)
#define ATLC_MDM_CTRL0__RX_EN_LOW_TM__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_MDM_CTRL0__RX_EN_LOW_TM__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_MDM_CTRL0__RX_EN_LOW_TM__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_MDM_CTRL0__RX_EN_LOW_TM__RESET_VALUE                   0x00000008U
/** @} */
#define ATLC_MDM_CTRL0__TYPE                                           uint32_t
#define ATLC_MDM_CTRL0__READ                                        0x000000ffU
#define ATLC_MDM_CTRL0__WRITE                                       0x000000ffU
#define ATLC_MDM_CTRL0__PRESERVED                                   0x00000000U
#define ATLC_MDM_CTRL0__RESET_VALUE                                 0x00000008U

#endif /* __ATLC_MDM_CTRL0_MACRO__ */

/** @} end of mdm_ctrl0 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_lp_ctrl0 */
/**
 * @defgroup at_lc_regs_core_lc_lp_ctrl0 lc_lp_ctrl0
 * @brief _RETENTION_ definitions.
 * @{
 */
#ifndef __ATLC_LC_LP_CTRL0_MACRO__
#define __ATLC_LC_LP_CTRL0_MACRO__

/* macros for field osc_slp_en */
/**
 * @defgroup at_lc_regs_core_osc_slp_en_field osc_slp_en_field
 * @brief macros for field osc_slp_en
 * @details enable oscillator to power down during sleep state refer to uarch on sleep/wakeup mechanism (to be uppdated)
 * @{
 */
#define ATLC_LC_LP_CTRL0__OSC_SLP_EN__SHIFT                                   0
#define ATLC_LC_LP_CTRL0__OSC_SLP_EN__WIDTH                                   1
#define ATLC_LC_LP_CTRL0__OSC_SLP_EN__MASK                          0x00000001U
#define ATLC_LC_LP_CTRL0__OSC_SLP_EN__READ(src) ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_LP_CTRL0__OSC_SLP_EN__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_LC_LP_CTRL0__OSC_SLP_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_LC_LP_CTRL0__OSC_SLP_EN__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_LC_LP_CTRL0__OSC_SLP_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_LP_CTRL0__OSC_SLP_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_LP_CTRL0__OSC_SLP_EN__RESET_VALUE                   0x00000000U
/** @} */

/* macros for field radio_slp_en */
/**
 * @defgroup at_lc_regs_core_radio_slp_en_field radio_slp_en_field
 * @brief macros for field radio_slp_en
 * @details enable radio to power down during sleep state
 * @{
 */
#define ATLC_LC_LP_CTRL0__RADIO_SLP_EN__SHIFT                                 1
#define ATLC_LC_LP_CTRL0__RADIO_SLP_EN__WIDTH                                 1
#define ATLC_LC_LP_CTRL0__RADIO_SLP_EN__MASK                        0x00000002U
#define ATLC_LC_LP_CTRL0__RADIO_SLP_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000002U) >> 1)
#define ATLC_LC_LP_CTRL0__RADIO_SLP_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 1) & 0x00000002U)
#define ATLC_LC_LP_CTRL0__RADIO_SLP_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | (((uint32_t)(src) <<\
                    1) & 0x00000002U)
#define ATLC_LC_LP_CTRL0__RADIO_SLP_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 1) & ~0x00000002U)))
#define ATLC_LC_LP_CTRL0__RADIO_SLP_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(1) << 1)
#define ATLC_LC_LP_CTRL0__RADIO_SLP_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(0) << 1)
#define ATLC_LC_LP_CTRL0__RADIO_SLP_EN__RESET_VALUE                 0x00000000U
/** @} */

/* macros for field extwu_dis */
/**
 * @defgroup at_lc_regs_core_extwu_dis_field extwu_dis_field
 * @brief macros for field extwu_dis
 * @details external wakeup disable
 * @{
 */
#define ATLC_LC_LP_CTRL0__EXTWU_DIS__SHIFT                                    3
#define ATLC_LC_LP_CTRL0__EXTWU_DIS__WIDTH                                    1
#define ATLC_LC_LP_CTRL0__EXTWU_DIS__MASK                           0x00000008U
#define ATLC_LC_LP_CTRL0__EXTWU_DIS__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000008U) >> 3)
#define ATLC_LC_LP_CTRL0__EXTWU_DIS__WRITE(src) \
                    (((uint32_t)(src)\
                    << 3) & 0x00000008U)
#define ATLC_LC_LP_CTRL0__EXTWU_DIS__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | (((uint32_t)(src) <<\
                    3) & 0x00000008U)
#define ATLC_LC_LP_CTRL0__EXTWU_DIS__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 3) & ~0x00000008U)))
#define ATLC_LC_LP_CTRL0__EXTWU_DIS__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | ((uint32_t)(1) << 3)
#define ATLC_LC_LP_CTRL0__EXTWU_DIS__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | ((uint32_t)(0) << 3)
#define ATLC_LC_LP_CTRL0__EXTWU_DIS__RESET_VALUE                    0x00000000U
/** @} */

/* macros for field sw_wu_req */
/**
 * @defgroup at_lc_regs_core_sw_wu_req_field sw_wu_req_field
 * @brief macros for field sw_wu_req
 * @details software wakeup request
 * @{
 */
#define ATLC_LC_LP_CTRL0__SW_WU_REQ__SHIFT                                    4
#define ATLC_LC_LP_CTRL0__SW_WU_REQ__WIDTH                                    1
#define ATLC_LC_LP_CTRL0__SW_WU_REQ__MASK                           0x00000010U
#define ATLC_LC_LP_CTRL0__SW_WU_REQ__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000010U) >> 4)
#define ATLC_LC_LP_CTRL0__SW_WU_REQ__WRITE(src) \
                    (((uint32_t)(src)\
                    << 4) & 0x00000010U)
#define ATLC_LC_LP_CTRL0__SW_WU_REQ__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | (((uint32_t)(src) <<\
                    4) & 0x00000010U)
#define ATLC_LC_LP_CTRL0__SW_WU_REQ__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 4) & ~0x00000010U)))
#define ATLC_LC_LP_CTRL0__SW_WU_REQ__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | ((uint32_t)(1) << 4)
#define ATLC_LC_LP_CTRL0__SW_WU_REQ__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | ((uint32_t)(0) << 4)
#define ATLC_LC_LP_CTRL0__SW_WU_REQ__RESET_VALUE                    0x00000000U
/** @} */

/* macros for field pseq_wakeup_en */
/**
 * @defgroup at_lc_regs_core_pseq_wakeup_en_field pseq_wakeup_en_field
 * @brief macros for field pseq_wakeup_en
 * @details enable wakeup request to PSEQ.
 * @{
 */
#define ATLC_LC_LP_CTRL0__PSEQ_WAKEUP_EN__SHIFT                               5
#define ATLC_LC_LP_CTRL0__PSEQ_WAKEUP_EN__WIDTH                               1
#define ATLC_LC_LP_CTRL0__PSEQ_WAKEUP_EN__MASK                      0x00000020U
#define ATLC_LC_LP_CTRL0__PSEQ_WAKEUP_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000020U) >> 5)
#define ATLC_LC_LP_CTRL0__PSEQ_WAKEUP_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 5) & 0x00000020U)
#define ATLC_LC_LP_CTRL0__PSEQ_WAKEUP_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | (((uint32_t)(src) <<\
                    5) & 0x00000020U)
#define ATLC_LC_LP_CTRL0__PSEQ_WAKEUP_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 5) & ~0x00000020U)))
#define ATLC_LC_LP_CTRL0__PSEQ_WAKEUP_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | ((uint32_t)(1) << 5)
#define ATLC_LC_LP_CTRL0__PSEQ_WAKEUP_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | ((uint32_t)(0) << 5)
#define ATLC_LC_LP_CTRL0__PSEQ_WAKEUP_EN__RESET_VALUE               0x00000000U
/** @} */

/* macros for field fr_us_hw_corr_en */
/**
 * @defgroup at_lc_regs_core_fr_us_hw_corr_en_field fr_us_hw_corr_en_field
 * @brief macros for field fr_us_hw_corr_en
 * @details 1=> allow HW to correct fr_us_cntr upon waking up from SLEEP. 0=> only SW corrects fr_us_cntr.
 * @{
 */
#define ATLC_LC_LP_CTRL0__FR_US_HW_CORR_EN__SHIFT                             6
#define ATLC_LC_LP_CTRL0__FR_US_HW_CORR_EN__WIDTH                             1
#define ATLC_LC_LP_CTRL0__FR_US_HW_CORR_EN__MASK                    0x00000040U
#define ATLC_LC_LP_CTRL0__FR_US_HW_CORR_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000040U) >> 6)
#define ATLC_LC_LP_CTRL0__FR_US_HW_CORR_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 6) & 0x00000040U)
#define ATLC_LC_LP_CTRL0__FR_US_HW_CORR_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | (((uint32_t)(src) <<\
                    6) & 0x00000040U)
#define ATLC_LC_LP_CTRL0__FR_US_HW_CORR_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 6) & ~0x00000040U)))
#define ATLC_LC_LP_CTRL0__FR_US_HW_CORR_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | ((uint32_t)(1) << 6)
#define ATLC_LC_LP_CTRL0__FR_US_HW_CORR_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | ((uint32_t)(0) << 6)
#define ATLC_LC_LP_CTRL0__FR_US_HW_CORR_EN__RESET_VALUE             0x00000000U
/** @} */

/* macros for field load_slp_cntr */
/**
 * @defgroup at_lc_regs_core_load_slp_cntr_field load_slp_cntr_field
 * @brief macros for field load_slp_cntr
 * @details 1=> load slp_cntr with slp_cntr_val 0=> slp_cntr run freely
 * @{
 */
#define ATLC_LC_LP_CTRL0__LOAD_SLP_CNTR__SHIFT                                7
#define ATLC_LC_LP_CTRL0__LOAD_SLP_CNTR__WIDTH                                1
#define ATLC_LC_LP_CTRL0__LOAD_SLP_CNTR__MASK                       0x00000080U
#define ATLC_LC_LP_CTRL0__LOAD_SLP_CNTR__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000080U) >> 7)
#define ATLC_LC_LP_CTRL0__LOAD_SLP_CNTR__WRITE(src) \
                    (((uint32_t)(src)\
                    << 7) & 0x00000080U)
#define ATLC_LC_LP_CTRL0__LOAD_SLP_CNTR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | (((uint32_t)(src) <<\
                    7) & 0x00000080U)
#define ATLC_LC_LP_CTRL0__LOAD_SLP_CNTR__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 7) & ~0x00000080U)))
#define ATLC_LC_LP_CTRL0__LOAD_SLP_CNTR__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(1) << 7)
#define ATLC_LC_LP_CTRL0__LOAD_SLP_CNTR__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(0) << 7)
#define ATLC_LC_LP_CTRL0__LOAD_SLP_CNTR__RESET_VALUE                0x00000000U
/** @} */
#define ATLC_LC_LP_CTRL0__TYPE                                         uint32_t
#define ATLC_LC_LP_CTRL0__READ                                      0x000000fbU
#define ATLC_LC_LP_CTRL0__WRITE                                     0x000000fbU
#define ATLC_LC_LP_CTRL0__PRESERVED                                 0x00000000U
#define ATLC_LC_LP_CTRL0__RESET_VALUE                               0x00000000U

#endif /* __ATLC_LC_LP_CTRL0_MACRO__ */

/** @} end of lc_lp_ctrl0 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_lp_ctrl1 */
/**
 * @defgroup at_lc_regs_core_lc_lp_ctrl1 lc_lp_ctrl1
 * @brief Contains register fields associated with lc_lp_ctrl1. definitions.
 * @{
 */
#ifndef __ATLC_LC_LP_CTRL1_MACRO__
#define __ATLC_LC_LP_CTRL1_MACRO__

/* macros for field wrm */
/**
 * @defgroup at_lc_regs_core_wrm_field wrm_field
 * @brief macros for field wrm
 * @details radio settling time in low power clock cycles.
 * @{
 */
#define ATLC_LC_LP_CTRL1__WRM__SHIFT                                          0
#define ATLC_LC_LP_CTRL1__WRM__WIDTH                                         10
#define ATLC_LC_LP_CTRL1__WRM__MASK                                 0x000003ffU
#define ATLC_LC_LP_CTRL1__WRM__READ(src)        ((uint32_t)(src) & 0x000003ffU)
#define ATLC_LC_LP_CTRL1__WRM__WRITE(src)       ((uint32_t)(src) & 0x000003ffU)
#define ATLC_LC_LP_CTRL1__WRM__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000003ffU) | ((uint32_t)(src) &\
                    0x000003ffU)
#define ATLC_LC_LP_CTRL1__WRM__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000003ffU)))
#define ATLC_LC_LP_CTRL1__WRM__RESET_VALUE                          0x00000050U
/** @} */

/* macros for field wosc */
/**
 * @defgroup at_lc_regs_core_wosc_field wosc_field
 * @brief macros for field wosc
 * @details PLL settling time following sleep timer expiration in low power clock cycles.
 * @{
 */
#define ATLC_LC_LP_CTRL1__WOSC__SHIFT                                        10
#define ATLC_LC_LP_CTRL1__WOSC__WIDTH                                        11
#define ATLC_LC_LP_CTRL1__WOSC__MASK                                0x001ffc00U
#define ATLC_LC_LP_CTRL1__WOSC__READ(src) \
                    (((uint32_t)(src)\
                    & 0x001ffc00U) >> 10)
#define ATLC_LC_LP_CTRL1__WOSC__WRITE(src) \
                    (((uint32_t)(src)\
                    << 10) & 0x001ffc00U)
#define ATLC_LC_LP_CTRL1__WOSC__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x001ffc00U) | (((uint32_t)(src) <<\
                    10) & 0x001ffc00U)
#define ATLC_LC_LP_CTRL1__WOSC__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 10) & ~0x001ffc00U)))
#define ATLC_LC_LP_CTRL1__WOSC__RESET_VALUE                         0x00000064U
/** @} */

/* macros for field wext */
/**
 * @defgroup at_lc_regs_core_wext_field wext_field
 * @brief macros for field wext
 * @details PLL settling time following external wakeup request in low power clock cycles.
 * @{
 */
#define ATLC_LC_LP_CTRL1__WEXT__SHIFT                                        21
#define ATLC_LC_LP_CTRL1__WEXT__WIDTH                                        11
#define ATLC_LC_LP_CTRL1__WEXT__MASK                                0xffe00000U
#define ATLC_LC_LP_CTRL1__WEXT__READ(src) \
                    (((uint32_t)(src)\
                    & 0xffe00000U) >> 21)
#define ATLC_LC_LP_CTRL1__WEXT__WRITE(src) \
                    (((uint32_t)(src)\
                    << 21) & 0xffe00000U)
#define ATLC_LC_LP_CTRL1__WEXT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffe00000U) | (((uint32_t)(src) <<\
                    21) & 0xffe00000U)
#define ATLC_LC_LP_CTRL1__WEXT__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 21) & ~0xffe00000U)))
#define ATLC_LC_LP_CTRL1__WEXT__RESET_VALUE                         0x00000064U
/** @} */
#define ATLC_LC_LP_CTRL1__TYPE                                         uint32_t
#define ATLC_LC_LP_CTRL1__READ                                      0xffffffffU
#define ATLC_LC_LP_CTRL1__WRITE                                     0xffffffffU
#define ATLC_LC_LP_CTRL1__PRESERVED                                 0x00000000U
#define ATLC_LC_LP_CTRL1__RESET_VALUE                               0x0c819050U

#endif /* __ATLC_LC_LP_CTRL1_MACRO__ */

/** @} end of lc_lp_ctrl1 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_lp_ctrl2 */
/**
 * @defgroup at_lc_regs_core_lc_lp_ctrl2 lc_lp_ctrl2
 * @brief Contains register fields associated with lc_lp_ctrl2. definitions.
 * @{
 */
#ifndef __ATLC_LC_LP_CTRL2_MACRO__
#define __ATLC_LC_LP_CTRL2_MACRO__

/* macros for field slp_tm */
/**
 * @defgroup at_lc_regs_core_slp_tm_field slp_tm_field
 * @brief macros for field slp_tm
 * @details deep sleep time
 * @{
 */
#define ATLC_LC_LP_CTRL2__SLP_TM__SHIFT                                       0
#define ATLC_LC_LP_CTRL2__SLP_TM__WIDTH                                      28
#define ATLC_LC_LP_CTRL2__SLP_TM__MASK                              0x0fffffffU
#define ATLC_LC_LP_CTRL2__SLP_TM__READ(src)     ((uint32_t)(src) & 0x0fffffffU)
#define ATLC_LC_LP_CTRL2__SLP_TM__WRITE(src)    ((uint32_t)(src) & 0x0fffffffU)
#define ATLC_LC_LP_CTRL2__SLP_TM__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0fffffffU) | ((uint32_t)(src) &\
                    0x0fffffffU)
#define ATLC_LC_LP_CTRL2__SLP_TM__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x0fffffffU)))
#define ATLC_LC_LP_CTRL2__SLP_TM__RESET_VALUE                       0x00000000U
/** @} */
#define ATLC_LC_LP_CTRL2__TYPE                                         uint32_t
#define ATLC_LC_LP_CTRL2__READ                                      0x0fffffffU
#define ATLC_LC_LP_CTRL2__WRITE                                     0x0fffffffU
#define ATLC_LC_LP_CTRL2__PRESERVED                                 0x00000000U
#define ATLC_LC_LP_CTRL2__RESET_VALUE                               0x00000000U

#endif /* __ATLC_LC_LP_CTRL2_MACRO__ */

/** @} end of lc_lp_ctrl2 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_lp_ctrl3 */
/**
 * @defgroup at_lc_regs_core_lc_lp_ctrl3 lc_lp_ctrl3
 * @brief Contains register fields associated with lc_lp_ctrl3. definitions.
 * @{
 */
#ifndef __ATLC_LC_LP_CTRL3_MACRO__
#define __ATLC_LC_LP_CTRL3_MACRO__

/* macros for field slp */
/**
 * @defgroup at_lc_regs_core_slp_field slp_field
 * @brief macros for field slp
 * @details go into sleep state
 * @{
 */
#define ATLC_LC_LP_CTRL3__SLP__SHIFT                                          0
#define ATLC_LC_LP_CTRL3__SLP__WIDTH                                          1
#define ATLC_LC_LP_CTRL3__SLP__MASK                                 0x00000001U
#define ATLC_LC_LP_CTRL3__SLP__READ(src)        ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_LP_CTRL3__SLP__WRITE(src)       ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_LP_CTRL3__SLP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_LC_LP_CTRL3__SLP__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_LC_LP_CTRL3__SLP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_LP_CTRL3__SLP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_LP_CTRL3__SLP__RESET_VALUE                          0x00000000U
/** @} */
#define ATLC_LC_LP_CTRL3__TYPE                                         uint32_t
#define ATLC_LC_LP_CTRL3__READ                                      0x00000001U
#define ATLC_LC_LP_CTRL3__WRITE                                     0x00000001U
#define ATLC_LC_LP_CTRL3__PRESERVED                                 0x00000000U
#define ATLC_LC_LP_CTRL3__RESET_VALUE                               0x00000000U

#endif /* __ATLC_LC_LP_CTRL3_MACRO__ */

/** @} end of lc_lp_ctrl3 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_lp_ctrl4 */
/**
 * @defgroup at_lc_regs_core_lc_lp_ctrl4 lc_lp_ctrl4
 * @brief Contains register fields associated with lc_lp_ctrl4. definitions.
 * @{
 */
#ifndef __ATLC_LC_LP_CTRL4_MACRO__
#define __ATLC_LC_LP_CTRL4_MACRO__

/* macros for field wpseq */
/**
 * @defgroup at_lc_regs_core_wpseq_field wpseq_field
 * @brief macros for field wpseq
 * @details pseq wakeup settling time in low pwer clock cycles.
 * @{
 */
#define ATLC_LC_LP_CTRL4__WPSEQ__SHIFT                                       10
#define ATLC_LC_LP_CTRL4__WPSEQ__WIDTH                                       11
#define ATLC_LC_LP_CTRL4__WPSEQ__MASK                               0x001ffc00U
#define ATLC_LC_LP_CTRL4__WPSEQ__READ(src) \
                    (((uint32_t)(src)\
                    & 0x001ffc00U) >> 10)
#define ATLC_LC_LP_CTRL4__WPSEQ__WRITE(src) \
                    (((uint32_t)(src)\
                    << 10) & 0x001ffc00U)
#define ATLC_LC_LP_CTRL4__WPSEQ__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x001ffc00U) | (((uint32_t)(src) <<\
                    10) & 0x001ffc00U)
#define ATLC_LC_LP_CTRL4__WPSEQ__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 10) & ~0x001ffc00U)))
#define ATLC_LC_LP_CTRL4__WPSEQ__RESET_VALUE                        0x00000064U
/** @} */
#define ATLC_LC_LP_CTRL4__TYPE                                         uint32_t
#define ATLC_LC_LP_CTRL4__READ                                      0x001ffc00U
#define ATLC_LC_LP_CTRL4__WRITE                                     0x001ffc00U
#define ATLC_LC_LP_CTRL4__PRESERVED                                 0x00000000U
#define ATLC_LC_LP_CTRL4__RESET_VALUE                               0x00019000U

#endif /* __ATLC_LC_LP_CTRL4_MACRO__ */

/** @} end of lc_lp_ctrl4 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_lp_ctrl5 */
/**
 * @defgroup at_lc_regs_core_lc_lp_ctrl5 lc_lp_ctrl5
 * @brief Contains register fields associated with lc_lp_ctrl5. definitions.
 * @{
 */
#ifndef __ATLC_LC_LP_CTRL5_MACRO__
#define __ATLC_LC_LP_CTRL5_MACRO__

/* macros for field slp_cntr_val */
/**
 * @defgroup at_lc_regs_core_slp_cntr_val_field slp_cntr_val_field
 * @brief macros for field slp_cntr_val
 * @details value to be loaded to slp_cntr
 * @{
 */
#define ATLC_LC_LP_CTRL5__SLP_CNTR_VAL__SHIFT                                 0
#define ATLC_LC_LP_CTRL5__SLP_CNTR_VAL__WIDTH                                28
#define ATLC_LC_LP_CTRL5__SLP_CNTR_VAL__MASK                        0x0fffffffU
#define ATLC_LC_LP_CTRL5__SLP_CNTR_VAL__READ(src) \
                    ((uint32_t)(src)\
                    & 0x0fffffffU)
#define ATLC_LC_LP_CTRL5__SLP_CNTR_VAL__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x0fffffffU)
#define ATLC_LC_LP_CTRL5__SLP_CNTR_VAL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0fffffffU) | ((uint32_t)(src) &\
                    0x0fffffffU)
#define ATLC_LC_LP_CTRL5__SLP_CNTR_VAL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x0fffffffU)))
#define ATLC_LC_LP_CTRL5__SLP_CNTR_VAL__RESET_VALUE                 0x00000000U
/** @} */
#define ATLC_LC_LP_CTRL5__TYPE                                         uint32_t
#define ATLC_LC_LP_CTRL5__READ                                      0x0fffffffU
#define ATLC_LC_LP_CTRL5__WRITE                                     0x0fffffffU
#define ATLC_LC_LP_CTRL5__PRESERVED                                 0x00000000U
#define ATLC_LC_LP_CTRL5__RESET_VALUE                               0x00000000U

#endif /* __ATLC_LC_LP_CTRL5_MACRO__ */

/** @} end of lc_lp_ctrl5 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_lp_st0 */
/**
 * @defgroup at_lc_regs_core_lc_lp_st0 lc_lp_st0
 * @brief Contains register fields associated with lc_lp_st0. definitions.
 * @{
 */
#ifndef __ATLC_LC_LP_ST0_MACRO__
#define __ATLC_LC_LP_ST0_MACRO__

/* macros for field slp_cntr */
/**
 * @defgroup at_lc_regs_core_slp_cntr_field slp_cntr_field
 * @brief macros for field slp_cntr
 * @details deep sleep counter. In hclk domain.
 * @{
 */
#define ATLC_LC_LP_ST0__SLP_CNTR__SHIFT                                       0
#define ATLC_LC_LP_ST0__SLP_CNTR__WIDTH                                      28
#define ATLC_LC_LP_ST0__SLP_CNTR__MASK                              0x0fffffffU
#define ATLC_LC_LP_ST0__SLP_CNTR__READ(src)     ((uint32_t)(src) & 0x0fffffffU)
#define ATLC_LC_LP_ST0__SLP_CNTR__RESET_VALUE                       0x00000000U
/** @} */
#define ATLC_LC_LP_ST0__TYPE                                           uint32_t
#define ATLC_LC_LP_ST0__READ                                        0x0fffffffU
#define ATLC_LC_LP_ST0__PRESERVED                                   0x00000000U
#define ATLC_LC_LP_ST0__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_LC_LP_ST0_MACRO__ */

/** @} end of lc_lp_st0 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_lp_st1 */
/**
 * @defgroup at_lc_regs_core_lc_lp_st1 lc_lp_st1
 * @brief Contains register fields associated with lc_lp_st1. definitions.
 * @{
 */
#ifndef __ATLC_LC_LP_ST1_MACRO__
#define __ATLC_LC_LP_ST1_MACRO__

/* macros for field lp_slp_cntr_in_1us_int */
/**
 * @defgroup at_lc_regs_core_lp_slp_cntr_in_1us_int_field lp_slp_cntr_in_1us_int_field
 * @brief macros for field lp_slp_cntr_in_1us_int
 * @details The integer part of the sleep duration in 1us basis. In low power clock domain.
 * @{
 */
#define ATLC_LC_LP_ST1__LP_SLP_CNTR_IN_1US_INT__SHIFT                         0
#define ATLC_LC_LP_ST1__LP_SLP_CNTR_IN_1US_INT__WIDTH                        32
#define ATLC_LC_LP_ST1__LP_SLP_CNTR_IN_1US_INT__MASK                0xffffffffU
#define ATLC_LC_LP_ST1__LP_SLP_CNTR_IN_1US_INT__READ(src) \
                    ((uint32_t)(src)\
                    & 0xffffffffU)
#define ATLC_LC_LP_ST1__LP_SLP_CNTR_IN_1US_INT__RESET_VALUE         0x00000000U
/** @} */
#define ATLC_LC_LP_ST1__TYPE                                           uint32_t
#define ATLC_LC_LP_ST1__READ                                        0xffffffffU
#define ATLC_LC_LP_ST1__PRESERVED                                   0x00000000U
#define ATLC_LC_LP_ST1__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_LC_LP_ST1_MACRO__ */

/** @} end of lc_lp_st1 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_lp_st2 */
/**
 * @defgroup at_lc_regs_core_lc_lp_st2 lc_lp_st2
 * @brief Contains register fields associated with lc_lp_st2. definitions.
 * @{
 */
#ifndef __ATLC_LC_LP_ST2_MACRO__
#define __ATLC_LC_LP_ST2_MACRO__

/* macros for field lp_slp_cntr_in_1us_frac */
/**
 * @defgroup at_lc_regs_core_lp_slp_cntr_in_1us_frac_field lp_slp_cntr_in_1us_frac_field
 * @brief macros for field lp_slp_cntr_in_1us_frac
 * @details The frac part of the sleep duration in 1us basis. In low power clock domain. (not used to update the fr_us_cntr by HW)
 * @{
 */
#define ATLC_LC_LP_ST2__LP_SLP_CNTR_IN_1US_FRAC__SHIFT                        0
#define ATLC_LC_LP_ST2__LP_SLP_CNTR_IN_1US_FRAC__WIDTH                       23
#define ATLC_LC_LP_ST2__LP_SLP_CNTR_IN_1US_FRAC__MASK               0x007fffffU
#define ATLC_LC_LP_ST2__LP_SLP_CNTR_IN_1US_FRAC__READ(src) \
                    ((uint32_t)(src)\
                    & 0x007fffffU)
#define ATLC_LC_LP_ST2__LP_SLP_CNTR_IN_1US_FRAC__RESET_VALUE        0x00000000U
/** @} */
#define ATLC_LC_LP_ST2__TYPE                                           uint32_t
#define ATLC_LC_LP_ST2__READ                                        0x007fffffU
#define ATLC_LC_LP_ST2__PRESERVED                                   0x00000000U
#define ATLC_LC_LP_ST2__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_LC_LP_ST2_MACRO__ */

/** @} end of lc_lp_st2 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_lp_st3 */
/**
 * @defgroup at_lc_regs_core_lc_lp_st3 lc_lp_st3
 * @brief Contains register fields associated with lc_lp_st3. definitions.
 * @{
 */
#ifndef __ATLC_LC_LP_ST3_MACRO__
#define __ATLC_LC_LP_ST3_MACRO__

/* macros for field lp_slp_cntr_in_1us_overflow */
/**
 * @defgroup at_lc_regs_core_lp_slp_cntr_in_1us_overflow_field lp_slp_cntr_in_1us_overflow_field
 * @brief macros for field lp_slp_cntr_in_1us_overflow
 * @details overflow status of lp_slp_cntr_in_1us.
 * @{
 */
#define ATLC_LC_LP_ST3__LP_SLP_CNTR_IN_1US_OVERFLOW__SHIFT                    0
#define ATLC_LC_LP_ST3__LP_SLP_CNTR_IN_1US_OVERFLOW__WIDTH                    1
#define ATLC_LC_LP_ST3__LP_SLP_CNTR_IN_1US_OVERFLOW__MASK           0x00000001U
#define ATLC_LC_LP_ST3__LP_SLP_CNTR_IN_1US_OVERFLOW__READ(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_LC_LP_ST3__LP_SLP_CNTR_IN_1US_OVERFLOW__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_LP_ST3__LP_SLP_CNTR_IN_1US_OVERFLOW__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_LP_ST3__LP_SLP_CNTR_IN_1US_OVERFLOW__RESET_VALUE    0x00000000U
/** @} */
#define ATLC_LC_LP_ST3__TYPE                                           uint32_t
#define ATLC_LC_LP_ST3__READ                                        0x00000001U
#define ATLC_LC_LP_ST3__PRESERVED                                   0x00000000U
#define ATLC_LC_LP_ST3__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_LC_LP_ST3_MACRO__ */

/** @} end of lc_lp_st3 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_lp_st4 */
/**
 * @defgroup at_lc_regs_core_lc_lp_st4 lc_lp_st4
 * @brief Contains register fields associated with lc_lp_st4. definitions.
 * @{
 */
#ifndef __ATLC_LC_LP_ST4_MACRO__
#define __ATLC_LC_LP_ST4_MACRO__

/* macros for field wu_cntr */
/**
 * @defgroup at_lc_regs_core_wu_cntr_field wu_cntr_field
 * @brief macros for field wu_cntr
 * @details external wakeup counter in hclk domain.
 * @{
 */
#define ATLC_LC_LP_ST4__WU_CNTR__SHIFT                                        0
#define ATLC_LC_LP_ST4__WU_CNTR__WIDTH                                       11
#define ATLC_LC_LP_ST4__WU_CNTR__MASK                               0x000007ffU
#define ATLC_LC_LP_ST4__WU_CNTR__READ(src)      ((uint32_t)(src) & 0x000007ffU)
#define ATLC_LC_LP_ST4__WU_CNTR__RESET_VALUE                        0x00000000U
/** @} */
#define ATLC_LC_LP_ST4__TYPE                                           uint32_t
#define ATLC_LC_LP_ST4__READ                                        0x000007ffU
#define ATLC_LC_LP_ST4__PRESERVED                                   0x00000000U
#define ATLC_LC_LP_ST4__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_LC_LP_ST4_MACRO__ */

/** @} end of lc_lp_st4 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_lp_st5 */
/**
 * @defgroup at_lc_regs_core_lc_lp_st5 lc_lp_st5
 * @brief Contains register fields associated with lc_lp_st5. definitions.
 * @{
 */
#ifndef __ATLC_LC_LP_ST5_MACRO__
#define __ATLC_LC_LP_ST5_MACRO__

/* macros for field slp_state */
/**
 * @defgroup at_lc_regs_core_slp_state_field slp_state_field
 * @brief macros for field slp_state
 * @details FSM state of at_lc_lp in hclk domain.
 * @{
 */
#define ATLC_LC_LP_ST5__SLP_STATE__SHIFT                                      0
#define ATLC_LC_LP_ST5__SLP_STATE__WIDTH                                      2
#define ATLC_LC_LP_ST5__SLP_STATE__MASK                             0x00000003U
#define ATLC_LC_LP_ST5__SLP_STATE__READ(src)    ((uint32_t)(src) & 0x00000003U)
#define ATLC_LC_LP_ST5__SLP_STATE__RESET_VALUE                      0x00000000U
/** @} */

/* macros for field hw_wu_req */
/**
 * @defgroup at_lc_regs_core_hw_wu_req_field hw_wu_req_field
 * @brief macros for field hw_wu_req
 * @details synchronized version of hardware wakeup request.
 * @{
 */
#define ATLC_LC_LP_ST5__HW_WU_REQ__SHIFT                                      2
#define ATLC_LC_LP_ST5__HW_WU_REQ__WIDTH                                      1
#define ATLC_LC_LP_ST5__HW_WU_REQ__MASK                             0x00000004U
#define ATLC_LC_LP_ST5__HW_WU_REQ__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000004U) >> 2)
#define ATLC_LC_LP_ST5__HW_WU_REQ__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(1) << 2)
#define ATLC_LC_LP_ST5__HW_WU_REQ__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(0) << 2)
#define ATLC_LC_LP_ST5__HW_WU_REQ__RESET_VALUE                      0x00000000U
/** @} */

/* macros for field pseq_wakeup */
/**
 * @defgroup at_lc_regs_core_pseq_wakeup_field pseq_wakeup_field
 * @brief macros for field pseq_wakeup
 * @details synchronized version of pseq wakeup control signal.
 * @{
 */
#define ATLC_LC_LP_ST5__PSEQ_WAKEUP__SHIFT                                    3
#define ATLC_LC_LP_ST5__PSEQ_WAKEUP__WIDTH                                    1
#define ATLC_LC_LP_ST5__PSEQ_WAKEUP__MASK                           0x00000008U
#define ATLC_LC_LP_ST5__PSEQ_WAKEUP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000008U) >> 3)
#define ATLC_LC_LP_ST5__PSEQ_WAKEUP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | ((uint32_t)(1) << 3)
#define ATLC_LC_LP_ST5__PSEQ_WAKEUP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | ((uint32_t)(0) << 3)
#define ATLC_LC_LP_ST5__PSEQ_WAKEUP__RESET_VALUE                    0x00000000U
/** @} */

/* macros for field radio_en */
/**
 * @defgroup at_lc_regs_core_radio_en_field radio_en_field
 * @brief macros for field radio_en
 * @details synchronized version of radio enable control signal.
 * @{
 */
#define ATLC_LC_LP_ST5__RADIO_EN__SHIFT                                       4
#define ATLC_LC_LP_ST5__RADIO_EN__WIDTH                                       1
#define ATLC_LC_LP_ST5__RADIO_EN__MASK                              0x00000010U
#define ATLC_LC_LP_ST5__RADIO_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000010U) >> 4)
#define ATLC_LC_LP_ST5__RADIO_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | ((uint32_t)(1) << 4)
#define ATLC_LC_LP_ST5__RADIO_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | ((uint32_t)(0) << 4)
#define ATLC_LC_LP_ST5__RADIO_EN__RESET_VALUE                       0x00000000U
/** @} */

/* macros for field osc_en */
/**
 * @defgroup at_lc_regs_core_osc_en_field osc_en_field
 * @brief macros for field osc_en
 * @details synchronized version of oscillator enable control signal.
 * @{
 */
#define ATLC_LC_LP_ST5__OSC_EN__SHIFT                                         5
#define ATLC_LC_LP_ST5__OSC_EN__WIDTH                                         1
#define ATLC_LC_LP_ST5__OSC_EN__MASK                                0x00000020U
#define ATLC_LC_LP_ST5__OSC_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000020U) >> 5)
#define ATLC_LC_LP_ST5__OSC_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | ((uint32_t)(1) << 5)
#define ATLC_LC_LP_ST5__OSC_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | ((uint32_t)(0) << 5)
#define ATLC_LC_LP_ST5__OSC_EN__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_LC_LP_ST5__TYPE                                           uint32_t
#define ATLC_LC_LP_ST5__READ                                        0x0000003fU
#define ATLC_LC_LP_ST5__PRESERVED                                   0x00000000U
#define ATLC_LC_LP_ST5__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_LC_LP_ST5_MACRO__ */

/** @} end of lc_lp_st5 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_rft_ctrl0 */
/**
 * @defgroup at_lc_regs_core_lc_rft_ctrl0 lc_rft_ctrl0
 * @brief Contains register fields associated with lc_rft_ctrl0. definitions.
 * @{
 */
#ifndef __ATLC_LC_RFT_CTRL0_MACRO__
#define __ATLC_LC_RFT_CTRL0_MACRO__

/* macros for field pyld_typ */
/**
 * @defgroup at_lc_regs_core_pyld_typ_field pyld_typ_field
 * @brief macros for field pyld_typ
 * @details payload type 0x0 use payload in tx buffer (payload type should be to to 0 for normal operation) should not be used with tx_infnt which only works for prbs or forced payload 0x1 replace payload with prbs9 0x2 replace payload with prbs15 0x3 replace payload with forced payload
 * @{
 */
#define ATLC_LC_RFT_CTRL0__PYLD_TYP__SHIFT                                    0
#define ATLC_LC_RFT_CTRL0__PYLD_TYP__WIDTH                                    2
#define ATLC_LC_RFT_CTRL0__PYLD_TYP__MASK                           0x00000003U
#define ATLC_LC_RFT_CTRL0__PYLD_TYP__READ(src)  ((uint32_t)(src) & 0x00000003U)
#define ATLC_LC_RFT_CTRL0__PYLD_TYP__WRITE(src) ((uint32_t)(src) & 0x00000003U)
#define ATLC_LC_RFT_CTRL0__PYLD_TYP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000003U) | ((uint32_t)(src) &\
                    0x00000003U)
#define ATLC_LC_RFT_CTRL0__PYLD_TYP__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000003U)))
#define ATLC_LC_RFT_CTRL0__PYLD_TYP__RESET_VALUE                    0x00000000U
/** @} */

/* macros for field rx_infnt */
/**
 * @defgroup at_lc_regs_core_rx_infnt_field rx_infnt_field
 * @brief macros for field rx_infnt
 * @details infinite rx window
 * @{
 */
#define ATLC_LC_RFT_CTRL0__RX_INFNT__SHIFT                                    2
#define ATLC_LC_RFT_CTRL0__RX_INFNT__WIDTH                                    1
#define ATLC_LC_RFT_CTRL0__RX_INFNT__MASK                           0x00000004U
#define ATLC_LC_RFT_CTRL0__RX_INFNT__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000004U) >> 2)
#define ATLC_LC_RFT_CTRL0__RX_INFNT__WRITE(src) \
                    (((uint32_t)(src)\
                    << 2) & 0x00000004U)
#define ATLC_LC_RFT_CTRL0__RX_INFNT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | (((uint32_t)(src) <<\
                    2) & 0x00000004U)
#define ATLC_LC_RFT_CTRL0__RX_INFNT__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 2) & ~0x00000004U)))
#define ATLC_LC_RFT_CTRL0__RX_INFNT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(1) << 2)
#define ATLC_LC_RFT_CTRL0__RX_INFNT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(0) << 2)
#define ATLC_LC_RFT_CTRL0__RX_INFNT__RESET_VALUE                    0x00000000U
/** @} */

/* macros for field tx_infnt */
/**
 * @defgroup at_lc_regs_core_tx_infnt_field tx_infnt_field
 * @brief macros for field tx_infnt
 * @details infinite length payload instead of payload length specified in the header
 * @{
 */
#define ATLC_LC_RFT_CTRL0__TX_INFNT__SHIFT                                    3
#define ATLC_LC_RFT_CTRL0__TX_INFNT__WIDTH                                    1
#define ATLC_LC_RFT_CTRL0__TX_INFNT__MASK                           0x00000008U
#define ATLC_LC_RFT_CTRL0__TX_INFNT__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000008U) >> 3)
#define ATLC_LC_RFT_CTRL0__TX_INFNT__WRITE(src) \
                    (((uint32_t)(src)\
                    << 3) & 0x00000008U)
#define ATLC_LC_RFT_CTRL0__TX_INFNT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | (((uint32_t)(src) <<\
                    3) & 0x00000008U)
#define ATLC_LC_RFT_CTRL0__TX_INFNT__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 3) & ~0x00000008U)))
#define ATLC_LC_RFT_CTRL0__TX_INFNT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | ((uint32_t)(1) << 3)
#define ATLC_LC_RFT_CTRL0__TX_INFNT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | ((uint32_t)(0) << 3)
#define ATLC_LC_RFT_CTRL0__TX_INFNT__RESET_VALUE                    0x00000000U
/** @} */

/* macros for field hdr_typ */
/**
 * @defgroup at_lc_regs_core_hdr_typ_field hdr_typ_field
 * @brief macros for field hdr_typ
 * @details payload type 0x0 use header in tx buffer (header type should be set to 0 for nomal operation) should not be used with tx_infnt which only works for forced header 0x1 replace header with forced payload
 * @{
 */
#define ATLC_LC_RFT_CTRL0__HDR_TYP__SHIFT                                     4
#define ATLC_LC_RFT_CTRL0__HDR_TYP__WIDTH                                     2
#define ATLC_LC_RFT_CTRL0__HDR_TYP__MASK                            0x00000030U
#define ATLC_LC_RFT_CTRL0__HDR_TYP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000030U) >> 4)
#define ATLC_LC_RFT_CTRL0__HDR_TYP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 4) & 0x00000030U)
#define ATLC_LC_RFT_CTRL0__HDR_TYP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000030U) | (((uint32_t)(src) <<\
                    4) & 0x00000030U)
#define ATLC_LC_RFT_CTRL0__HDR_TYP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 4) & ~0x00000030U)))
#define ATLC_LC_RFT_CTRL0__HDR_TYP__RESET_VALUE                     0x00000000U
/** @} */

/* macros for field pyld */
/**
 * @defgroup at_lc_regs_core_pyld_field pyld_field
 * @brief macros for field pyld
 * @details forced pyload bytes
 * @{
 */
#define ATLC_LC_RFT_CTRL0__PYLD__SHIFT                                        8
#define ATLC_LC_RFT_CTRL0__PYLD__WIDTH                                        8
#define ATLC_LC_RFT_CTRL0__PYLD__MASK                               0x0000ff00U
#define ATLC_LC_RFT_CTRL0__PYLD__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_LC_RFT_CTRL0__PYLD__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_LC_RFT_CTRL0__PYLD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_LC_RFT_CTRL0__PYLD__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_LC_RFT_CTRL0__PYLD__RESET_VALUE                        0x00000000U
/** @} */
#define ATLC_LC_RFT_CTRL0__TYPE                                        uint32_t
#define ATLC_LC_RFT_CTRL0__READ                                     0x0000ff3fU
#define ATLC_LC_RFT_CTRL0__WRITE                                    0x0000ff3fU
#define ATLC_LC_RFT_CTRL0__PRESERVED                                0x00000000U
#define ATLC_LC_RFT_CTRL0__RESET_VALUE                              0x00000000U

#endif /* __ATLC_LC_RFT_CTRL0_MACRO__ */

/** @} end of lc_rft_ctrl0 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_rft_ctrl1 */
/**
 * @defgroup at_lc_regs_core_lc_rft_ctrl1 lc_rft_ctrl1
 * @brief Contains register fields associated with lc_rft_ctrl1. definitions.
 * @{
 */
#ifndef __ATLC_LC_RFT_CTRL1_MACRO__
#define __ATLC_LC_RFT_CTRL1_MACRO__

/* macros for field hdr */
/**
 * @defgroup at_lc_regs_core_hdr_field hdr_field
 * @brief macros for field hdr
 * @details forced hdr bytes
 * @{
 */
#define ATLC_LC_RFT_CTRL1__HDR__SHIFT                                         0
#define ATLC_LC_RFT_CTRL1__HDR__WIDTH                                        32
#define ATLC_LC_RFT_CTRL1__HDR__MASK                                0xffffffffU
#define ATLC_LC_RFT_CTRL1__HDR__READ(src)       ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_RFT_CTRL1__HDR__WRITE(src)      ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_RFT_CTRL1__HDR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_LC_RFT_CTRL1__HDR__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_LC_RFT_CTRL1__HDR__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_LC_RFT_CTRL1__TYPE                                        uint32_t
#define ATLC_LC_RFT_CTRL1__READ                                     0xffffffffU
#define ATLC_LC_RFT_CTRL1__WRITE                                    0xffffffffU
#define ATLC_LC_RFT_CTRL1__PRESERVED                                0x00000000U
#define ATLC_LC_RFT_CTRL1__RESET_VALUE                              0x00000000U

#endif /* __ATLC_LC_RFT_CTRL1_MACRO__ */

/** @} end of lc_rft_ctrl1 */

/* macros for BlueprintGlobalNameSpace::ATLC_ifg */
/**
 * @defgroup at_lc_regs_core_ifg ifg
 * @brief Contains register fields associated with ifg. definitions.
 * @{
 */
#ifndef __ATLC_IFG_MACRO__
#define __ATLC_IFG_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details interframe gap in micro seconds not implemented. used to support auto ack.
 * @{
 */
#define ATLC_IFG__VL__SHIFT                                                   0
#define ATLC_IFG__VL__WIDTH                                                   8
#define ATLC_IFG__VL__MASK                                          0x000000ffU
#define ATLC_IFG__VL__READ(src)                 ((uint32_t)(src) & 0x000000ffU)
#define ATLC_IFG__VL__RESET_VALUE                                   0x00000082U
/** @} */
#define ATLC_IFG__TYPE                                                 uint32_t
#define ATLC_IFG__READ                                              0x000000ffU
#define ATLC_IFG__PRESERVED                                         0x00000000U
#define ATLC_IFG__RESET_VALUE                                       0x00000082U

#endif /* __ATLC_IFG_MACRO__ */

/** @} end of ifg */

/* macros for BlueprintGlobalNameSpace::ATLC_pthdly_1mbps_fmac */
/**
 * @defgroup at_lc_regs_core_pthdly_1mbps_fmac pthdly_1mbps_fmac
 * @brief Contains register fields associated with pthdly_1mbps_fmac. definitions.
 * @{
 */
#ifndef __ATLC_PTHDLY_1MBPS_FMAC_MACRO__
#define __ATLC_PTHDLY_1MBPS_FMAC_MACRO__

/* macros for field rx */
/**
 * @defgroup at_lc_regs_core_rx_field rx_field
 * @brief macros for field rx
 * @details rx path delay in micro seconds
 * @{
 */
#define ATLC_PTHDLY_1MBPS_FMAC__RX__SHIFT                                     0
#define ATLC_PTHDLY_1MBPS_FMAC__RX__WIDTH                                     8
#define ATLC_PTHDLY_1MBPS_FMAC__RX__MASK                            0x000000ffU
#define ATLC_PTHDLY_1MBPS_FMAC__RX__READ(src)   ((uint32_t)(src) & 0x000000ffU)
#define ATLC_PTHDLY_1MBPS_FMAC__RX__WRITE(src)  ((uint32_t)(src) & 0x000000ffU)
#define ATLC_PTHDLY_1MBPS_FMAC__RX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_PTHDLY_1MBPS_FMAC__RX__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_PTHDLY_1MBPS_FMAC__RX__RESET_VALUE                     0x00000004U
/** @} */

/* macros for field tx */
/**
 * @defgroup at_lc_regs_core_tx_field tx_field
 * @brief macros for field tx
 * @details tx path delay in micro seconds
 * @{
 */
#define ATLC_PTHDLY_1MBPS_FMAC__TX__SHIFT                                     8
#define ATLC_PTHDLY_1MBPS_FMAC__TX__WIDTH                                     8
#define ATLC_PTHDLY_1MBPS_FMAC__TX__MASK                            0x0000ff00U
#define ATLC_PTHDLY_1MBPS_FMAC__TX__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_PTHDLY_1MBPS_FMAC__TX__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_PTHDLY_1MBPS_FMAC__TX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_PTHDLY_1MBPS_FMAC__TX__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_PTHDLY_1MBPS_FMAC__TX__RESET_VALUE                     0x00000001U
/** @} */
#define ATLC_PTHDLY_1MBPS_FMAC__TYPE                                   uint32_t
#define ATLC_PTHDLY_1MBPS_FMAC__READ                                0x0000ffffU
#define ATLC_PTHDLY_1MBPS_FMAC__WRITE                               0x0000ffffU
#define ATLC_PTHDLY_1MBPS_FMAC__PRESERVED                           0x00000000U
#define ATLC_PTHDLY_1MBPS_FMAC__RESET_VALUE                         0x00000104U

#endif /* __ATLC_PTHDLY_1MBPS_FMAC_MACRO__ */

/** @} end of pthdly_1mbps_fmac */

/* macros for BlueprintGlobalNameSpace::ATLC_pthdly_2mbps_fmac */
/**
 * @defgroup at_lc_regs_core_pthdly_2mbps_fmac pthdly_2mbps_fmac
 * @brief Contains register fields associated with pthdly_2mbps_fmac. definitions.
 * @{
 */
#ifndef __ATLC_PTHDLY_2MBPS_FMAC_MACRO__
#define __ATLC_PTHDLY_2MBPS_FMAC_MACRO__

/* macros for field rx */
/**
 * @defgroup at_lc_regs_core_rx_field rx_field
 * @brief macros for field rx
 * @details rx path delay in micro seconds
 * @{
 */
#define ATLC_PTHDLY_2MBPS_FMAC__RX__SHIFT                                     0
#define ATLC_PTHDLY_2MBPS_FMAC__RX__WIDTH                                     8
#define ATLC_PTHDLY_2MBPS_FMAC__RX__MASK                            0x000000ffU
#define ATLC_PTHDLY_2MBPS_FMAC__RX__READ(src)   ((uint32_t)(src) & 0x000000ffU)
#define ATLC_PTHDLY_2MBPS_FMAC__RX__WRITE(src)  ((uint32_t)(src) & 0x000000ffU)
#define ATLC_PTHDLY_2MBPS_FMAC__RX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_PTHDLY_2MBPS_FMAC__RX__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_PTHDLY_2MBPS_FMAC__RX__RESET_VALUE                     0x00000002U
/** @} */

/* macros for field tx */
/**
 * @defgroup at_lc_regs_core_tx_field tx_field
 * @brief macros for field tx
 * @details tx path delay in micro seconds
 * @{
 */
#define ATLC_PTHDLY_2MBPS_FMAC__TX__SHIFT                                     8
#define ATLC_PTHDLY_2MBPS_FMAC__TX__WIDTH                                     8
#define ATLC_PTHDLY_2MBPS_FMAC__TX__MASK                            0x0000ff00U
#define ATLC_PTHDLY_2MBPS_FMAC__TX__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_PTHDLY_2MBPS_FMAC__TX__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_PTHDLY_2MBPS_FMAC__TX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_PTHDLY_2MBPS_FMAC__TX__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_PTHDLY_2MBPS_FMAC__TX__RESET_VALUE                     0x00000001U
/** @} */
#define ATLC_PTHDLY_2MBPS_FMAC__TYPE                                   uint32_t
#define ATLC_PTHDLY_2MBPS_FMAC__READ                                0x0000ffffU
#define ATLC_PTHDLY_2MBPS_FMAC__WRITE                               0x0000ffffU
#define ATLC_PTHDLY_2MBPS_FMAC__PRESERVED                           0x00000000U
#define ATLC_PTHDLY_2MBPS_FMAC__RESET_VALUE                         0x00000102U

#endif /* __ATLC_PTHDLY_2MBPS_FMAC_MACRO__ */

/** @} end of pthdly_2mbps_fmac */

/* macros for BlueprintGlobalNameSpace::ATLC_pthdly_250kbps_fmac */
/**
 * @defgroup at_lc_regs_core_pthdly_250kbps_fmac pthdly_250kbps_fmac
 * @brief Contains register fields associated with pthdly_250kbps_fmac. definitions.
 * @{
 */
#ifndef __ATLC_PTHDLY_250KBPS_FMAC_MACRO__
#define __ATLC_PTHDLY_250KBPS_FMAC_MACRO__

/* macros for field rx */
/**
 * @defgroup at_lc_regs_core_rx_field rx_field
 * @brief macros for field rx
 * @details rx path delay in micro seconds
 * @{
 */
#define ATLC_PTHDLY_250KBPS_FMAC__RX__SHIFT                                   0
#define ATLC_PTHDLY_250KBPS_FMAC__RX__WIDTH                                   8
#define ATLC_PTHDLY_250KBPS_FMAC__RX__MASK                          0x000000ffU
#define ATLC_PTHDLY_250KBPS_FMAC__RX__READ(src) ((uint32_t)(src) & 0x000000ffU)
#define ATLC_PTHDLY_250KBPS_FMAC__RX__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PTHDLY_250KBPS_FMAC__RX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_PTHDLY_250KBPS_FMAC__RX__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_PTHDLY_250KBPS_FMAC__RX__RESET_VALUE                   0x0000002aU
/** @} */

/* macros for field tx */
/**
 * @defgroup at_lc_regs_core_tx_field tx_field
 * @brief macros for field tx
 * @details tx path delay in micro seconds
 * @{
 */
#define ATLC_PTHDLY_250KBPS_FMAC__TX__SHIFT                                   8
#define ATLC_PTHDLY_250KBPS_FMAC__TX__WIDTH                                   8
#define ATLC_PTHDLY_250KBPS_FMAC__TX__MASK                          0x0000ff00U
#define ATLC_PTHDLY_250KBPS_FMAC__TX__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_PTHDLY_250KBPS_FMAC__TX__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_PTHDLY_250KBPS_FMAC__TX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_PTHDLY_250KBPS_FMAC__TX__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_PTHDLY_250KBPS_FMAC__TX__RESET_VALUE                   0x00000001U
/** @} */
#define ATLC_PTHDLY_250KBPS_FMAC__TYPE                                 uint32_t
#define ATLC_PTHDLY_250KBPS_FMAC__READ                              0x0000ffffU
#define ATLC_PTHDLY_250KBPS_FMAC__WRITE                             0x0000ffffU
#define ATLC_PTHDLY_250KBPS_FMAC__PRESERVED                         0x00000000U
#define ATLC_PTHDLY_250KBPS_FMAC__RESET_VALUE                       0x0000012aU

#endif /* __ATLC_PTHDLY_250KBPS_FMAC_MACRO__ */

/** @} end of pthdly_250kbps_fmac */

/* macros for BlueprintGlobalNameSpace::ATLC_pthdly_sw_fmac */
/**
 * @defgroup at_lc_regs_core_pthdly_sw_fmac pthdly_sw_fmac
 * @brief Contains register fields associated with pthdly_sw_fmac. definitions.
 * @{
 */
#ifndef __ATLC_PTHDLY_SW_FMAC_MACRO__
#define __ATLC_PTHDLY_SW_FMAC_MACRO__

/* macros for field rx_1mbps */
/**
 * @defgroup at_lc_regs_core_rx_1mbps_field rx_1mbps_field
 * @brief macros for field rx_1mbps
 * @details rx path delay to sync word in micro seconds
 * @{
 */
#define ATLC_PTHDLY_SW_FMAC__RX_1MBPS__SHIFT                                  0
#define ATLC_PTHDLY_SW_FMAC__RX_1MBPS__WIDTH                                  8
#define ATLC_PTHDLY_SW_FMAC__RX_1MBPS__MASK                         0x000000ffU
#define ATLC_PTHDLY_SW_FMAC__RX_1MBPS__READ(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PTHDLY_SW_FMAC__RX_1MBPS__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PTHDLY_SW_FMAC__RX_1MBPS__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_PTHDLY_SW_FMAC__RX_1MBPS__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_PTHDLY_SW_FMAC__RX_1MBPS__RESET_VALUE                  0x00000000U
/** @} */

/* macros for field rx_2mbps */
/**
 * @defgroup at_lc_regs_core_rx_2mbps_field rx_2mbps_field
 * @brief macros for field rx_2mbps
 * @details rx path delay to sync word in micro seconds
 * @{
 */
#define ATLC_PTHDLY_SW_FMAC__RX_2MBPS__SHIFT                                  8
#define ATLC_PTHDLY_SW_FMAC__RX_2MBPS__WIDTH                                  8
#define ATLC_PTHDLY_SW_FMAC__RX_2MBPS__MASK                         0x0000ff00U
#define ATLC_PTHDLY_SW_FMAC__RX_2MBPS__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_PTHDLY_SW_FMAC__RX_2MBPS__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_PTHDLY_SW_FMAC__RX_2MBPS__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_PTHDLY_SW_FMAC__RX_2MBPS__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_PTHDLY_SW_FMAC__RX_2MBPS__RESET_VALUE                  0x00000000U
/** @} */

/* macros for field rx_250kbps */
/**
 * @defgroup at_lc_regs_core_rx_250kbps_field rx_250kbps_field
 * @brief macros for field rx_250kbps
 * @details rx path delay to sync word in micro seconds
 * @{
 */
#define ATLC_PTHDLY_SW_FMAC__RX_250KBPS__SHIFT                               16
#define ATLC_PTHDLY_SW_FMAC__RX_250KBPS__WIDTH                                8
#define ATLC_PTHDLY_SW_FMAC__RX_250KBPS__MASK                       0x00ff0000U
#define ATLC_PTHDLY_SW_FMAC__RX_250KBPS__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_PTHDLY_SW_FMAC__RX_250KBPS__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00ff0000U)
#define ATLC_PTHDLY_SW_FMAC__RX_250KBPS__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00ff0000U) | (((uint32_t)(src) <<\
                    16) & 0x00ff0000U)
#define ATLC_PTHDLY_SW_FMAC__RX_250KBPS__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00ff0000U)))
#define ATLC_PTHDLY_SW_FMAC__RX_250KBPS__RESET_VALUE                0x00000000U
/** @} */
#define ATLC_PTHDLY_SW_FMAC__TYPE                                      uint32_t
#define ATLC_PTHDLY_SW_FMAC__READ                                   0x00ffffffU
#define ATLC_PTHDLY_SW_FMAC__WRITE                                  0x00ffffffU
#define ATLC_PTHDLY_SW_FMAC__PRESERVED                              0x00000000U
#define ATLC_PTHDLY_SW_FMAC__RESET_VALUE                            0x00000000U

#endif /* __ATLC_PTHDLY_SW_FMAC_MACRO__ */

/** @} end of pthdly_sw_fmac */

/* macros for BlueprintGlobalNameSpace::ATLC_pwrud_1mbps_fmac */
/**
 * @defgroup at_lc_regs_core_pwrud_1mbps_fmac pwrud_1mbps_fmac
 * @brief Contains register fields associated with pwrud_1mbps_fmac. definitions.
 * @{
 */
#ifndef __ATLC_PWRUD_1MBPS_FMAC_MACRO__
#define __ATLC_PWRUD_1MBPS_FMAC_MACRO__

/* macros for field rx_pwrup */
/**
 * @defgroup at_lc_regs_core_rx_pwrup_field rx_pwrup_field
 * @brief macros for field rx_pwrup
 * @details rx powerup time in micro seconds
 * @{
 */
#define ATLC_PWRUD_1MBPS_FMAC__RX_PWRUP__SHIFT                                0
#define ATLC_PWRUD_1MBPS_FMAC__RX_PWRUP__WIDTH                                8
#define ATLC_PWRUD_1MBPS_FMAC__RX_PWRUP__MASK                       0x000000ffU
#define ATLC_PWRUD_1MBPS_FMAC__RX_PWRUP__READ(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PWRUD_1MBPS_FMAC__RX_PWRUP__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PWRUD_1MBPS_FMAC__RX_PWRUP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_PWRUD_1MBPS_FMAC__RX_PWRUP__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_PWRUD_1MBPS_FMAC__RX_PWRUP__RESET_VALUE                0x0000004bU
/** @} */

/* macros for field tx_pwrup */
/**
 * @defgroup at_lc_regs_core_tx_pwrup_field tx_pwrup_field
 * @brief macros for field tx_pwrup
 * @details tx powerup time in micro seconds
 * @{
 */
#define ATLC_PWRUD_1MBPS_FMAC__TX_PWRUP__SHIFT                                8
#define ATLC_PWRUD_1MBPS_FMAC__TX_PWRUP__WIDTH                                8
#define ATLC_PWRUD_1MBPS_FMAC__TX_PWRUP__MASK                       0x0000ff00U
#define ATLC_PWRUD_1MBPS_FMAC__TX_PWRUP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_PWRUD_1MBPS_FMAC__TX_PWRUP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_PWRUD_1MBPS_FMAC__TX_PWRUP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_PWRUD_1MBPS_FMAC__TX_PWRUP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_PWRUD_1MBPS_FMAC__TX_PWRUP__RESET_VALUE                0x00000032U
/** @} */

/* macros for field tx_pwrdn */
/**
 * @defgroup at_lc_regs_core_tx_pwrdn_field tx_pwrdn_field
 * @brief macros for field tx_pwrdn
 * @details tx powerdn time in micro seconds
 * @{
 */
#define ATLC_PWRUD_1MBPS_FMAC__TX_PWRDN__SHIFT                               16
#define ATLC_PWRUD_1MBPS_FMAC__TX_PWRDN__WIDTH                                8
#define ATLC_PWRUD_1MBPS_FMAC__TX_PWRDN__MASK                       0x00ff0000U
#define ATLC_PWRUD_1MBPS_FMAC__TX_PWRDN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_PWRUD_1MBPS_FMAC__TX_PWRDN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00ff0000U)
#define ATLC_PWRUD_1MBPS_FMAC__TX_PWRDN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00ff0000U) | (((uint32_t)(src) <<\
                    16) & 0x00ff0000U)
#define ATLC_PWRUD_1MBPS_FMAC__TX_PWRDN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00ff0000U)))
#define ATLC_PWRUD_1MBPS_FMAC__TX_PWRDN__RESET_VALUE                0x00000002U
/** @} */
#define ATLC_PWRUD_1MBPS_FMAC__TYPE                                    uint32_t
#define ATLC_PWRUD_1MBPS_FMAC__READ                                 0x00ffffffU
#define ATLC_PWRUD_1MBPS_FMAC__WRITE                                0x00ffffffU
#define ATLC_PWRUD_1MBPS_FMAC__PRESERVED                            0x00000000U
#define ATLC_PWRUD_1MBPS_FMAC__RESET_VALUE                          0x0002324bU

#endif /* __ATLC_PWRUD_1MBPS_FMAC_MACRO__ */

/** @} end of pwrud_1mbps_fmac */

/* macros for BlueprintGlobalNameSpace::ATLC_pwrud_2mbps_fmac */
/**
 * @defgroup at_lc_regs_core_pwrud_2mbps_fmac pwrud_2mbps_fmac
 * @brief Contains register fields associated with pwrud_2mbps_fmac. definitions.
 * @{
 */
#ifndef __ATLC_PWRUD_2MBPS_FMAC_MACRO__
#define __ATLC_PWRUD_2MBPS_FMAC_MACRO__

/* macros for field rx_pwrup */
/**
 * @defgroup at_lc_regs_core_rx_pwrup_field rx_pwrup_field
 * @brief macros for field rx_pwrup
 * @details rx powerup time in micro seconds
 * @{
 */
#define ATLC_PWRUD_2MBPS_FMAC__RX_PWRUP__SHIFT                                0
#define ATLC_PWRUD_2MBPS_FMAC__RX_PWRUP__WIDTH                                8
#define ATLC_PWRUD_2MBPS_FMAC__RX_PWRUP__MASK                       0x000000ffU
#define ATLC_PWRUD_2MBPS_FMAC__RX_PWRUP__READ(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PWRUD_2MBPS_FMAC__RX_PWRUP__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PWRUD_2MBPS_FMAC__RX_PWRUP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_PWRUD_2MBPS_FMAC__RX_PWRUP__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_PWRUD_2MBPS_FMAC__RX_PWRUP__RESET_VALUE                0x0000004bU
/** @} */

/* macros for field tx_pwrup */
/**
 * @defgroup at_lc_regs_core_tx_pwrup_field tx_pwrup_field
 * @brief macros for field tx_pwrup
 * @details tx powerup time in micro seconds
 * @{
 */
#define ATLC_PWRUD_2MBPS_FMAC__TX_PWRUP__SHIFT                                8
#define ATLC_PWRUD_2MBPS_FMAC__TX_PWRUP__WIDTH                                8
#define ATLC_PWRUD_2MBPS_FMAC__TX_PWRUP__MASK                       0x0000ff00U
#define ATLC_PWRUD_2MBPS_FMAC__TX_PWRUP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_PWRUD_2MBPS_FMAC__TX_PWRUP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_PWRUD_2MBPS_FMAC__TX_PWRUP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_PWRUD_2MBPS_FMAC__TX_PWRUP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_PWRUD_2MBPS_FMAC__TX_PWRUP__RESET_VALUE                0x00000032U
/** @} */

/* macros for field tx_pwrdn */
/**
 * @defgroup at_lc_regs_core_tx_pwrdn_field tx_pwrdn_field
 * @brief macros for field tx_pwrdn
 * @details tx powerdn time in micro seconds
 * @{
 */
#define ATLC_PWRUD_2MBPS_FMAC__TX_PWRDN__SHIFT                               16
#define ATLC_PWRUD_2MBPS_FMAC__TX_PWRDN__WIDTH                                8
#define ATLC_PWRUD_2MBPS_FMAC__TX_PWRDN__MASK                       0x00ff0000U
#define ATLC_PWRUD_2MBPS_FMAC__TX_PWRDN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_PWRUD_2MBPS_FMAC__TX_PWRDN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00ff0000U)
#define ATLC_PWRUD_2MBPS_FMAC__TX_PWRDN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00ff0000U) | (((uint32_t)(src) <<\
                    16) & 0x00ff0000U)
#define ATLC_PWRUD_2MBPS_FMAC__TX_PWRDN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00ff0000U)))
#define ATLC_PWRUD_2MBPS_FMAC__TX_PWRDN__RESET_VALUE                0x00000002U
/** @} */
#define ATLC_PWRUD_2MBPS_FMAC__TYPE                                    uint32_t
#define ATLC_PWRUD_2MBPS_FMAC__READ                                 0x00ffffffU
#define ATLC_PWRUD_2MBPS_FMAC__WRITE                                0x00ffffffU
#define ATLC_PWRUD_2MBPS_FMAC__PRESERVED                            0x00000000U
#define ATLC_PWRUD_2MBPS_FMAC__RESET_VALUE                          0x0002324bU

#endif /* __ATLC_PWRUD_2MBPS_FMAC_MACRO__ */

/** @} end of pwrud_2mbps_fmac */

/* macros for BlueprintGlobalNameSpace::ATLC_pwrud_250kbps_fmac */
/**
 * @defgroup at_lc_regs_core_pwrud_250kbps_fmac pwrud_250kbps_fmac
 * @brief Contains register fields associated with pwrud_250kbps_fmac. definitions.
 * @{
 */
#ifndef __ATLC_PWRUD_250KBPS_FMAC_MACRO__
#define __ATLC_PWRUD_250KBPS_FMAC_MACRO__

/* macros for field rx_pwrup */
/**
 * @defgroup at_lc_regs_core_rx_pwrup_field rx_pwrup_field
 * @brief macros for field rx_pwrup
 * @details rx powerup time in micro seconds
 * @{
 */
#define ATLC_PWRUD_250KBPS_FMAC__RX_PWRUP__SHIFT                              0
#define ATLC_PWRUD_250KBPS_FMAC__RX_PWRUP__WIDTH                              8
#define ATLC_PWRUD_250KBPS_FMAC__RX_PWRUP__MASK                     0x000000ffU
#define ATLC_PWRUD_250KBPS_FMAC__RX_PWRUP__READ(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PWRUD_250KBPS_FMAC__RX_PWRUP__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PWRUD_250KBPS_FMAC__RX_PWRUP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_PWRUD_250KBPS_FMAC__RX_PWRUP__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_PWRUD_250KBPS_FMAC__RX_PWRUP__RESET_VALUE              0x0000004bU
/** @} */

/* macros for field tx_pwrup */
/**
 * @defgroup at_lc_regs_core_tx_pwrup_field tx_pwrup_field
 * @brief macros for field tx_pwrup
 * @details tx powerup time in micro seconds
 * @{
 */
#define ATLC_PWRUD_250KBPS_FMAC__TX_PWRUP__SHIFT                              8
#define ATLC_PWRUD_250KBPS_FMAC__TX_PWRUP__WIDTH                              8
#define ATLC_PWRUD_250KBPS_FMAC__TX_PWRUP__MASK                     0x0000ff00U
#define ATLC_PWRUD_250KBPS_FMAC__TX_PWRUP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_PWRUD_250KBPS_FMAC__TX_PWRUP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_PWRUD_250KBPS_FMAC__TX_PWRUP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_PWRUD_250KBPS_FMAC__TX_PWRUP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_PWRUD_250KBPS_FMAC__TX_PWRUP__RESET_VALUE              0x00000032U
/** @} */

/* macros for field tx_pwrdn */
/**
 * @defgroup at_lc_regs_core_tx_pwrdn_field tx_pwrdn_field
 * @brief macros for field tx_pwrdn
 * @details tx powerdn time in micro seconds
 * @{
 */
#define ATLC_PWRUD_250KBPS_FMAC__TX_PWRDN__SHIFT                             16
#define ATLC_PWRUD_250KBPS_FMAC__TX_PWRDN__WIDTH                              8
#define ATLC_PWRUD_250KBPS_FMAC__TX_PWRDN__MASK                     0x00ff0000U
#define ATLC_PWRUD_250KBPS_FMAC__TX_PWRDN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_PWRUD_250KBPS_FMAC__TX_PWRDN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00ff0000U)
#define ATLC_PWRUD_250KBPS_FMAC__TX_PWRDN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00ff0000U) | (((uint32_t)(src) <<\
                    16) & 0x00ff0000U)
#define ATLC_PWRUD_250KBPS_FMAC__TX_PWRDN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00ff0000U)))
#define ATLC_PWRUD_250KBPS_FMAC__TX_PWRDN__RESET_VALUE              0x00000002U
/** @} */
#define ATLC_PWRUD_250KBPS_FMAC__TYPE                                  uint32_t
#define ATLC_PWRUD_250KBPS_FMAC__READ                               0x00ffffffU
#define ATLC_PWRUD_250KBPS_FMAC__WRITE                              0x00ffffffU
#define ATLC_PWRUD_250KBPS_FMAC__PRESERVED                          0x00000000U
#define ATLC_PWRUD_250KBPS_FMAC__RESET_VALUE                        0x0002324bU

#endif /* __ATLC_PWRUD_250KBPS_FMAC_MACRO__ */

/** @} end of pwrud_250kbps_fmac */

/* macros for BlueprintGlobalNameSpace::ATLC_pthdly_1mbps_ble */
/**
 * @defgroup at_lc_regs_core_pthdly_1mbps_ble pthdly_1mbps_ble
 * @brief Contains register fields associated with pthdly_1mbps_ble. definitions.
 * @{
 */
#ifndef __ATLC_PTHDLY_1MBPS_BLE_MACRO__
#define __ATLC_PTHDLY_1MBPS_BLE_MACRO__

/* macros for field rx */
/**
 * @defgroup at_lc_regs_core_rx_field rx_field
 * @brief macros for field rx
 * @details rx path delay in micro seconds
 * @{
 */
#define ATLC_PTHDLY_1MBPS_BLE__RX__SHIFT                                      0
#define ATLC_PTHDLY_1MBPS_BLE__RX__WIDTH                                      8
#define ATLC_PTHDLY_1MBPS_BLE__RX__MASK                             0x000000ffU
#define ATLC_PTHDLY_1MBPS_BLE__RX__READ(src)    ((uint32_t)(src) & 0x000000ffU)
#define ATLC_PTHDLY_1MBPS_BLE__RX__WRITE(src)   ((uint32_t)(src) & 0x000000ffU)
#define ATLC_PTHDLY_1MBPS_BLE__RX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_PTHDLY_1MBPS_BLE__RX__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_PTHDLY_1MBPS_BLE__RX__RESET_VALUE                      0x00000004U
/** @} */

/* macros for field tx */
/**
 * @defgroup at_lc_regs_core_tx_field tx_field
 * @brief macros for field tx
 * @details tx path delay in micro seconds
 * @{
 */
#define ATLC_PTHDLY_1MBPS_BLE__TX__SHIFT                                      8
#define ATLC_PTHDLY_1MBPS_BLE__TX__WIDTH                                      8
#define ATLC_PTHDLY_1MBPS_BLE__TX__MASK                             0x0000ff00U
#define ATLC_PTHDLY_1MBPS_BLE__TX__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_PTHDLY_1MBPS_BLE__TX__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_PTHDLY_1MBPS_BLE__TX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_PTHDLY_1MBPS_BLE__TX__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_PTHDLY_1MBPS_BLE__TX__RESET_VALUE                      0x00000001U
/** @} */
#define ATLC_PTHDLY_1MBPS_BLE__TYPE                                    uint32_t
#define ATLC_PTHDLY_1MBPS_BLE__READ                                 0x0000ffffU
#define ATLC_PTHDLY_1MBPS_BLE__WRITE                                0x0000ffffU
#define ATLC_PTHDLY_1MBPS_BLE__PRESERVED                            0x00000000U
#define ATLC_PTHDLY_1MBPS_BLE__RESET_VALUE                          0x00000104U

#endif /* __ATLC_PTHDLY_1MBPS_BLE_MACRO__ */

/** @} end of pthdly_1mbps_ble */

/* macros for BlueprintGlobalNameSpace::ATLC_pthdly_2mbps_ble */
/**
 * @defgroup at_lc_regs_core_pthdly_2mbps_ble pthdly_2mbps_ble
 * @brief Contains register fields associated with pthdly_2mbps_ble. definitions.
 * @{
 */
#ifndef __ATLC_PTHDLY_2MBPS_BLE_MACRO__
#define __ATLC_PTHDLY_2MBPS_BLE_MACRO__

/* macros for field rx */
/**
 * @defgroup at_lc_regs_core_rx_field rx_field
 * @brief macros for field rx
 * @details rx path delay in micro seconds
 * @{
 */
#define ATLC_PTHDLY_2MBPS_BLE__RX__SHIFT                                      0
#define ATLC_PTHDLY_2MBPS_BLE__RX__WIDTH                                      8
#define ATLC_PTHDLY_2MBPS_BLE__RX__MASK                             0x000000ffU
#define ATLC_PTHDLY_2MBPS_BLE__RX__READ(src)    ((uint32_t)(src) & 0x000000ffU)
#define ATLC_PTHDLY_2MBPS_BLE__RX__WRITE(src)   ((uint32_t)(src) & 0x000000ffU)
#define ATLC_PTHDLY_2MBPS_BLE__RX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_PTHDLY_2MBPS_BLE__RX__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_PTHDLY_2MBPS_BLE__RX__RESET_VALUE                      0x00000002U
/** @} */

/* macros for field tx */
/**
 * @defgroup at_lc_regs_core_tx_field tx_field
 * @brief macros for field tx
 * @details tx path delay in micro seconds
 * @{
 */
#define ATLC_PTHDLY_2MBPS_BLE__TX__SHIFT                                      8
#define ATLC_PTHDLY_2MBPS_BLE__TX__WIDTH                                      8
#define ATLC_PTHDLY_2MBPS_BLE__TX__MASK                             0x0000ff00U
#define ATLC_PTHDLY_2MBPS_BLE__TX__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_PTHDLY_2MBPS_BLE__TX__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_PTHDLY_2MBPS_BLE__TX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_PTHDLY_2MBPS_BLE__TX__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_PTHDLY_2MBPS_BLE__TX__RESET_VALUE                      0x00000001U
/** @} */
#define ATLC_PTHDLY_2MBPS_BLE__TYPE                                    uint32_t
#define ATLC_PTHDLY_2MBPS_BLE__READ                                 0x0000ffffU
#define ATLC_PTHDLY_2MBPS_BLE__WRITE                                0x0000ffffU
#define ATLC_PTHDLY_2MBPS_BLE__PRESERVED                            0x00000000U
#define ATLC_PTHDLY_2MBPS_BLE__RESET_VALUE                          0x00000102U

#endif /* __ATLC_PTHDLY_2MBPS_BLE_MACRO__ */

/** @} end of pthdly_2mbps_ble */

/* macros for BlueprintGlobalNameSpace::ATLC_pthdly_500kbps_ble */
/**
 * @defgroup at_lc_regs_core_pthdly_500kbps_ble pthdly_500kbps_ble
 * @brief Contains register fields associated with pthdly_500kbps_ble. definitions.
 * @{
 */
#ifndef __ATLC_PTHDLY_500KBPS_BLE_MACRO__
#define __ATLC_PTHDLY_500KBPS_BLE_MACRO__

/* macros for field rx */
/**
 * @defgroup at_lc_regs_core_rx_field rx_field
 * @brief macros for field rx
 * @details rx path delay in micro seconds
 * @{
 */
#define ATLC_PTHDLY_500KBPS_BLE__RX__SHIFT                                    0
#define ATLC_PTHDLY_500KBPS_BLE__RX__WIDTH                                    8
#define ATLC_PTHDLY_500KBPS_BLE__RX__MASK                           0x000000ffU
#define ATLC_PTHDLY_500KBPS_BLE__RX__READ(src)  ((uint32_t)(src) & 0x000000ffU)
#define ATLC_PTHDLY_500KBPS_BLE__RX__WRITE(src) ((uint32_t)(src) & 0x000000ffU)
#define ATLC_PTHDLY_500KBPS_BLE__RX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_PTHDLY_500KBPS_BLE__RX__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_PTHDLY_500KBPS_BLE__RX__RESET_VALUE                    0x0000002aU
/** @} */

/* macros for field tx */
/**
 * @defgroup at_lc_regs_core_tx_field tx_field
 * @brief macros for field tx
 * @details tx path delay in micro seconds
 * @{
 */
#define ATLC_PTHDLY_500KBPS_BLE__TX__SHIFT                                    8
#define ATLC_PTHDLY_500KBPS_BLE__TX__WIDTH                                    8
#define ATLC_PTHDLY_500KBPS_BLE__TX__MASK                           0x0000ff00U
#define ATLC_PTHDLY_500KBPS_BLE__TX__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_PTHDLY_500KBPS_BLE__TX__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_PTHDLY_500KBPS_BLE__TX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_PTHDLY_500KBPS_BLE__TX__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_PTHDLY_500KBPS_BLE__TX__RESET_VALUE                    0x00000001U
/** @} */

/* macros for field rx_flsh */
/**
 * @defgroup at_lc_regs_core_rx_flsh_field rx_flsh_field
 * @brief macros for field rx_flsh
 * @details rx flush path delay for coded phy in micro second.
 * @{
 */
#define ATLC_PTHDLY_500KBPS_BLE__RX_FLSH__SHIFT                              16
#define ATLC_PTHDLY_500KBPS_BLE__RX_FLSH__WIDTH                               8
#define ATLC_PTHDLY_500KBPS_BLE__RX_FLSH__MASK                      0x00ff0000U
#define ATLC_PTHDLY_500KBPS_BLE__RX_FLSH__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_PTHDLY_500KBPS_BLE__RX_FLSH__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00ff0000U)
#define ATLC_PTHDLY_500KBPS_BLE__RX_FLSH__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00ff0000U) | (((uint32_t)(src) <<\
                    16) & 0x00ff0000U)
#define ATLC_PTHDLY_500KBPS_BLE__RX_FLSH__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00ff0000U)))
#define ATLC_PTHDLY_500KBPS_BLE__RX_FLSH__RESET_VALUE               0x0000000bU
/** @} */
#define ATLC_PTHDLY_500KBPS_BLE__TYPE                                  uint32_t
#define ATLC_PTHDLY_500KBPS_BLE__READ                               0x00ffffffU
#define ATLC_PTHDLY_500KBPS_BLE__WRITE                              0x00ffffffU
#define ATLC_PTHDLY_500KBPS_BLE__PRESERVED                          0x00000000U
#define ATLC_PTHDLY_500KBPS_BLE__RESET_VALUE                        0x000b012aU

#endif /* __ATLC_PTHDLY_500KBPS_BLE_MACRO__ */

/** @} end of pthdly_500kbps_ble */

/* macros for BlueprintGlobalNameSpace::ATLC_pthdly_125kbps_ble */
/**
 * @defgroup at_lc_regs_core_pthdly_125kbps_ble pthdly_125kbps_ble
 * @brief Contains register fields associated with pthdly_125kbps_ble. definitions.
 * @{
 */
#ifndef __ATLC_PTHDLY_125KBPS_BLE_MACRO__
#define __ATLC_PTHDLY_125KBPS_BLE_MACRO__

/* macros for field rx */
/**
 * @defgroup at_lc_regs_core_rx_field rx_field
 * @brief macros for field rx
 * @details rx path delay in micro seconds
 * @{
 */
#define ATLC_PTHDLY_125KBPS_BLE__RX__SHIFT                                    0
#define ATLC_PTHDLY_125KBPS_BLE__RX__WIDTH                                    8
#define ATLC_PTHDLY_125KBPS_BLE__RX__MASK                           0x000000ffU
#define ATLC_PTHDLY_125KBPS_BLE__RX__READ(src)  ((uint32_t)(src) & 0x000000ffU)
#define ATLC_PTHDLY_125KBPS_BLE__RX__WRITE(src) ((uint32_t)(src) & 0x000000ffU)
#define ATLC_PTHDLY_125KBPS_BLE__RX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_PTHDLY_125KBPS_BLE__RX__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_PTHDLY_125KBPS_BLE__RX__RESET_VALUE                    0x000000a2U
/** @} */

/* macros for field tx */
/**
 * @defgroup at_lc_regs_core_tx_field tx_field
 * @brief macros for field tx
 * @details tx path delay in micro seconds
 * @{
 */
#define ATLC_PTHDLY_125KBPS_BLE__TX__SHIFT                                    8
#define ATLC_PTHDLY_125KBPS_BLE__TX__WIDTH                                    8
#define ATLC_PTHDLY_125KBPS_BLE__TX__MASK                           0x0000ff00U
#define ATLC_PTHDLY_125KBPS_BLE__TX__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_PTHDLY_125KBPS_BLE__TX__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_PTHDLY_125KBPS_BLE__TX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_PTHDLY_125KBPS_BLE__TX__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_PTHDLY_125KBPS_BLE__TX__RESET_VALUE                    0x00000001U
/** @} */

/* macros for field rx_flsh */
/**
 * @defgroup at_lc_regs_core_rx_flsh_field rx_flsh_field
 * @brief macros for field rx_flsh
 * @details rx flush path delay for coded phy in micro second.
 * @{
 */
#define ATLC_PTHDLY_125KBPS_BLE__RX_FLSH__SHIFT                              16
#define ATLC_PTHDLY_125KBPS_BLE__RX_FLSH__WIDTH                               8
#define ATLC_PTHDLY_125KBPS_BLE__RX_FLSH__MASK                      0x00ff0000U
#define ATLC_PTHDLY_125KBPS_BLE__RX_FLSH__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_PTHDLY_125KBPS_BLE__RX_FLSH__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00ff0000U)
#define ATLC_PTHDLY_125KBPS_BLE__RX_FLSH__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00ff0000U) | (((uint32_t)(src) <<\
                    16) & 0x00ff0000U)
#define ATLC_PTHDLY_125KBPS_BLE__RX_FLSH__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00ff0000U)))
#define ATLC_PTHDLY_125KBPS_BLE__RX_FLSH__RESET_VALUE               0x0000000bU
/** @} */
#define ATLC_PTHDLY_125KBPS_BLE__TYPE                                  uint32_t
#define ATLC_PTHDLY_125KBPS_BLE__READ                               0x00ffffffU
#define ATLC_PTHDLY_125KBPS_BLE__WRITE                              0x00ffffffU
#define ATLC_PTHDLY_125KBPS_BLE__PRESERVED                          0x00000000U
#define ATLC_PTHDLY_125KBPS_BLE__RESET_VALUE                        0x000b01a2U

#endif /* __ATLC_PTHDLY_125KBPS_BLE_MACRO__ */

/** @} end of pthdly_125kbps_ble */

/* macros for BlueprintGlobalNameSpace::ATLC_pthdly_sw_ble */
/**
 * @defgroup at_lc_regs_core_pthdly_sw_ble pthdly_sw_ble
 * @brief Contains register fields associated with pthdly_sw_ble. definitions.
 * @{
 */
#ifndef __ATLC_PTHDLY_SW_BLE_MACRO__
#define __ATLC_PTHDLY_SW_BLE_MACRO__

/* macros for field rx_1mbps */
/**
 * @defgroup at_lc_regs_core_rx_1mbps_field rx_1mbps_field
 * @brief macros for field rx_1mbps
 * @details rx path delay to sync word in micro seconds
 * @{
 */
#define ATLC_PTHDLY_SW_BLE__RX_1MBPS__SHIFT                                   0
#define ATLC_PTHDLY_SW_BLE__RX_1MBPS__WIDTH                                   8
#define ATLC_PTHDLY_SW_BLE__RX_1MBPS__MASK                          0x000000ffU
#define ATLC_PTHDLY_SW_BLE__RX_1MBPS__READ(src) ((uint32_t)(src) & 0x000000ffU)
#define ATLC_PTHDLY_SW_BLE__RX_1MBPS__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PTHDLY_SW_BLE__RX_1MBPS__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_PTHDLY_SW_BLE__RX_1MBPS__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_PTHDLY_SW_BLE__RX_1MBPS__RESET_VALUE                   0x0000000cU
/** @} */

/* macros for field rx_2mbps */
/**
 * @defgroup at_lc_regs_core_rx_2mbps_field rx_2mbps_field
 * @brief macros for field rx_2mbps
 * @details rx path delay to sync word in micro seconds
 * @{
 */
#define ATLC_PTHDLY_SW_BLE__RX_2MBPS__SHIFT                                   8
#define ATLC_PTHDLY_SW_BLE__RX_2MBPS__WIDTH                                   8
#define ATLC_PTHDLY_SW_BLE__RX_2MBPS__MASK                          0x0000ff00U
#define ATLC_PTHDLY_SW_BLE__RX_2MBPS__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_PTHDLY_SW_BLE__RX_2MBPS__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_PTHDLY_SW_BLE__RX_2MBPS__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_PTHDLY_SW_BLE__RX_2MBPS__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_PTHDLY_SW_BLE__RX_2MBPS__RESET_VALUE                   0x0000000aU
/** @} */

/* macros for field rx_500kbps */
/**
 * @defgroup at_lc_regs_core_rx_500kbps_field rx_500kbps_field
 * @brief macros for field rx_500kbps
 * @details rx path delay to sync word in micro seconds
 * @{
 */
#define ATLC_PTHDLY_SW_BLE__RX_500KBPS__SHIFT                                16
#define ATLC_PTHDLY_SW_BLE__RX_500KBPS__WIDTH                                 8
#define ATLC_PTHDLY_SW_BLE__RX_500KBPS__MASK                        0x00ff0000U
#define ATLC_PTHDLY_SW_BLE__RX_500KBPS__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_PTHDLY_SW_BLE__RX_500KBPS__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00ff0000U)
#define ATLC_PTHDLY_SW_BLE__RX_500KBPS__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00ff0000U) | (((uint32_t)(src) <<\
                    16) & 0x00ff0000U)
#define ATLC_PTHDLY_SW_BLE__RX_500KBPS__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00ff0000U)))
#define ATLC_PTHDLY_SW_BLE__RX_500KBPS__RESET_VALUE                 0x00000054U
/** @} */

/* macros for field rx_125kbps */
/**
 * @defgroup at_lc_regs_core_rx_125kbps_field rx_125kbps_field
 * @brief macros for field rx_125kbps
 * @details rx path delay to sync word in micro seconds
 * @{
 */
#define ATLC_PTHDLY_SW_BLE__RX_125KBPS__SHIFT                                24
#define ATLC_PTHDLY_SW_BLE__RX_125KBPS__WIDTH                                 8
#define ATLC_PTHDLY_SW_BLE__RX_125KBPS__MASK                        0xff000000U
#define ATLC_PTHDLY_SW_BLE__RX_125KBPS__READ(src) \
                    (((uint32_t)(src)\
                    & 0xff000000U) >> 24)
#define ATLC_PTHDLY_SW_BLE__RX_125KBPS__WRITE(src) \
                    (((uint32_t)(src)\
                    << 24) & 0xff000000U)
#define ATLC_PTHDLY_SW_BLE__RX_125KBPS__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xff000000U) | (((uint32_t)(src) <<\
                    24) & 0xff000000U)
#define ATLC_PTHDLY_SW_BLE__RX_125KBPS__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 24) & ~0xff000000U)))
#define ATLC_PTHDLY_SW_BLE__RX_125KBPS__RESET_VALUE                 0x00000054U
/** @} */
#define ATLC_PTHDLY_SW_BLE__TYPE                                       uint32_t
#define ATLC_PTHDLY_SW_BLE__READ                                    0xffffffffU
#define ATLC_PTHDLY_SW_BLE__WRITE                                   0xffffffffU
#define ATLC_PTHDLY_SW_BLE__PRESERVED                               0x00000000U
#define ATLC_PTHDLY_SW_BLE__RESET_VALUE                             0x54540a0cU

#endif /* __ATLC_PTHDLY_SW_BLE_MACRO__ */

/** @} end of pthdly_sw_ble */

/* macros for BlueprintGlobalNameSpace::ATLC_pwrud_1mbps_ble */
/**
 * @defgroup at_lc_regs_core_pwrud_1mbps_ble pwrud_1mbps_ble
 * @brief Contains register fields associated with pwrud_1mbps_ble. definitions.
 * @{
 */
#ifndef __ATLC_PWRUD_1MBPS_BLE_MACRO__
#define __ATLC_PWRUD_1MBPS_BLE_MACRO__

/* macros for field rx_pwrup */
/**
 * @defgroup at_lc_regs_core_rx_pwrup_field rx_pwrup_field
 * @brief macros for field rx_pwrup
 * @details rx powerup time in micro seconds
 * @{
 */
#define ATLC_PWRUD_1MBPS_BLE__RX_PWRUP__SHIFT                                 0
#define ATLC_PWRUD_1MBPS_BLE__RX_PWRUP__WIDTH                                 8
#define ATLC_PWRUD_1MBPS_BLE__RX_PWRUP__MASK                        0x000000ffU
#define ATLC_PWRUD_1MBPS_BLE__RX_PWRUP__READ(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PWRUD_1MBPS_BLE__RX_PWRUP__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PWRUD_1MBPS_BLE__RX_PWRUP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_PWRUD_1MBPS_BLE__RX_PWRUP__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_PWRUD_1MBPS_BLE__RX_PWRUP__RESET_VALUE                 0x0000004bU
/** @} */

/* macros for field tx_pwrup */
/**
 * @defgroup at_lc_regs_core_tx_pwrup_field tx_pwrup_field
 * @brief macros for field tx_pwrup
 * @details tx powerup time in micro seconds
 * @{
 */
#define ATLC_PWRUD_1MBPS_BLE__TX_PWRUP__SHIFT                                 8
#define ATLC_PWRUD_1MBPS_BLE__TX_PWRUP__WIDTH                                 8
#define ATLC_PWRUD_1MBPS_BLE__TX_PWRUP__MASK                        0x0000ff00U
#define ATLC_PWRUD_1MBPS_BLE__TX_PWRUP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_PWRUD_1MBPS_BLE__TX_PWRUP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_PWRUD_1MBPS_BLE__TX_PWRUP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_PWRUD_1MBPS_BLE__TX_PWRUP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_PWRUD_1MBPS_BLE__TX_PWRUP__RESET_VALUE                 0x00000038U
/** @} */

/* macros for field tx_pwrdn */
/**
 * @defgroup at_lc_regs_core_tx_pwrdn_field tx_pwrdn_field
 * @brief macros for field tx_pwrdn
 * @details tx powerdn time in micro seconds
 * @{
 */
#define ATLC_PWRUD_1MBPS_BLE__TX_PWRDN__SHIFT                                16
#define ATLC_PWRUD_1MBPS_BLE__TX_PWRDN__WIDTH                                 8
#define ATLC_PWRUD_1MBPS_BLE__TX_PWRDN__MASK                        0x00ff0000U
#define ATLC_PWRUD_1MBPS_BLE__TX_PWRDN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_PWRUD_1MBPS_BLE__TX_PWRDN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00ff0000U)
#define ATLC_PWRUD_1MBPS_BLE__TX_PWRDN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00ff0000U) | (((uint32_t)(src) <<\
                    16) & 0x00ff0000U)
#define ATLC_PWRUD_1MBPS_BLE__TX_PWRDN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00ff0000U)))
#define ATLC_PWRUD_1MBPS_BLE__TX_PWRDN__RESET_VALUE                 0x00000002U
/** @} */
#define ATLC_PWRUD_1MBPS_BLE__TYPE                                     uint32_t
#define ATLC_PWRUD_1MBPS_BLE__READ                                  0x00ffffffU
#define ATLC_PWRUD_1MBPS_BLE__WRITE                                 0x00ffffffU
#define ATLC_PWRUD_1MBPS_BLE__PRESERVED                             0x00000000U
#define ATLC_PWRUD_1MBPS_BLE__RESET_VALUE                           0x0002384bU

#endif /* __ATLC_PWRUD_1MBPS_BLE_MACRO__ */

/** @} end of pwrud_1mbps_ble */

/* macros for BlueprintGlobalNameSpace::ATLC_pwrud_2mbps_ble */
/**
 * @defgroup at_lc_regs_core_pwrud_2mbps_ble pwrud_2mbps_ble
 * @brief Contains register fields associated with pwrud_2mbps_ble. definitions.
 * @{
 */
#ifndef __ATLC_PWRUD_2MBPS_BLE_MACRO__
#define __ATLC_PWRUD_2MBPS_BLE_MACRO__

/* macros for field rx_pwrup */
/**
 * @defgroup at_lc_regs_core_rx_pwrup_field rx_pwrup_field
 * @brief macros for field rx_pwrup
 * @details rx powerup time in micro seconds
 * @{
 */
#define ATLC_PWRUD_2MBPS_BLE__RX_PWRUP__SHIFT                                 0
#define ATLC_PWRUD_2MBPS_BLE__RX_PWRUP__WIDTH                                 8
#define ATLC_PWRUD_2MBPS_BLE__RX_PWRUP__MASK                        0x000000ffU
#define ATLC_PWRUD_2MBPS_BLE__RX_PWRUP__READ(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PWRUD_2MBPS_BLE__RX_PWRUP__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PWRUD_2MBPS_BLE__RX_PWRUP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_PWRUD_2MBPS_BLE__RX_PWRUP__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_PWRUD_2MBPS_BLE__RX_PWRUP__RESET_VALUE                 0x0000004bU
/** @} */

/* macros for field tx_pwrup */
/**
 * @defgroup at_lc_regs_core_tx_pwrup_field tx_pwrup_field
 * @brief macros for field tx_pwrup
 * @details tx powerup time in micro seconds
 * @{
 */
#define ATLC_PWRUD_2MBPS_BLE__TX_PWRUP__SHIFT                                 8
#define ATLC_PWRUD_2MBPS_BLE__TX_PWRUP__WIDTH                                 8
#define ATLC_PWRUD_2MBPS_BLE__TX_PWRUP__MASK                        0x0000ff00U
#define ATLC_PWRUD_2MBPS_BLE__TX_PWRUP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_PWRUD_2MBPS_BLE__TX_PWRUP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_PWRUD_2MBPS_BLE__TX_PWRUP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_PWRUD_2MBPS_BLE__TX_PWRUP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_PWRUD_2MBPS_BLE__TX_PWRUP__RESET_VALUE                 0x00000038U
/** @} */

/* macros for field tx_pwrdn */
/**
 * @defgroup at_lc_regs_core_tx_pwrdn_field tx_pwrdn_field
 * @brief macros for field tx_pwrdn
 * @details tx powerdn time in micro seconds
 * @{
 */
#define ATLC_PWRUD_2MBPS_BLE__TX_PWRDN__SHIFT                                16
#define ATLC_PWRUD_2MBPS_BLE__TX_PWRDN__WIDTH                                 8
#define ATLC_PWRUD_2MBPS_BLE__TX_PWRDN__MASK                        0x00ff0000U
#define ATLC_PWRUD_2MBPS_BLE__TX_PWRDN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_PWRUD_2MBPS_BLE__TX_PWRDN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00ff0000U)
#define ATLC_PWRUD_2MBPS_BLE__TX_PWRDN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00ff0000U) | (((uint32_t)(src) <<\
                    16) & 0x00ff0000U)
#define ATLC_PWRUD_2MBPS_BLE__TX_PWRDN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00ff0000U)))
#define ATLC_PWRUD_2MBPS_BLE__TX_PWRDN__RESET_VALUE                 0x00000002U
/** @} */
#define ATLC_PWRUD_2MBPS_BLE__TYPE                                     uint32_t
#define ATLC_PWRUD_2MBPS_BLE__READ                                  0x00ffffffU
#define ATLC_PWRUD_2MBPS_BLE__WRITE                                 0x00ffffffU
#define ATLC_PWRUD_2MBPS_BLE__PRESERVED                             0x00000000U
#define ATLC_PWRUD_2MBPS_BLE__RESET_VALUE                           0x0002384bU

#endif /* __ATLC_PWRUD_2MBPS_BLE_MACRO__ */

/** @} end of pwrud_2mbps_ble */

/* macros for BlueprintGlobalNameSpace::ATLC_pwrud_500kbps_ble */
/**
 * @defgroup at_lc_regs_core_pwrud_500kbps_ble pwrud_500kbps_ble
 * @brief Contains register fields associated with pwrud_500kbps_ble. definitions.
 * @{
 */
#ifndef __ATLC_PWRUD_500KBPS_BLE_MACRO__
#define __ATLC_PWRUD_500KBPS_BLE_MACRO__

/* macros for field rx_pwrup */
/**
 * @defgroup at_lc_regs_core_rx_pwrup_field rx_pwrup_field
 * @brief macros for field rx_pwrup
 * @details rx powerup time in micro seconds
 * @{
 */
#define ATLC_PWRUD_500KBPS_BLE__RX_PWRUP__SHIFT                               0
#define ATLC_PWRUD_500KBPS_BLE__RX_PWRUP__WIDTH                               8
#define ATLC_PWRUD_500KBPS_BLE__RX_PWRUP__MASK                      0x000000ffU
#define ATLC_PWRUD_500KBPS_BLE__RX_PWRUP__READ(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PWRUD_500KBPS_BLE__RX_PWRUP__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PWRUD_500KBPS_BLE__RX_PWRUP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_PWRUD_500KBPS_BLE__RX_PWRUP__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_PWRUD_500KBPS_BLE__RX_PWRUP__RESET_VALUE               0x0000004bU
/** @} */

/* macros for field tx_pwrup */
/**
 * @defgroup at_lc_regs_core_tx_pwrup_field tx_pwrup_field
 * @brief macros for field tx_pwrup
 * @details tx powerup time in micro seconds
 * @{
 */
#define ATLC_PWRUD_500KBPS_BLE__TX_PWRUP__SHIFT                               8
#define ATLC_PWRUD_500KBPS_BLE__TX_PWRUP__WIDTH                               8
#define ATLC_PWRUD_500KBPS_BLE__TX_PWRUP__MASK                      0x0000ff00U
#define ATLC_PWRUD_500KBPS_BLE__TX_PWRUP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_PWRUD_500KBPS_BLE__TX_PWRUP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_PWRUD_500KBPS_BLE__TX_PWRUP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_PWRUD_500KBPS_BLE__TX_PWRUP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_PWRUD_500KBPS_BLE__TX_PWRUP__RESET_VALUE               0x00000038U
/** @} */

/* macros for field tx_pwrdn */
/**
 * @defgroup at_lc_regs_core_tx_pwrdn_field tx_pwrdn_field
 * @brief macros for field tx_pwrdn
 * @details tx powerdn time in micro seconds
 * @{
 */
#define ATLC_PWRUD_500KBPS_BLE__TX_PWRDN__SHIFT                              16
#define ATLC_PWRUD_500KBPS_BLE__TX_PWRDN__WIDTH                               8
#define ATLC_PWRUD_500KBPS_BLE__TX_PWRDN__MASK                      0x00ff0000U
#define ATLC_PWRUD_500KBPS_BLE__TX_PWRDN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_PWRUD_500KBPS_BLE__TX_PWRDN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00ff0000U)
#define ATLC_PWRUD_500KBPS_BLE__TX_PWRDN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00ff0000U) | (((uint32_t)(src) <<\
                    16) & 0x00ff0000U)
#define ATLC_PWRUD_500KBPS_BLE__TX_PWRDN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00ff0000U)))
#define ATLC_PWRUD_500KBPS_BLE__TX_PWRDN__RESET_VALUE               0x00000002U
/** @} */
#define ATLC_PWRUD_500KBPS_BLE__TYPE                                   uint32_t
#define ATLC_PWRUD_500KBPS_BLE__READ                                0x00ffffffU
#define ATLC_PWRUD_500KBPS_BLE__WRITE                               0x00ffffffU
#define ATLC_PWRUD_500KBPS_BLE__PRESERVED                           0x00000000U
#define ATLC_PWRUD_500KBPS_BLE__RESET_VALUE                         0x0002384bU

#endif /* __ATLC_PWRUD_500KBPS_BLE_MACRO__ */

/** @} end of pwrud_500kbps_ble */

/* macros for BlueprintGlobalNameSpace::ATLC_pwrud_125kbps_ble */
/**
 * @defgroup at_lc_regs_core_pwrud_125kbps_ble pwrud_125kbps_ble
 * @brief Contains register fields associated with pwrud_125kbps_ble. definitions.
 * @{
 */
#ifndef __ATLC_PWRUD_125KBPS_BLE_MACRO__
#define __ATLC_PWRUD_125KBPS_BLE_MACRO__

/* macros for field rx_pwrup */
/**
 * @defgroup at_lc_regs_core_rx_pwrup_field rx_pwrup_field
 * @brief macros for field rx_pwrup
 * @details rx powerup time in micro seconds
 * @{
 */
#define ATLC_PWRUD_125KBPS_BLE__RX_PWRUP__SHIFT                               0
#define ATLC_PWRUD_125KBPS_BLE__RX_PWRUP__WIDTH                               8
#define ATLC_PWRUD_125KBPS_BLE__RX_PWRUP__MASK                      0x000000ffU
#define ATLC_PWRUD_125KBPS_BLE__RX_PWRUP__READ(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PWRUD_125KBPS_BLE__RX_PWRUP__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PWRUD_125KBPS_BLE__RX_PWRUP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_PWRUD_125KBPS_BLE__RX_PWRUP__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_PWRUD_125KBPS_BLE__RX_PWRUP__RESET_VALUE               0x0000004bU
/** @} */

/* macros for field tx_pwrup */
/**
 * @defgroup at_lc_regs_core_tx_pwrup_field tx_pwrup_field
 * @brief macros for field tx_pwrup
 * @details tx powerup time in micro seconds
 * @{
 */
#define ATLC_PWRUD_125KBPS_BLE__TX_PWRUP__SHIFT                               8
#define ATLC_PWRUD_125KBPS_BLE__TX_PWRUP__WIDTH                               8
#define ATLC_PWRUD_125KBPS_BLE__TX_PWRUP__MASK                      0x0000ff00U
#define ATLC_PWRUD_125KBPS_BLE__TX_PWRUP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_PWRUD_125KBPS_BLE__TX_PWRUP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_PWRUD_125KBPS_BLE__TX_PWRUP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_PWRUD_125KBPS_BLE__TX_PWRUP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_PWRUD_125KBPS_BLE__TX_PWRUP__RESET_VALUE               0x00000038U
/** @} */

/* macros for field tx_pwrdn */
/**
 * @defgroup at_lc_regs_core_tx_pwrdn_field tx_pwrdn_field
 * @brief macros for field tx_pwrdn
 * @details tx powerdn time in micro seconds
 * @{
 */
#define ATLC_PWRUD_125KBPS_BLE__TX_PWRDN__SHIFT                              16
#define ATLC_PWRUD_125KBPS_BLE__TX_PWRDN__WIDTH                               8
#define ATLC_PWRUD_125KBPS_BLE__TX_PWRDN__MASK                      0x00ff0000U
#define ATLC_PWRUD_125KBPS_BLE__TX_PWRDN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_PWRUD_125KBPS_BLE__TX_PWRDN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00ff0000U)
#define ATLC_PWRUD_125KBPS_BLE__TX_PWRDN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00ff0000U) | (((uint32_t)(src) <<\
                    16) & 0x00ff0000U)
#define ATLC_PWRUD_125KBPS_BLE__TX_PWRDN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00ff0000U)))
#define ATLC_PWRUD_125KBPS_BLE__TX_PWRDN__RESET_VALUE               0x00000002U
/** @} */
#define ATLC_PWRUD_125KBPS_BLE__TYPE                                   uint32_t
#define ATLC_PWRUD_125KBPS_BLE__READ                                0x00ffffffU
#define ATLC_PWRUD_125KBPS_BLE__WRITE                               0x00ffffffU
#define ATLC_PWRUD_125KBPS_BLE__PRESERVED                           0x00000000U
#define ATLC_PWRUD_125KBPS_BLE__RESET_VALUE                         0x0002384bU

#endif /* __ATLC_PWRUD_125KBPS_BLE_MACRO__ */

/** @} end of pwrud_125kbps_ble */

/* macros for BlueprintGlobalNameSpace::ATLC_pthdly_250kbps_154 */
/**
 * @defgroup at_lc_regs_core_pthdly_250kbps_154 pthdly_250kbps_154
 * @brief Contains register fields associated with pthdly_250kbps_154. definitions.
 * @{
 */
#ifndef __ATLC_PTHDLY_250KBPS_154_MACRO__
#define __ATLC_PTHDLY_250KBPS_154_MACRO__

/* macros for field rx */
/**
 * @defgroup at_lc_regs_core_rx_field rx_field
 * @brief macros for field rx
 * @details rx path delay start in micro seconds
 * @{
 */
#define ATLC_PTHDLY_250KBPS_154__RX__SHIFT                                    0
#define ATLC_PTHDLY_250KBPS_154__RX__WIDTH                                    8
#define ATLC_PTHDLY_250KBPS_154__RX__MASK                           0x000000ffU
#define ATLC_PTHDLY_250KBPS_154__RX__READ(src)  ((uint32_t)(src) & 0x000000ffU)
#define ATLC_PTHDLY_250KBPS_154__RX__WRITE(src) ((uint32_t)(src) & 0x000000ffU)
#define ATLC_PTHDLY_250KBPS_154__RX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_PTHDLY_250KBPS_154__RX__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_PTHDLY_250KBPS_154__RX__RESET_VALUE                    0x00000012U
/** @} */

/* macros for field tx */
/**
 * @defgroup at_lc_regs_core_tx_field tx_field
 * @brief macros for field tx
 * @details tx path delay start in micro seconds
 * @{
 */
#define ATLC_PTHDLY_250KBPS_154__TX__SHIFT                                    8
#define ATLC_PTHDLY_250KBPS_154__TX__WIDTH                                    8
#define ATLC_PTHDLY_250KBPS_154__TX__MASK                           0x0000ff00U
#define ATLC_PTHDLY_250KBPS_154__TX__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_PTHDLY_250KBPS_154__TX__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_PTHDLY_250KBPS_154__TX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_PTHDLY_250KBPS_154__TX__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_PTHDLY_250KBPS_154__TX__RESET_VALUE                    0x0000000dU
/** @} */
#define ATLC_PTHDLY_250KBPS_154__TYPE                                  uint32_t
#define ATLC_PTHDLY_250KBPS_154__READ                               0x0000ffffU
#define ATLC_PTHDLY_250KBPS_154__WRITE                              0x0000ffffU
#define ATLC_PTHDLY_250KBPS_154__PRESERVED                          0x00000000U
#define ATLC_PTHDLY_250KBPS_154__RESET_VALUE                        0x00000d12U

#endif /* __ATLC_PTHDLY_250KBPS_154_MACRO__ */

/** @} end of pthdly_250kbps_154 */

/* macros for BlueprintGlobalNameSpace::ATLC_ed_pthdly_250kbps_154 */
/**
 * @defgroup at_lc_regs_core_ed_pthdly_250kbps_154 ed_pthdly_250kbps_154
 * @brief Contains register fields associated with ed_pthdly_250kbps_154. definitions.
 * @{
 */
#ifndef __ATLC_ED_PTHDLY_250KBPS_154_MACRO__
#define __ATLC_ED_PTHDLY_250KBPS_154_MACRO__

/* macros for field rx */
/**
 * @defgroup at_lc_regs_core_rx_field rx_field
 * @brief macros for field rx
 * @details rx path delay end in micro seconds
 * @{
 */
#define ATLC_ED_PTHDLY_250KBPS_154__RX__SHIFT                                 0
#define ATLC_ED_PTHDLY_250KBPS_154__RX__WIDTH                                 8
#define ATLC_ED_PTHDLY_250KBPS_154__RX__MASK                        0x000000ffU
#define ATLC_ED_PTHDLY_250KBPS_154__RX__READ(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_ED_PTHDLY_250KBPS_154__RX__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_ED_PTHDLY_250KBPS_154__RX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_ED_PTHDLY_250KBPS_154__RX__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_ED_PTHDLY_250KBPS_154__RX__RESET_VALUE                 0x00000003U
/** @} */

/* macros for field tx */
/**
 * @defgroup at_lc_regs_core_tx_field tx_field
 * @brief macros for field tx
 * @details tx path delay end in micro seconds
 * @{
 */
#define ATLC_ED_PTHDLY_250KBPS_154__TX__SHIFT                                 8
#define ATLC_ED_PTHDLY_250KBPS_154__TX__WIDTH                                 8
#define ATLC_ED_PTHDLY_250KBPS_154__TX__MASK                        0x0000ff00U
#define ATLC_ED_PTHDLY_250KBPS_154__TX__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_ED_PTHDLY_250KBPS_154__TX__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_ED_PTHDLY_250KBPS_154__TX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_ED_PTHDLY_250KBPS_154__TX__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_ED_PTHDLY_250KBPS_154__TX__RESET_VALUE                 0x0000000eU
/** @} */
#define ATLC_ED_PTHDLY_250KBPS_154__TYPE                               uint32_t
#define ATLC_ED_PTHDLY_250KBPS_154__READ                            0x0000ffffU
#define ATLC_ED_PTHDLY_250KBPS_154__WRITE                           0x0000ffffU
#define ATLC_ED_PTHDLY_250KBPS_154__PRESERVED                       0x00000000U
#define ATLC_ED_PTHDLY_250KBPS_154__RESET_VALUE                     0x00000e03U

#endif /* __ATLC_ED_PTHDLY_250KBPS_154_MACRO__ */

/** @} end of ed_pthdly_250kbps_154 */

/* macros for BlueprintGlobalNameSpace::ATLC_pthdly_sw_154 */
/**
 * @defgroup at_lc_regs_core_pthdly_sw_154 pthdly_sw_154
 * @brief Contains register fields associated with pthdly_sw_154. definitions.
 * @{
 */
#ifndef __ATLC_PTHDLY_SW_154_MACRO__
#define __ATLC_PTHDLY_SW_154_MACRO__

/* macros for field rx_250kbps */
/**
 * @defgroup at_lc_regs_core_rx_250kbps_field rx_250kbps_field
 * @brief macros for field rx_250kbps
 * @details rx path delay to sync word in micro seconds
 * @{
 */
#define ATLC_PTHDLY_SW_154__RX_250KBPS__SHIFT                                 0
#define ATLC_PTHDLY_SW_154__RX_250KBPS__WIDTH                                 8
#define ATLC_PTHDLY_SW_154__RX_250KBPS__MASK                        0x000000ffU
#define ATLC_PTHDLY_SW_154__RX_250KBPS__READ(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PTHDLY_SW_154__RX_250KBPS__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PTHDLY_SW_154__RX_250KBPS__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_PTHDLY_SW_154__RX_250KBPS__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_PTHDLY_SW_154__RX_250KBPS__RESET_VALUE                 0x00000044U
/** @} */
#define ATLC_PTHDLY_SW_154__TYPE                                       uint32_t
#define ATLC_PTHDLY_SW_154__READ                                    0x000000ffU
#define ATLC_PTHDLY_SW_154__WRITE                                   0x000000ffU
#define ATLC_PTHDLY_SW_154__PRESERVED                               0x00000000U
#define ATLC_PTHDLY_SW_154__RESET_VALUE                             0x00000044U

#endif /* __ATLC_PTHDLY_SW_154_MACRO__ */

/** @} end of pthdly_sw_154 */

/* macros for BlueprintGlobalNameSpace::ATLC_pwrud_250kbps_154 */
/**
 * @defgroup at_lc_regs_core_pwrud_250kbps_154 pwrud_250kbps_154
 * @brief Contains register fields associated with pwrud_250kbps_154. definitions.
 * @{
 */
#ifndef __ATLC_PWRUD_250KBPS_154_MACRO__
#define __ATLC_PWRUD_250KBPS_154_MACRO__

/* macros for field rx_pwrup */
/**
 * @defgroup at_lc_regs_core_rx_pwrup_field rx_pwrup_field
 * @brief macros for field rx_pwrup
 * @details rx powerup time in micro seconds
 * @{
 */
#define ATLC_PWRUD_250KBPS_154__RX_PWRUP__SHIFT                               0
#define ATLC_PWRUD_250KBPS_154__RX_PWRUP__WIDTH                               8
#define ATLC_PWRUD_250KBPS_154__RX_PWRUP__MASK                      0x000000ffU
#define ATLC_PWRUD_250KBPS_154__RX_PWRUP__READ(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PWRUD_250KBPS_154__RX_PWRUP__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PWRUD_250KBPS_154__RX_PWRUP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_PWRUD_250KBPS_154__RX_PWRUP__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_PWRUD_250KBPS_154__RX_PWRUP__RESET_VALUE               0x0000004bU
/** @} */

/* macros for field tx_pwrup */
/**
 * @defgroup at_lc_regs_core_tx_pwrup_field tx_pwrup_field
 * @brief macros for field tx_pwrup
 * @details tx powerup time in micro seconds
 * @{
 */
#define ATLC_PWRUD_250KBPS_154__TX_PWRUP__SHIFT                               8
#define ATLC_PWRUD_250KBPS_154__TX_PWRUP__WIDTH                               8
#define ATLC_PWRUD_250KBPS_154__TX_PWRUP__MASK                      0x0000ff00U
#define ATLC_PWRUD_250KBPS_154__TX_PWRUP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_PWRUD_250KBPS_154__TX_PWRUP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_PWRUD_250KBPS_154__TX_PWRUP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_PWRUD_250KBPS_154__TX_PWRUP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_PWRUD_250KBPS_154__TX_PWRUP__RESET_VALUE               0x0000003cU
/** @} */

/* macros for field tx_pwrdn */
/**
 * @defgroup at_lc_regs_core_tx_pwrdn_field tx_pwrdn_field
 * @brief macros for field tx_pwrdn
 * @details tx powerdn time in micro seconds
 * @{
 */
#define ATLC_PWRUD_250KBPS_154__TX_PWRDN__SHIFT                              16
#define ATLC_PWRUD_250KBPS_154__TX_PWRDN__WIDTH                               8
#define ATLC_PWRUD_250KBPS_154__TX_PWRDN__MASK                      0x00ff0000U
#define ATLC_PWRUD_250KBPS_154__TX_PWRDN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_PWRUD_250KBPS_154__TX_PWRDN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00ff0000U)
#define ATLC_PWRUD_250KBPS_154__TX_PWRDN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00ff0000U) | (((uint32_t)(src) <<\
                    16) & 0x00ff0000U)
#define ATLC_PWRUD_250KBPS_154__TX_PWRDN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00ff0000U)))
#define ATLC_PWRUD_250KBPS_154__TX_PWRDN__RESET_VALUE               0x00000012U
/** @} */
#define ATLC_PWRUD_250KBPS_154__TYPE                                   uint32_t
#define ATLC_PWRUD_250KBPS_154__READ                                0x00ffffffU
#define ATLC_PWRUD_250KBPS_154__WRITE                               0x00ffffffU
#define ATLC_PWRUD_250KBPS_154__PRESERVED                           0x00000000U
#define ATLC_PWRUD_250KBPS_154__RESET_VALUE                         0x00123c4bU

#endif /* __ATLC_PWRUD_250KBPS_154_MACRO__ */

/** @} end of pwrud_250kbps_154 */

/* macros for BlueprintGlobalNameSpace::ATLC_rtx_wait */
/**
 * @defgroup at_lc_regs_core_rtx_wait rtx_wait
 * @brief _RETENTION_ definitions.
 * @{
 */
#ifndef __ATLC_RTX_WAIT_MACRO__
#define __ATLC_RTX_WAIT_MACRO__

/* macros for field tx_rx */
/**
 * @defgroup at_lc_regs_core_tx_rx_field tx_rx_field
 * @brief macros for field tx_rx
 * @details tx to rx transition wait time in micro seconds supported for flexMAC.
 * @{
 */
#define ATLC_RTX_WAIT__TX_RX__SHIFT                                           0
#define ATLC_RTX_WAIT__TX_RX__WIDTH                                           8
#define ATLC_RTX_WAIT__TX_RX__MASK                                  0x000000ffU
#define ATLC_RTX_WAIT__TX_RX__READ(src)         ((uint32_t)(src) & 0x000000ffU)
#define ATLC_RTX_WAIT__TX_RX__WRITE(src)        ((uint32_t)(src) & 0x000000ffU)
#define ATLC_RTX_WAIT__TX_RX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_RTX_WAIT__TX_RX__VERIFY(src) (!(((uint32_t)(src) & ~0x000000ffU)))
#define ATLC_RTX_WAIT__TX_RX__RESET_VALUE                           0x00000082U
/** @} */

/* macros for field rx_tx */
/**
 * @defgroup at_lc_regs_core_rx_tx_field rx_tx_field
 * @brief macros for field rx_tx
 * @details rx to tx transition wait time in micro seconds
 * @{
 */
#define ATLC_RTX_WAIT__RX_TX__SHIFT                                           8
#define ATLC_RTX_WAIT__RX_TX__WIDTH                                           8
#define ATLC_RTX_WAIT__RX_TX__MASK                                  0x0000ff00U
#define ATLC_RTX_WAIT__RX_TX__READ(src)  (((uint32_t)(src) & 0x0000ff00U) >> 8)
#define ATLC_RTX_WAIT__RX_TX__WRITE(src) (((uint32_t)(src) << 8) & 0x0000ff00U)
#define ATLC_RTX_WAIT__RX_TX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_RTX_WAIT__RX_TX__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_RTX_WAIT__RX_TX__RESET_VALUE                           0x00000082U
/** @} */
#define ATLC_RTX_WAIT__TYPE                                            uint32_t
#define ATLC_RTX_WAIT__READ                                         0x0000ffffU
#define ATLC_RTX_WAIT__WRITE                                        0x0000ffffU
#define ATLC_RTX_WAIT__PRESERVED                                    0x00000000U
#define ATLC_RTX_WAIT__RESET_VALUE                                  0x00008282U

#endif /* __ATLC_RTX_WAIT_MACRO__ */

/** @} end of rtx_wait */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_st0 */
/**
 * @defgroup at_lc_regs_core_lc_st0 lc_st0
 * @brief Contains register fields associated with lc_st0. definitions.
 * @{
 */
#ifndef __ATLC_LC_ST0_MACRO__
#define __ATLC_LC_ST0_MACRO__

/* macros for field art_cntr */
/**
 * @defgroup at_lc_regs_core_art_cntr_field art_cntr_field
 * @brief macros for field art_cntr
 * @details number of auto retransmit supported for flexMAC.
 * @{
 */
#define ATLC_LC_ST0__ART_CNTR__SHIFT                                          0
#define ATLC_LC_ST0__ART_CNTR__WIDTH                                          8
#define ATLC_LC_ST0__ART_CNTR__MASK                                 0x000000ffU
#define ATLC_LC_ST0__ART_CNTR__READ(src)        ((uint32_t)(src) & 0x000000ffU)
#define ATLC_LC_ST0__ART_CNTR__RESET_VALUE                          0x00000000U
/** @} */

/* macros for field artmx_cntr */
/**
 * @defgroup at_lc_regs_core_artmx_cntr_field artmx_cntr_field
 * @brief macros for field artmx_cntr
 * @details number of times max auto retransmit is exceeded i.e., packet loss supported for flexMAC.
 * @{
 */
#define ATLC_LC_ST0__ARTMX_CNTR__SHIFT                                        8
#define ATLC_LC_ST0__ARTMX_CNTR__WIDTH                                        8
#define ATLC_LC_ST0__ARTMX_CNTR__MASK                               0x0000ff00U
#define ATLC_LC_ST0__ARTMX_CNTR__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_LC_ST0__ARTMX_CNTR__RESET_VALUE                        0x00000000U
/** @} */

/* macros for field crc_err_cntr */
/**
 * @defgroup at_lc_regs_core_crc_err_cntr_field crc_err_cntr_field
 * @brief macros for field crc_err_cntr
 * @details number of crc error packets Counter saturates to max value.
 * @{
 */
#define ATLC_LC_ST0__CRC_ERR_CNTR__SHIFT                                     16
#define ATLC_LC_ST0__CRC_ERR_CNTR__WIDTH                                      8
#define ATLC_LC_ST0__CRC_ERR_CNTR__MASK                             0x00ff0000U
#define ATLC_LC_ST0__CRC_ERR_CNTR__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_LC_ST0__CRC_ERR_CNTR__RESET_VALUE                      0x00000000U
/** @} */
#define ATLC_LC_ST0__TYPE                                              uint32_t
#define ATLC_LC_ST0__READ                                           0x00ffffffU
#define ATLC_LC_ST0__PRESERVED                                      0x00000000U
#define ATLC_LC_ST0__RESET_VALUE                                    0x00000000U

#endif /* __ATLC_LC_ST0_MACRO__ */

/** @} end of lc_st0 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_st0_clr */
/**
 * @defgroup at_lc_regs_core_lc_st0_clr lc_st0_clr
 * @brief Contains register fields associated with lc_st0_clr. definitions.
 * @{
 */
#ifndef __ATLC_LC_ST0_CLR_MACRO__
#define __ATLC_LC_ST0_CLR_MACRO__

/* macros for field art_cntr */
/**
 * @defgroup at_lc_regs_core_art_cntr_field art_cntr_field
 * @brief macros for field art_cntr
 * @details write 1 to clear
 * @{
 */
#define ATLC_LC_ST0_CLR__ART_CNTR__SHIFT                                      0
#define ATLC_LC_ST0_CLR__ART_CNTR__WIDTH                                      1
#define ATLC_LC_ST0_CLR__ART_CNTR__MASK                             0x00000001U
#define ATLC_LC_ST0_CLR__ART_CNTR__READ(src)    ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_ST0_CLR__ART_CNTR__WRITE(src)   ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_ST0_CLR__ART_CNTR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_LC_ST0_CLR__ART_CNTR__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_LC_ST0_CLR__ART_CNTR__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_ST0_CLR__ART_CNTR__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_ST0_CLR__ART_CNTR__RESET_VALUE                      0x00000000U
/** @} */

/* macros for field artmx_cntr */
/**
 * @defgroup at_lc_regs_core_artmx_cntr_field artmx_cntr_field
 * @brief macros for field artmx_cntr
 * @details write 1 to clear
 * @{
 */
#define ATLC_LC_ST0_CLR__ARTMX_CNTR__SHIFT                                    1
#define ATLC_LC_ST0_CLR__ARTMX_CNTR__WIDTH                                    1
#define ATLC_LC_ST0_CLR__ARTMX_CNTR__MASK                           0x00000002U
#define ATLC_LC_ST0_CLR__ARTMX_CNTR__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000002U) >> 1)
#define ATLC_LC_ST0_CLR__ARTMX_CNTR__WRITE(src) \
                    (((uint32_t)(src)\
                    << 1) & 0x00000002U)
#define ATLC_LC_ST0_CLR__ARTMX_CNTR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | (((uint32_t)(src) <<\
                    1) & 0x00000002U)
#define ATLC_LC_ST0_CLR__ARTMX_CNTR__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 1) & ~0x00000002U)))
#define ATLC_LC_ST0_CLR__ARTMX_CNTR__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(1) << 1)
#define ATLC_LC_ST0_CLR__ARTMX_CNTR__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(0) << 1)
#define ATLC_LC_ST0_CLR__ARTMX_CNTR__RESET_VALUE                    0x00000000U
/** @} */

/* macros for field crc_err_cntr */
/**
 * @defgroup at_lc_regs_core_crc_err_cntr_field crc_err_cntr_field
 * @brief macros for field crc_err_cntr
 * @details write 1 to clear
 * @{
 */
#define ATLC_LC_ST0_CLR__CRC_ERR_CNTR__SHIFT                                  2
#define ATLC_LC_ST0_CLR__CRC_ERR_CNTR__WIDTH                                  1
#define ATLC_LC_ST0_CLR__CRC_ERR_CNTR__MASK                         0x00000004U
#define ATLC_LC_ST0_CLR__CRC_ERR_CNTR__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000004U) >> 2)
#define ATLC_LC_ST0_CLR__CRC_ERR_CNTR__WRITE(src) \
                    (((uint32_t)(src)\
                    << 2) & 0x00000004U)
#define ATLC_LC_ST0_CLR__CRC_ERR_CNTR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | (((uint32_t)(src) <<\
                    2) & 0x00000004U)
#define ATLC_LC_ST0_CLR__CRC_ERR_CNTR__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 2) & ~0x00000004U)))
#define ATLC_LC_ST0_CLR__CRC_ERR_CNTR__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(1) << 2)
#define ATLC_LC_ST0_CLR__CRC_ERR_CNTR__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(0) << 2)
#define ATLC_LC_ST0_CLR__CRC_ERR_CNTR__RESET_VALUE                  0x00000000U
/** @} */
#define ATLC_LC_ST0_CLR__TYPE                                          uint32_t
#define ATLC_LC_ST0_CLR__READ                                       0x00000007U
#define ATLC_LC_ST0_CLR__WRITE                                      0x00000007U
#define ATLC_LC_ST0_CLR__PRESERVED                                  0x00000000U
#define ATLC_LC_ST0_CLR__RESET_VALUE                                0x00000000U

#endif /* __ATLC_LC_ST0_CLR_MACRO__ */

/** @} end of lc_st0_clr */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_st2 */
/**
 * @defgroup at_lc_regs_core_lc_st2 lc_st2
 * @brief Contains register fields associated with lc_st2. definitions.
 * @{
 */
#ifndef __ATLC_LC_ST2_MACRO__
#define __ATLC_LC_ST2_MACRO__

/* macros for field fr_us_cntr */
/**
 * @defgroup at_lc_regs_core_fr_us_cntr_field fr_us_cntr_field
 * @brief macros for field fr_us_cntr
 * @details free running micro second counter
 * @{
 */
#define ATLC_LC_ST2__FR_US_CNTR__SHIFT                                        0
#define ATLC_LC_ST2__FR_US_CNTR__WIDTH                                       32
#define ATLC_LC_ST2__FR_US_CNTR__MASK                               0xffffffffU
#define ATLC_LC_ST2__FR_US_CNTR__READ(src)      ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_ST2__FR_US_CNTR__RESET_VALUE                        0x00000000U
/** @} */
#define ATLC_LC_ST2__TYPE                                              uint32_t
#define ATLC_LC_ST2__READ                                           0xffffffffU
#define ATLC_LC_ST2__PRESERVED                                      0x00000000U
#define ATLC_LC_ST2__RESET_VALUE                                    0x00000000U

#endif /* __ATLC_LC_ST2_MACRO__ */

/** @} end of lc_st2 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_st3 */
/**
 * @defgroup at_lc_regs_core_lc_st3 lc_st3
 * @brief Contains register fields associated with lc_st3. definitions.
 * @{
 */
#ifndef __ATLC_LC_ST3_MACRO__
#define __ATLC_LC_ST3_MACRO__

/* macros for field fr_320us_cntr */
/**
 * @defgroup at_lc_regs_core_fr_320us_cntr_field fr_320us_cntr_field
 * @brief macros for field fr_320us_cntr
 * @details free running 320 micro second counter
 * @{
 */
#define ATLC_LC_ST3__FR_320US_CNTR__SHIFT                                     0
#define ATLC_LC_ST3__FR_320US_CNTR__WIDTH                                    32
#define ATLC_LC_ST3__FR_320US_CNTR__MASK                            0xffffffffU
#define ATLC_LC_ST3__FR_320US_CNTR__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_ST3__FR_320US_CNTR__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_LC_ST3__TYPE                                              uint32_t
#define ATLC_LC_ST3__READ                                           0xffffffffU
#define ATLC_LC_ST3__PRESERVED                                      0x00000000U
#define ATLC_LC_ST3__RESET_VALUE                                    0x00000000U

#endif /* __ATLC_LC_ST3_MACRO__ */

/** @} end of lc_st3 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_st3_clr */
/**
 * @defgroup at_lc_regs_core_lc_st3_clr lc_st3_clr
 * @brief Contains register fields associated with lc_st3_clr. definitions.
 * @{
 */
#ifndef __ATLC_LC_ST3_CLR_MACRO__
#define __ATLC_LC_ST3_CLR_MACRO__

/* macros for field fr_320us_cntr */
/**
 * @defgroup at_lc_regs_core_fr_320us_cntr_field fr_320us_cntr_field
 * @brief macros for field fr_320us_cntr
 * @details write 1 to clear
 * @{
 */
#define ATLC_LC_ST3_CLR__FR_320US_CNTR__SHIFT                                 0
#define ATLC_LC_ST3_CLR__FR_320US_CNTR__WIDTH                                 1
#define ATLC_LC_ST3_CLR__FR_320US_CNTR__MASK                        0x00000001U
#define ATLC_LC_ST3_CLR__FR_320US_CNTR__READ(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_LC_ST3_CLR__FR_320US_CNTR__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_LC_ST3_CLR__FR_320US_CNTR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_LC_ST3_CLR__FR_320US_CNTR__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_LC_ST3_CLR__FR_320US_CNTR__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_ST3_CLR__FR_320US_CNTR__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_ST3_CLR__FR_320US_CNTR__RESET_VALUE                 0x00000000U
/** @} */
#define ATLC_LC_ST3_CLR__TYPE                                          uint32_t
#define ATLC_LC_ST3_CLR__READ                                       0x00000001U
#define ATLC_LC_ST3_CLR__WRITE                                      0x00000001U
#define ATLC_LC_ST3_CLR__PRESERVED                                  0x00000000U
#define ATLC_LC_ST3_CLR__RESET_VALUE                                0x00000000U

#endif /* __ATLC_LC_ST3_CLR_MACRO__ */

/** @} end of lc_st3_clr */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_st4 */
/**
 * @defgroup at_lc_regs_core_lc_st4 lc_st4
 * @brief Contains register fields associated with lc_st4. definitions.
 * @{
 */
#ifndef __ATLC_LC_ST4_MACRO__
#define __ATLC_LC_ST4_MACRO__

/* macros for field flw_st */
/**
 * @defgroup at_lc_regs_core_flw_st_field flw_st_field
 * @brief macros for field flw_st
 * @details event flow state machine state
 * @{
 */
#define ATLC_LC_ST4__FLW_ST__SHIFT                                            0
#define ATLC_LC_ST4__FLW_ST__WIDTH                                            8
#define ATLC_LC_ST4__FLW_ST__MASK                                   0x000000ffU
#define ATLC_LC_ST4__FLW_ST__READ(src)          ((uint32_t)(src) & 0x000000ffU)
#define ATLC_LC_ST4__FLW_ST__RESET_VALUE                            0x00000000U
/** @} */

/* macros for field pkt_st */
/**
 * @defgroup at_lc_regs_core_pkt_st_field pkt_st_field
 * @brief macros for field pkt_st
 * @details packet parser state machine state
 * @{
 */
#define ATLC_LC_ST4__PKT_ST__SHIFT                                            8
#define ATLC_LC_ST4__PKT_ST__WIDTH                                            8
#define ATLC_LC_ST4__PKT_ST__MASK                                   0x0000ff00U
#define ATLC_LC_ST4__PKT_ST__READ(src)   (((uint32_t)(src) & 0x0000ff00U) >> 8)
#define ATLC_LC_ST4__PKT_ST__RESET_VALUE                            0x00000000U
/** @} */
#define ATLC_LC_ST4__TYPE                                              uint32_t
#define ATLC_LC_ST4__READ                                           0x0000ffffU
#define ATLC_LC_ST4__PRESERVED                                      0x00000000U
#define ATLC_LC_ST4__RESET_VALUE                                    0x00000000U

#endif /* __ATLC_LC_ST4_MACRO__ */

/** @} end of lc_st4 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_st5 */
/**
 * @defgroup at_lc_regs_core_lc_st5 lc_st5
 * @brief Contains register fields associated with lc_st5. definitions.
 * @{
 */
#ifndef __ATLC_LC_ST5_MACRO__
#define __ATLC_LC_ST5_MACRO__

/* macros for field intr_us_cntr */
/**
 * @defgroup at_lc_regs_core_intr_us_cntr_field intr_us_cntr_field
 * @brief macros for field intr_us_cntr
 * @details start counting from 0 when lc_frc_irq interrupt triggers (in us)
 * @{
 */
#define ATLC_LC_ST5__INTR_US_CNTR__SHIFT                                      0
#define ATLC_LC_ST5__INTR_US_CNTR__WIDTH                                     16
#define ATLC_LC_ST5__INTR_US_CNTR__MASK                             0x0000ffffU
#define ATLC_LC_ST5__INTR_US_CNTR__READ(src)    ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_LC_ST5__INTR_US_CNTR__RESET_VALUE                      0x00000000U
/** @} */

/* macros for field intr_frc_us_cntr */
/**
 * @defgroup at_lc_regs_core_intr_frc_us_cntr_field intr_frc_us_cntr_field
 * @brief macros for field intr_frc_us_cntr
 * @details start counting from 0 when lc_irq interrupt triggers (in us)
 * @{
 */
#define ATLC_LC_ST5__INTR_FRC_US_CNTR__SHIFT                                 16
#define ATLC_LC_ST5__INTR_FRC_US_CNTR__WIDTH                                 16
#define ATLC_LC_ST5__INTR_FRC_US_CNTR__MASK                         0xffff0000U
#define ATLC_LC_ST5__INTR_FRC_US_CNTR__READ(src) \
                    (((uint32_t)(src)\
                    & 0xffff0000U) >> 16)
#define ATLC_LC_ST5__INTR_FRC_US_CNTR__RESET_VALUE                  0x00000000U
/** @} */
#define ATLC_LC_ST5__TYPE                                              uint32_t
#define ATLC_LC_ST5__READ                                           0xffffffffU
#define ATLC_LC_ST5__PRESERVED                                      0x00000000U
#define ATLC_LC_ST5__RESET_VALUE                                    0x00000000U

#endif /* __ATLC_LC_ST5_MACRO__ */

/** @} end of lc_st5 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_st6 */
/**
 * @defgroup at_lc_regs_core_lc_st6 lc_st6
 * @brief Contains register fields associated with lc_st6. definitions.
 * @{
 */
#ifndef __ATLC_LC_ST6_MACRO__
#define __ATLC_LC_ST6_MACRO__

/* macros for field rssi_inst */
/**
 * @defgroup at_lc_regs_core_rssi_inst_field rssi_inst_field
 * @brief macros for field rssi_inst
 * @details instantensuos RSSI
 * @{
 */
#define ATLC_LC_ST6__RSSI_INST__SHIFT                                         0
#define ATLC_LC_ST6__RSSI_INST__WIDTH                                         8
#define ATLC_LC_ST6__RSSI_INST__MASK                                0x000000ffU
#define ATLC_LC_ST6__RSSI_INST__READ(src)       ((uint32_t)(src) & 0x000000ffU)
#define ATLC_LC_ST6__RSSI_INST__RESET_VALUE                         0x00000000U
/** @} */

/* macros for field rssi_inst_vld */
/**
 * @defgroup at_lc_regs_core_rssi_inst_vld_field rssi_inst_vld_field
 * @brief macros for field rssi_inst_vld
 * @details instantensuos RSSI valid
 * @{
 */
#define ATLC_LC_ST6__RSSI_INST_VLD__SHIFT                                     8
#define ATLC_LC_ST6__RSSI_INST_VLD__WIDTH                                     1
#define ATLC_LC_ST6__RSSI_INST_VLD__MASK                            0x00000100U
#define ATLC_LC_ST6__RSSI_INST_VLD__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000100U) >> 8)
#define ATLC_LC_ST6__RSSI_INST_VLD__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | ((uint32_t)(1) << 8)
#define ATLC_LC_ST6__RSSI_INST_VLD__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | ((uint32_t)(0) << 8)
#define ATLC_LC_ST6__RSSI_INST_VLD__RESET_VALUE                     0x00000000U
/** @} */

/* macros for field rssi_avg */
/**
 * @defgroup at_lc_regs_core_rssi_avg_field rssi_avg_field
 * @brief macros for field rssi_avg
 * @details average RSSI
 * @{
 */
#define ATLC_LC_ST6__RSSI_AVG__SHIFT                                         16
#define ATLC_LC_ST6__RSSI_AVG__WIDTH                                          8
#define ATLC_LC_ST6__RSSI_AVG__MASK                                 0x00ff0000U
#define ATLC_LC_ST6__RSSI_AVG__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_LC_ST6__RSSI_AVG__RESET_VALUE                          0x00000000U
/** @} */

/* macros for field rssi_avg_vld */
/**
 * @defgroup at_lc_regs_core_rssi_avg_vld_field rssi_avg_vld_field
 * @brief macros for field rssi_avg_vld
 * @details average RSSI valid
 * @{
 */
#define ATLC_LC_ST6__RSSI_AVG_VLD__SHIFT                                     24
#define ATLC_LC_ST6__RSSI_AVG_VLD__WIDTH                                      1
#define ATLC_LC_ST6__RSSI_AVG_VLD__MASK                             0x01000000U
#define ATLC_LC_ST6__RSSI_AVG_VLD__READ(src) \
                    (((uint32_t)(src)\
                    & 0x01000000U) >> 24)
#define ATLC_LC_ST6__RSSI_AVG_VLD__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x01000000U) | ((uint32_t)(1) << 24)
#define ATLC_LC_ST6__RSSI_AVG_VLD__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x01000000U) | ((uint32_t)(0) << 24)
#define ATLC_LC_ST6__RSSI_AVG_VLD__RESET_VALUE                      0x00000000U
/** @} */
#define ATLC_LC_ST6__TYPE                                              uint32_t
#define ATLC_LC_ST6__READ                                           0x01ff01ffU
#define ATLC_LC_ST6__PRESERVED                                      0x00000000U
#define ATLC_LC_ST6__RESET_VALUE                                    0x00000000U

#endif /* __ATLC_LC_ST6_MACRO__ */

/** @} end of lc_st6 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_st7 */
/**
 * @defgroup at_lc_regs_core_lc_st7 lc_st7
 * @brief Contains register fields associated with lc_st7. definitions.
 * @{
 */
#ifndef __ATLC_LC_ST7_MACRO__
#define __ATLC_LC_ST7_MACRO__

/* macros for field crc */
/**
 * @defgroup at_lc_regs_core_crc_field crc_field
 * @brief macros for field crc
 * @details crc calculated of latest tx or rx packet
 * @{
 */
#define ATLC_LC_ST7__CRC__SHIFT                                               0
#define ATLC_LC_ST7__CRC__WIDTH                                              32
#define ATLC_LC_ST7__CRC__MASK                                      0xffffffffU
#define ATLC_LC_ST7__CRC__READ(src)             ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_ST7__CRC__RESET_VALUE                               0x00000000U
/** @} */
#define ATLC_LC_ST7__TYPE                                              uint32_t
#define ATLC_LC_ST7__READ                                           0xffffffffU
#define ATLC_LC_ST7__PRESERVED                                      0x00000000U
#define ATLC_LC_ST7__RESET_VALUE                                    0x00000000U

#endif /* __ATLC_LC_ST7_MACRO__ */

/** @} end of lc_st7 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_st8 */
/**
 * @defgroup at_lc_regs_core_lc_st8 lc_st8
 * @brief Contains register fields associated with lc_st8. definitions.
 * @{
 */
#ifndef __ATLC_LC_ST8_MACRO__
#define __ATLC_LC_ST8_MACRO__

/* macros for field crc_rx */
/**
 * @defgroup at_lc_regs_core_crc_rx_field crc_rx_field
 * @brief macros for field crc_rx
 * @details crc of latest rx packet
 * @{
 */
#define ATLC_LC_ST8__CRC_RX__SHIFT                                            0
#define ATLC_LC_ST8__CRC_RX__WIDTH                                           32
#define ATLC_LC_ST8__CRC_RX__MASK                                   0xffffffffU
#define ATLC_LC_ST8__CRC_RX__READ(src)          ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_ST8__CRC_RX__RESET_VALUE                            0x00000000U
/** @} */
#define ATLC_LC_ST8__TYPE                                              uint32_t
#define ATLC_LC_ST8__READ                                           0xffffffffU
#define ATLC_LC_ST8__PRESERVED                                      0x00000000U
#define ATLC_LC_ST8__RESET_VALUE                                    0x00000000U

#endif /* __ATLC_LC_ST8_MACRO__ */

/** @} end of lc_st8 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_st9 */
/**
 * @defgroup at_lc_regs_core_lc_st9 lc_st9
 * @brief Contains register fields associated with lc_st9. definitions.
 * @{
 */
#ifndef __ATLC_LC_ST9_MACRO__
#define __ATLC_LC_ST9_MACRO__

/* macros for field dma_pkt_st */
/**
 * @defgroup at_lc_regs_core_dma_pkt_st_field dma_pkt_st_field
 * @brief macros for field dma_pkt_st
 * @details dma packet state machine state
 * @{
 */
#define ATLC_LC_ST9__DMA_PKT_ST__SHIFT                                        0
#define ATLC_LC_ST9__DMA_PKT_ST__WIDTH                                        8
#define ATLC_LC_ST9__DMA_PKT_ST__MASK                               0x000000ffU
#define ATLC_LC_ST9__DMA_PKT_ST__READ(src)      ((uint32_t)(src) & 0x000000ffU)
#define ATLC_LC_ST9__DMA_PKT_ST__RESET_VALUE                        0x00000000U
/** @} */

/* macros for field crypt_ctrl_st */
/**
 * @defgroup at_lc_regs_core_crypt_ctrl_st_field crypt_ctrl_st_field
 * @brief macros for field crypt_ctrl_st
 * @details crypto control state machine state
 * @{
 */
#define ATLC_LC_ST9__CRYPT_CTRL_ST__SHIFT                                     8
#define ATLC_LC_ST9__CRYPT_CTRL_ST__WIDTH                                     8
#define ATLC_LC_ST9__CRYPT_CTRL_ST__MASK                            0x0000ff00U
#define ATLC_LC_ST9__CRYPT_CTRL_ST__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_LC_ST9__CRYPT_CTRL_ST__RESET_VALUE                     0x00000000U
/** @} */

/* macros for field crypt_st */
/**
 * @defgroup at_lc_regs_core_crypt_st_field crypt_st_field
 * @brief macros for field crypt_st
 * @details crypto state machine state
 * @{
 */
#define ATLC_LC_ST9__CRYPT_ST__SHIFT                                         16
#define ATLC_LC_ST9__CRYPT_ST__WIDTH                                          8
#define ATLC_LC_ST9__CRYPT_ST__MASK                                 0x00ff0000U
#define ATLC_LC_ST9__CRYPT_ST__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_LC_ST9__CRYPT_ST__RESET_VALUE                          0x00000000U
/** @} */
#define ATLC_LC_ST9__TYPE                                              uint32_t
#define ATLC_LC_ST9__READ                                           0x00ffffffU
#define ATLC_LC_ST9__PRESERVED                                      0x00000000U
#define ATLC_LC_ST9__RESET_VALUE                                    0x00000000U

#endif /* __ATLC_LC_ST9_MACRO__ */

/** @} end of lc_st9 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_secu_st0 */
/**
 * @defgroup at_lc_regs_core_lc_secu_st0 lc_secu_st0
 * @brief Contains register fields associated with lc_secu_st0. definitions.
 * @{
 */
#ifndef __ATLC_LC_SECU_ST0_MACRO__
#define __ATLC_LC_SECU_ST0_MACRO__

/* macros for field secure_desecure_acc_st */
/**
 * @defgroup at_lc_regs_core_secure_desecure_acc_st_field secure_desecure_acc_st_field
 * @brief macros for field secure_desecure_acc_st
 * @details accelerator busy state , 1'b1 indicate busy
 * @{
 */
#define ATLC_LC_SECU_ST0__SECURE_DESECURE_ACC_ST__SHIFT                       0
#define ATLC_LC_SECU_ST0__SECURE_DESECURE_ACC_ST__WIDTH                       1
#define ATLC_LC_SECU_ST0__SECURE_DESECURE_ACC_ST__MASK              0x00000001U
#define ATLC_LC_SECU_ST0__SECURE_DESECURE_ACC_ST__READ(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_LC_SECU_ST0__SECURE_DESECURE_ACC_ST__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_SECU_ST0__SECURE_DESECURE_ACC_ST__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_SECU_ST0__SECURE_DESECURE_ACC_ST__RESET_VALUE       0x00000000U
/** @} */
#define ATLC_LC_SECU_ST0__TYPE                                         uint32_t
#define ATLC_LC_SECU_ST0__READ                                      0x00000001U
#define ATLC_LC_SECU_ST0__PRESERVED                                 0x00000000U
#define ATLC_LC_SECU_ST0__RESET_VALUE                               0x00000000U

#endif /* __ATLC_LC_SECU_ST0_MACRO__ */

/** @} end of lc_secu_st0 */

/* macros for BlueprintGlobalNameSpace::ATLC_tx_st */
/**
 * @defgroup at_lc_regs_core_tx_st tx_st
 * @brief Contains register fields associated with tx_st. definitions.
 * @{
 */
#ifndef __ATLC_TX_ST_MACRO__
#define __ATLC_TX_ST_MACRO__

/* macros for field tm_stmp */
/**
 * @defgroup at_lc_regs_core_tm_stmp_field tm_stmp_field
 * @brief macros for field tm_stmp
 * @details tx start packet (1st bit of preamble) time stamp in micro seconds supported for all protocols.
 * @{
 */
#define ATLC_TX_ST__TM_STMP__SHIFT                                            0
#define ATLC_TX_ST__TM_STMP__WIDTH                                           32
#define ATLC_TX_ST__TM_STMP__MASK                                   0xffffffffU
#define ATLC_TX_ST__TM_STMP__READ(src)          ((uint32_t)(src) & 0xffffffffU)
#define ATLC_TX_ST__TM_STMP__RESET_VALUE                            0x00000000U
/** @} */
#define ATLC_TX_ST__TYPE                                               uint32_t
#define ATLC_TX_ST__READ                                            0xffffffffU
#define ATLC_TX_ST__PRESERVED                                       0x00000000U
#define ATLC_TX_ST__RESET_VALUE                                     0x00000000U

#endif /* __ATLC_TX_ST_MACRO__ */

/** @} end of tx_st */

/* macros for BlueprintGlobalNameSpace::ATLC_tx_ed */
/**
 * @defgroup at_lc_regs_core_tx_ed tx_ed
 * @brief Contains register fields associated with tx_ed. definitions.
 * @{
 */
#ifndef __ATLC_TX_ED_MACRO__
#define __ATLC_TX_ED_MACRO__

/* macros for field tm_stmp */
/**
 * @defgroup at_lc_regs_core_tm_stmp_field tm_stmp_field
 * @brief macros for field tm_stmp
 * @details tx end packet (last bit of crc) time stamp in micro seconds supported for all protocols.
 * @{
 */
#define ATLC_TX_ED__TM_STMP__SHIFT                                            0
#define ATLC_TX_ED__TM_STMP__WIDTH                                           32
#define ATLC_TX_ED__TM_STMP__MASK                                   0xffffffffU
#define ATLC_TX_ED__TM_STMP__READ(src)          ((uint32_t)(src) & 0xffffffffU)
#define ATLC_TX_ED__TM_STMP__RESET_VALUE                            0x00000000U
/** @} */
#define ATLC_TX_ED__TYPE                                               uint32_t
#define ATLC_TX_ED__READ                                            0xffffffffU
#define ATLC_TX_ED__PRESERVED                                       0x00000000U
#define ATLC_TX_ED__RESET_VALUE                                     0x00000000U

#endif /* __ATLC_TX_ED_MACRO__ */

/** @} end of tx_ed */

/* macros for BlueprintGlobalNameSpace::ATLC_rx_st */
/**
 * @defgroup at_lc_regs_core_rx_st rx_st
 * @brief Contains register fields associated with rx_st. definitions.
 * @{
 */
#ifndef __ATLC_RX_ST_MACRO__
#define __ATLC_RX_ST_MACRO__

/* macros for field tm_stmp */
/**
 * @defgroup at_lc_regs_core_tm_stmp_field tm_stmp_field
 * @brief macros for field tm_stmp
 * @details rx start packet (1st bit after access address found) time stamp in micro seconds supported for all protocols.
 * @{
 */
#define ATLC_RX_ST__TM_STMP__SHIFT                                            0
#define ATLC_RX_ST__TM_STMP__WIDTH                                           32
#define ATLC_RX_ST__TM_STMP__MASK                                   0xffffffffU
#define ATLC_RX_ST__TM_STMP__READ(src)          ((uint32_t)(src) & 0xffffffffU)
#define ATLC_RX_ST__TM_STMP__RESET_VALUE                            0x00000000U
/** @} */
#define ATLC_RX_ST__TYPE                                               uint32_t
#define ATLC_RX_ST__READ                                            0xffffffffU
#define ATLC_RX_ST__PRESERVED                                       0x00000000U
#define ATLC_RX_ST__RESET_VALUE                                     0x00000000U

#endif /* __ATLC_RX_ST_MACRO__ */

/** @} end of rx_st */

/* macros for BlueprintGlobalNameSpace::ATLC_rx_prmbl_st */
/**
 * @defgroup at_lc_regs_core_rx_prmbl_st rx_prmbl_st
 * @brief Contains register fields associated with rx_prmbl_st. definitions.
 * @{
 */
#ifndef __ATLC_RX_PRMBL_ST_MACRO__
#define __ATLC_RX_PRMBL_ST_MACRO__

/* macros for field tm_stmp */
/**
 * @defgroup at_lc_regs_core_tm_stmp_field tm_stmp_field
 * @brief macros for field tm_stmp
 * @details rx start preamble time stamp in micro seconds supported for BLE and 15.4.
 * @{
 */
#define ATLC_RX_PRMBL_ST__TM_STMP__SHIFT                                      0
#define ATLC_RX_PRMBL_ST__TM_STMP__WIDTH                                     32
#define ATLC_RX_PRMBL_ST__TM_STMP__MASK                             0xffffffffU
#define ATLC_RX_PRMBL_ST__TM_STMP__READ(src)    ((uint32_t)(src) & 0xffffffffU)
#define ATLC_RX_PRMBL_ST__TM_STMP__RESET_VALUE                      0x00000000U
/** @} */
#define ATLC_RX_PRMBL_ST__TYPE                                         uint32_t
#define ATLC_RX_PRMBL_ST__READ                                      0xffffffffU
#define ATLC_RX_PRMBL_ST__PRESERVED                                 0x00000000U
#define ATLC_RX_PRMBL_ST__RESET_VALUE                               0x00000000U

#endif /* __ATLC_RX_PRMBL_ST_MACRO__ */

/** @} end of rx_prmbl_st */

/* macros for BlueprintGlobalNameSpace::ATLC_rx_ed */
/**
 * @defgroup at_lc_regs_core_rx_ed rx_ed
 * @brief Contains register fields associated with rx_ed. definitions.
 * @{
 */
#ifndef __ATLC_RX_ED_MACRO__
#define __ATLC_RX_ED_MACRO__

/* macros for field tm_stmp */
/**
 * @defgroup at_lc_regs_core_tm_stmp_field tm_stmp_field
 * @brief macros for field tm_stmp
 * @details rx end packet (last bit of crc) time stamp in micro seconds supported for all protocols.
 * @{
 */
#define ATLC_RX_ED__TM_STMP__SHIFT                                            0
#define ATLC_RX_ED__TM_STMP__WIDTH                                           32
#define ATLC_RX_ED__TM_STMP__MASK                                   0xffffffffU
#define ATLC_RX_ED__TM_STMP__READ(src)          ((uint32_t)(src) & 0xffffffffU)
#define ATLC_RX_ED__TM_STMP__RESET_VALUE                            0x00000000U
/** @} */
#define ATLC_RX_ED__TYPE                                               uint32_t
#define ATLC_RX_ED__READ                                            0xffffffffU
#define ATLC_RX_ED__PRESERVED                                       0x00000000U
#define ATLC_RX_ED__RESET_VALUE                                     0x00000000U

#endif /* __ATLC_RX_ED_MACRO__ */

/** @} end of rx_ed */

/* macros for BlueprintGlobalNameSpace::ATLC_frc_ctrl */
/**
 * @defgroup at_lc_regs_core_frc_ctrl frc_ctrl
 * @brief _RETENTION_ definitions.
 * @{
 */
#ifndef __ATLC_FRC_CTRL_MACRO__
#define __ATLC_FRC_CTRL_MACRO__

/* macros for field to0_arm */
/**
 * @defgroup at_lc_regs_core_to0_arm_field to0_arm_field
 * @brief macros for field to0_arm
 * @details arm time out 0 comparator.
 * @{
 */
#define ATLC_FRC_CTRL__TO0_ARM__SHIFT                                         0
#define ATLC_FRC_CTRL__TO0_ARM__WIDTH                                         1
#define ATLC_FRC_CTRL__TO0_ARM__MASK                                0x00000001U
#define ATLC_FRC_CTRL__TO0_ARM__READ(src)       ((uint32_t)(src) & 0x00000001U)
#define ATLC_FRC_CTRL__TO0_ARM__WRITE(src)      ((uint32_t)(src) & 0x00000001U)
#define ATLC_FRC_CTRL__TO0_ARM__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_FRC_CTRL__TO0_ARM__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_FRC_CTRL__TO0_ARM__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_FRC_CTRL__TO0_ARM__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_FRC_CTRL__TO0_ARM__RESET_VALUE                         0x00000000U
/** @} */

/* macros for field to1_arm */
/**
 * @defgroup at_lc_regs_core_to1_arm_field to1_arm_field
 * @brief macros for field to1_arm
 * @details arm time out 1 comparator.
 * @{
 */
#define ATLC_FRC_CTRL__TO1_ARM__SHIFT                                         1
#define ATLC_FRC_CTRL__TO1_ARM__WIDTH                                         1
#define ATLC_FRC_CTRL__TO1_ARM__MASK                                0x00000002U
#define ATLC_FRC_CTRL__TO1_ARM__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000002U) >> 1)
#define ATLC_FRC_CTRL__TO1_ARM__WRITE(src) \
                    (((uint32_t)(src)\
                    << 1) & 0x00000002U)
#define ATLC_FRC_CTRL__TO1_ARM__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | (((uint32_t)(src) <<\
                    1) & 0x00000002U)
#define ATLC_FRC_CTRL__TO1_ARM__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 1) & ~0x00000002U)))
#define ATLC_FRC_CTRL__TO1_ARM__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(1) << 1)
#define ATLC_FRC_CTRL__TO1_ARM__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(0) << 1)
#define ATLC_FRC_CTRL__TO1_ARM__RESET_VALUE                         0x00000000U
/** @} */

/* macros for field to2_arm */
/**
 * @defgroup at_lc_regs_core_to2_arm_field to2_arm_field
 * @brief macros for field to2_arm
 * @details arm time out 2 comparator.
 * @{
 */
#define ATLC_FRC_CTRL__TO2_ARM__SHIFT                                         2
#define ATLC_FRC_CTRL__TO2_ARM__WIDTH                                         1
#define ATLC_FRC_CTRL__TO2_ARM__MASK                                0x00000004U
#define ATLC_FRC_CTRL__TO2_ARM__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000004U) >> 2)
#define ATLC_FRC_CTRL__TO2_ARM__WRITE(src) \
                    (((uint32_t)(src)\
                    << 2) & 0x00000004U)
#define ATLC_FRC_CTRL__TO2_ARM__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | (((uint32_t)(src) <<\
                    2) & 0x00000004U)
#define ATLC_FRC_CTRL__TO2_ARM__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 2) & ~0x00000004U)))
#define ATLC_FRC_CTRL__TO2_ARM__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(1) << 2)
#define ATLC_FRC_CTRL__TO2_ARM__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(0) << 2)
#define ATLC_FRC_CTRL__TO2_ARM__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_FRC_CTRL__TYPE                                            uint32_t
#define ATLC_FRC_CTRL__READ                                         0x00000007U
#define ATLC_FRC_CTRL__WRITE                                        0x00000007U
#define ATLC_FRC_CTRL__PRESERVED                                    0x00000000U
#define ATLC_FRC_CTRL__RESET_VALUE                                  0x00000000U

#endif /* __ATLC_FRC_CTRL_MACRO__ */

/** @} end of frc_ctrl */

/* macros for BlueprintGlobalNameSpace::ATLC_frc_to0 */
/**
 * @defgroup at_lc_regs_core_frc_to0 frc_to0
 * @brief Contains register fields associated with frc_to0. definitions.
 * @{
 */
#ifndef __ATLC_FRC_TO0_MACRO__
#define __ATLC_FRC_TO0_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details time in micro second which triggers interrupt when fr_us_cntr reaches this value.
 * @{
 */
#define ATLC_FRC_TO0__VL__SHIFT                                               0
#define ATLC_FRC_TO0__VL__WIDTH                                              32
#define ATLC_FRC_TO0__VL__MASK                                      0xffffffffU
#define ATLC_FRC_TO0__VL__READ(src)             ((uint32_t)(src) & 0xffffffffU)
#define ATLC_FRC_TO0__VL__WRITE(src)            ((uint32_t)(src) & 0xffffffffU)
#define ATLC_FRC_TO0__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_FRC_TO0__VL__VERIFY(src)     (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_FRC_TO0__VL__RESET_VALUE                               0x00000000U
/** @} */
#define ATLC_FRC_TO0__TYPE                                             uint32_t
#define ATLC_FRC_TO0__READ                                          0xffffffffU
#define ATLC_FRC_TO0__WRITE                                         0xffffffffU
#define ATLC_FRC_TO0__PRESERVED                                     0x00000000U
#define ATLC_FRC_TO0__RESET_VALUE                                   0x00000000U

#endif /* __ATLC_FRC_TO0_MACRO__ */

/** @} end of frc_to0 */

/* macros for BlueprintGlobalNameSpace::ATLC_frc_to1 */
/**
 * @defgroup at_lc_regs_core_frc_to1 frc_to1
 * @brief Contains register fields associated with frc_to1. definitions.
 * @{
 */
#ifndef __ATLC_FRC_TO1_MACRO__
#define __ATLC_FRC_TO1_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details time in micro second which triggers interrupt when fr_us_cntr reaches this value.
 * @{
 */
#define ATLC_FRC_TO1__VL__SHIFT                                               0
#define ATLC_FRC_TO1__VL__WIDTH                                              32
#define ATLC_FRC_TO1__VL__MASK                                      0xffffffffU
#define ATLC_FRC_TO1__VL__READ(src)             ((uint32_t)(src) & 0xffffffffU)
#define ATLC_FRC_TO1__VL__WRITE(src)            ((uint32_t)(src) & 0xffffffffU)
#define ATLC_FRC_TO1__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_FRC_TO1__VL__VERIFY(src)     (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_FRC_TO1__VL__RESET_VALUE                               0x00000000U
/** @} */
#define ATLC_FRC_TO1__TYPE                                             uint32_t
#define ATLC_FRC_TO1__READ                                          0xffffffffU
#define ATLC_FRC_TO1__WRITE                                         0xffffffffU
#define ATLC_FRC_TO1__PRESERVED                                     0x00000000U
#define ATLC_FRC_TO1__RESET_VALUE                                   0x00000000U

#endif /* __ATLC_FRC_TO1_MACRO__ */

/** @} end of frc_to1 */

/* macros for BlueprintGlobalNameSpace::ATLC_frc_to2 */
/**
 * @defgroup at_lc_regs_core_frc_to2 frc_to2
 * @brief Contains register fields associated with frc_to2. definitions.
 * @{
 */
#ifndef __ATLC_FRC_TO2_MACRO__
#define __ATLC_FRC_TO2_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details time in micro second which triggers interrupt when fr_us_cntr reaches this value.
 * @{
 */
#define ATLC_FRC_TO2__VL__SHIFT                                               0
#define ATLC_FRC_TO2__VL__WIDTH                                              32
#define ATLC_FRC_TO2__VL__MASK                                      0xffffffffU
#define ATLC_FRC_TO2__VL__READ(src)             ((uint32_t)(src) & 0xffffffffU)
#define ATLC_FRC_TO2__VL__WRITE(src)            ((uint32_t)(src) & 0xffffffffU)
#define ATLC_FRC_TO2__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_FRC_TO2__VL__VERIFY(src)     (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_FRC_TO2__VL__RESET_VALUE                               0x00000000U
/** @} */
#define ATLC_FRC_TO2__TYPE                                             uint32_t
#define ATLC_FRC_TO2__READ                                          0xffffffffU
#define ATLC_FRC_TO2__WRITE                                         0xffffffffU
#define ATLC_FRC_TO2__PRESERVED                                     0x00000000U
#define ATLC_FRC_TO2__RESET_VALUE                                   0x00000000U

#endif /* __ATLC_FRC_TO2_MACRO__ */

/** @} end of frc_to2 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_fmac_wht_ctrl */
/**
 * @defgroup at_lc_regs_core_lc_fmac_wht_ctrl lc_fmac_wht_ctrl
 * @brief Contains register fields associated with lc_fmac_wht_ctrl. definitions.
 * @{
 */
#ifndef __ATLC_LC_FMAC_WHT_CTRL_MACRO__
#define __ATLC_LC_FMAC_WHT_CTRL_MACRO__

/* macros for field sd */
/**
 * @defgroup at_lc_regs_core_sd_field sd_field
 * @brief macros for field sd
 * @details initial seed for whitening
 * @{
 */
#define ATLC_LC_FMAC_WHT_CTRL__SD__SHIFT                                      0
#define ATLC_LC_FMAC_WHT_CTRL__SD__WIDTH                                      8
#define ATLC_LC_FMAC_WHT_CTRL__SD__MASK                             0x000000ffU
#define ATLC_LC_FMAC_WHT_CTRL__SD__READ(src)    ((uint32_t)(src) & 0x000000ffU)
#define ATLC_LC_FMAC_WHT_CTRL__SD__WRITE(src)   ((uint32_t)(src) & 0x000000ffU)
#define ATLC_LC_FMAC_WHT_CTRL__SD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_LC_FMAC_WHT_CTRL__SD__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_LC_FMAC_WHT_CTRL__SD__RESET_VALUE                      0x00000000U
/** @} */
#define ATLC_LC_FMAC_WHT_CTRL__TYPE                                    uint32_t
#define ATLC_LC_FMAC_WHT_CTRL__READ                                 0x000000ffU
#define ATLC_LC_FMAC_WHT_CTRL__WRITE                                0x000000ffU
#define ATLC_LC_FMAC_WHT_CTRL__PRESERVED                            0x00000000U
#define ATLC_LC_FMAC_WHT_CTRL__RESET_VALUE                          0x00000000U

#endif /* __ATLC_LC_FMAC_WHT_CTRL_MACRO__ */

/** @} end of lc_fmac_wht_ctrl */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_ble_wht_ctrl */
/**
 * @defgroup at_lc_regs_core_lc_ble_wht_ctrl lc_ble_wht_ctrl
 * @brief Contains register fields associated with lc_ble_wht_ctrl. definitions.
 * @{
 */
#ifndef __ATLC_LC_BLE_WHT_CTRL_MACRO__
#define __ATLC_LC_BLE_WHT_CTRL_MACRO__

/* macros for field sd */
/**
 * @defgroup at_lc_regs_core_sd_field sd_field
 * @brief macros for field sd
 * @details initial seed for whitening
 * @{
 */
#define ATLC_LC_BLE_WHT_CTRL__SD__SHIFT                                       0
#define ATLC_LC_BLE_WHT_CTRL__SD__WIDTH                                       8
#define ATLC_LC_BLE_WHT_CTRL__SD__MASK                              0x000000ffU
#define ATLC_LC_BLE_WHT_CTRL__SD__READ(src)     ((uint32_t)(src) & 0x000000ffU)
#define ATLC_LC_BLE_WHT_CTRL__SD__WRITE(src)    ((uint32_t)(src) & 0x000000ffU)
#define ATLC_LC_BLE_WHT_CTRL__SD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_LC_BLE_WHT_CTRL__SD__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_LC_BLE_WHT_CTRL__SD__RESET_VALUE                       0x00000000U
/** @} */
#define ATLC_LC_BLE_WHT_CTRL__TYPE                                     uint32_t
#define ATLC_LC_BLE_WHT_CTRL__READ                                  0x000000ffU
#define ATLC_LC_BLE_WHT_CTRL__WRITE                                 0x000000ffU
#define ATLC_LC_BLE_WHT_CTRL__PRESERVED                             0x00000000U
#define ATLC_LC_BLE_WHT_CTRL__RESET_VALUE                           0x00000000U

#endif /* __ATLC_LC_BLE_WHT_CTRL_MACRO__ */

/** @} end of lc_ble_wht_ctrl */

/* macros for BlueprintGlobalNameSpace::ATLC_mac_154_wht_ctrl */
/**
 * @defgroup at_lc_regs_core_mac_154_wht_ctrl mac_154_wht_ctrl
 * @brief Contains register fields associated with mac_154_wht_ctrl. definitions.
 * @{
 */
#ifndef __ATLC_MAC_154_WHT_CTRL_MACRO__
#define __ATLC_MAC_154_WHT_CTRL_MACRO__

/* macros for field sd */
/**
 * @defgroup at_lc_regs_core_sd_field sd_field
 * @brief macros for field sd
 * @details initial seed for whitening
 * @{
 */
#define ATLC_MAC_154_WHT_CTRL__SD__SHIFT                                      0
#define ATLC_MAC_154_WHT_CTRL__SD__WIDTH                                      8
#define ATLC_MAC_154_WHT_CTRL__SD__MASK                             0x000000ffU
#define ATLC_MAC_154_WHT_CTRL__SD__READ(src)    ((uint32_t)(src) & 0x000000ffU)
#define ATLC_MAC_154_WHT_CTRL__SD__WRITE(src)   ((uint32_t)(src) & 0x000000ffU)
#define ATLC_MAC_154_WHT_CTRL__SD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_MAC_154_WHT_CTRL__SD__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_MAC_154_WHT_CTRL__SD__RESET_VALUE                      0x00000000U
/** @} */
#define ATLC_MAC_154_WHT_CTRL__TYPE                                    uint32_t
#define ATLC_MAC_154_WHT_CTRL__READ                                 0x000000ffU
#define ATLC_MAC_154_WHT_CTRL__WRITE                                0x000000ffU
#define ATLC_MAC_154_WHT_CTRL__PRESERVED                            0x00000000U
#define ATLC_MAC_154_WHT_CTRL__RESET_VALUE                          0x00000000U

#endif /* __ATLC_MAC_154_WHT_CTRL_MACRO__ */

/** @} end of mac_154_wht_ctrl */

/* macros for BlueprintGlobalNameSpace::ATLC_nd_ctrl */
/**
 * @defgroup at_lc_regs_core_nd_ctrl nd_ctrl
 * @brief Contains register fields associated with nd_ctrl. definitions.
 * @{
 */
#ifndef __ATLC_ND_CTRL_MACRO__
#define __ATLC_ND_CTRL_MACRO__

/* macros for field nd0_en */
/**
 * @defgroup at_lc_regs_core_nd0_en_field nd0_en_field
 * @brief macros for field nd0_en
 * @details enable receive node 0 supported for flexMAC, node 0 is used by BLE and 154.
 * @{
 */
#define ATLC_ND_CTRL__ND0_EN__SHIFT                                           0
#define ATLC_ND_CTRL__ND0_EN__WIDTH                                           1
#define ATLC_ND_CTRL__ND0_EN__MASK                                  0x00000001U
#define ATLC_ND_CTRL__ND0_EN__READ(src)         ((uint32_t)(src) & 0x00000001U)
#define ATLC_ND_CTRL__ND0_EN__WRITE(src)        ((uint32_t)(src) & 0x00000001U)
#define ATLC_ND_CTRL__ND0_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_ND_CTRL__ND0_EN__VERIFY(src) (!(((uint32_t)(src) & ~0x00000001U)))
#define ATLC_ND_CTRL__ND0_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_ND_CTRL__ND0_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_ND_CTRL__ND0_EN__RESET_VALUE                           0x00000001U
/** @} */

/* macros for field nd1_en */
/**
 * @defgroup at_lc_regs_core_nd1_en_field nd1_en_field
 * @brief macros for field nd1_en
 * @details enable receive node 1
 * @{
 */
#define ATLC_ND_CTRL__ND1_EN__SHIFT                                           1
#define ATLC_ND_CTRL__ND1_EN__WIDTH                                           1
#define ATLC_ND_CTRL__ND1_EN__MASK                                  0x00000002U
#define ATLC_ND_CTRL__ND1_EN__READ(src)  (((uint32_t)(src) & 0x00000002U) >> 1)
#define ATLC_ND_CTRL__ND1_EN__WRITE(src) (((uint32_t)(src) << 1) & 0x00000002U)
#define ATLC_ND_CTRL__ND1_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | (((uint32_t)(src) <<\
                    1) & 0x00000002U)
#define ATLC_ND_CTRL__ND1_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 1) & ~0x00000002U)))
#define ATLC_ND_CTRL__ND1_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(1) << 1)
#define ATLC_ND_CTRL__ND1_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(0) << 1)
#define ATLC_ND_CTRL__ND1_EN__RESET_VALUE                           0x00000000U
/** @} */

/* macros for field nd2_en */
/**
 * @defgroup at_lc_regs_core_nd2_en_field nd2_en_field
 * @brief macros for field nd2_en
 * @details enable receive node 2
 * @{
 */
#define ATLC_ND_CTRL__ND2_EN__SHIFT                                           2
#define ATLC_ND_CTRL__ND2_EN__WIDTH                                           1
#define ATLC_ND_CTRL__ND2_EN__MASK                                  0x00000004U
#define ATLC_ND_CTRL__ND2_EN__READ(src)  (((uint32_t)(src) & 0x00000004U) >> 2)
#define ATLC_ND_CTRL__ND2_EN__WRITE(src) (((uint32_t)(src) << 2) & 0x00000004U)
#define ATLC_ND_CTRL__ND2_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | (((uint32_t)(src) <<\
                    2) & 0x00000004U)
#define ATLC_ND_CTRL__ND2_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 2) & ~0x00000004U)))
#define ATLC_ND_CTRL__ND2_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(1) << 2)
#define ATLC_ND_CTRL__ND2_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(0) << 2)
#define ATLC_ND_CTRL__ND2_EN__RESET_VALUE                           0x00000000U
/** @} */

/* macros for field nd3_en */
/**
 * @defgroup at_lc_regs_core_nd3_en_field nd3_en_field
 * @brief macros for field nd3_en
 * @details enable receive node 3
 * @{
 */
#define ATLC_ND_CTRL__ND3_EN__SHIFT                                           3
#define ATLC_ND_CTRL__ND3_EN__WIDTH                                           1
#define ATLC_ND_CTRL__ND3_EN__MASK                                  0x00000008U
#define ATLC_ND_CTRL__ND3_EN__READ(src)  (((uint32_t)(src) & 0x00000008U) >> 3)
#define ATLC_ND_CTRL__ND3_EN__WRITE(src) (((uint32_t)(src) << 3) & 0x00000008U)
#define ATLC_ND_CTRL__ND3_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | (((uint32_t)(src) <<\
                    3) & 0x00000008U)
#define ATLC_ND_CTRL__ND3_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 3) & ~0x00000008U)))
#define ATLC_ND_CTRL__ND3_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | ((uint32_t)(1) << 3)
#define ATLC_ND_CTRL__ND3_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | ((uint32_t)(0) << 3)
#define ATLC_ND_CTRL__ND3_EN__RESET_VALUE                           0x00000000U
/** @} */

/* macros for field nd4_en */
/**
 * @defgroup at_lc_regs_core_nd4_en_field nd4_en_field
 * @brief macros for field nd4_en
 * @details enable receive node 4
 * @{
 */
#define ATLC_ND_CTRL__ND4_EN__SHIFT                                           4
#define ATLC_ND_CTRL__ND4_EN__WIDTH                                           1
#define ATLC_ND_CTRL__ND4_EN__MASK                                  0x00000010U
#define ATLC_ND_CTRL__ND4_EN__READ(src)  (((uint32_t)(src) & 0x00000010U) >> 4)
#define ATLC_ND_CTRL__ND4_EN__WRITE(src) (((uint32_t)(src) << 4) & 0x00000010U)
#define ATLC_ND_CTRL__ND4_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | (((uint32_t)(src) <<\
                    4) & 0x00000010U)
#define ATLC_ND_CTRL__ND4_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 4) & ~0x00000010U)))
#define ATLC_ND_CTRL__ND4_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | ((uint32_t)(1) << 4)
#define ATLC_ND_CTRL__ND4_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | ((uint32_t)(0) << 4)
#define ATLC_ND_CTRL__ND4_EN__RESET_VALUE                           0x00000000U
/** @} */

/* macros for field nd5_en */
/**
 * @defgroup at_lc_regs_core_nd5_en_field nd5_en_field
 * @brief macros for field nd5_en
 * @details enable receive node 5
 * @{
 */
#define ATLC_ND_CTRL__ND5_EN__SHIFT                                           5
#define ATLC_ND_CTRL__ND5_EN__WIDTH                                           1
#define ATLC_ND_CTRL__ND5_EN__MASK                                  0x00000020U
#define ATLC_ND_CTRL__ND5_EN__READ(src)  (((uint32_t)(src) & 0x00000020U) >> 5)
#define ATLC_ND_CTRL__ND5_EN__WRITE(src) (((uint32_t)(src) << 5) & 0x00000020U)
#define ATLC_ND_CTRL__ND5_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | (((uint32_t)(src) <<\
                    5) & 0x00000020U)
#define ATLC_ND_CTRL__ND5_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 5) & ~0x00000020U)))
#define ATLC_ND_CTRL__ND5_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | ((uint32_t)(1) << 5)
#define ATLC_ND_CTRL__ND5_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | ((uint32_t)(0) << 5)
#define ATLC_ND_CTRL__ND5_EN__RESET_VALUE                           0x00000000U
/** @} */

/* macros for field nd6_en */
/**
 * @defgroup at_lc_regs_core_nd6_en_field nd6_en_field
 * @brief macros for field nd6_en
 * @details enable receive node 6
 * @{
 */
#define ATLC_ND_CTRL__ND6_EN__SHIFT                                           6
#define ATLC_ND_CTRL__ND6_EN__WIDTH                                           1
#define ATLC_ND_CTRL__ND6_EN__MASK                                  0x00000040U
#define ATLC_ND_CTRL__ND6_EN__READ(src)  (((uint32_t)(src) & 0x00000040U) >> 6)
#define ATLC_ND_CTRL__ND6_EN__WRITE(src) (((uint32_t)(src) << 6) & 0x00000040U)
#define ATLC_ND_CTRL__ND6_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | (((uint32_t)(src) <<\
                    6) & 0x00000040U)
#define ATLC_ND_CTRL__ND6_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 6) & ~0x00000040U)))
#define ATLC_ND_CTRL__ND6_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | ((uint32_t)(1) << 6)
#define ATLC_ND_CTRL__ND6_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | ((uint32_t)(0) << 6)
#define ATLC_ND_CTRL__ND6_EN__RESET_VALUE                           0x00000000U
/** @} */

/* macros for field nd7_en */
/**
 * @defgroup at_lc_regs_core_nd7_en_field nd7_en_field
 * @brief macros for field nd7_en
 * @details enable receive node 7
 * @{
 */
#define ATLC_ND_CTRL__ND7_EN__SHIFT                                           7
#define ATLC_ND_CTRL__ND7_EN__WIDTH                                           1
#define ATLC_ND_CTRL__ND7_EN__MASK                                  0x00000080U
#define ATLC_ND_CTRL__ND7_EN__READ(src)  (((uint32_t)(src) & 0x00000080U) >> 7)
#define ATLC_ND_CTRL__ND7_EN__WRITE(src) (((uint32_t)(src) << 7) & 0x00000080U)
#define ATLC_ND_CTRL__ND7_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | (((uint32_t)(src) <<\
                    7) & 0x00000080U)
#define ATLC_ND_CTRL__ND7_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 7) & ~0x00000080U)))
#define ATLC_ND_CTRL__ND7_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(1) << 7)
#define ATLC_ND_CTRL__ND7_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(0) << 7)
#define ATLC_ND_CTRL__ND7_EN__RESET_VALUE                           0x00000000U
/** @} */
#define ATLC_ND_CTRL__TYPE                                             uint32_t
#define ATLC_ND_CTRL__READ                                          0x000000ffU
#define ATLC_ND_CTRL__WRITE                                         0x000000ffU
#define ATLC_ND_CTRL__PRESERVED                                     0x00000000U
#define ATLC_ND_CTRL__RESET_VALUE                                   0x00000001U

#endif /* __ATLC_ND_CTRL_MACRO__ */

/** @} end of nd_ctrl */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_fmac_sync_wrd0 */
/**
 * @defgroup at_lc_regs_core_lc_fmac_sync_wrd0 lc_fmac_sync_wrd0
 * @brief Contains register fields associated with lc_fmac_sync_wrd0. definitions.
 * @{
 */
#ifndef __ATLC_LC_FMAC_SYNC_WRD0_MACRO__
#define __ATLC_LC_FMAC_SYNC_WRD0_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details synchronization word 0
 * @{
 */
#define ATLC_LC_FMAC_SYNC_WRD0__VL__SHIFT                                     0
#define ATLC_LC_FMAC_SYNC_WRD0__VL__WIDTH                                    32
#define ATLC_LC_FMAC_SYNC_WRD0__VL__MASK                            0xffffffffU
#define ATLC_LC_FMAC_SYNC_WRD0__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_FMAC_SYNC_WRD0__VL__WRITE(src)  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_FMAC_SYNC_WRD0__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_LC_FMAC_SYNC_WRD0__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_LC_FMAC_SYNC_WRD0__VL__RESET_VALUE                     0x8e89bed6U
/** @} */
#define ATLC_LC_FMAC_SYNC_WRD0__TYPE                                   uint32_t
#define ATLC_LC_FMAC_SYNC_WRD0__READ                                0xffffffffU
#define ATLC_LC_FMAC_SYNC_WRD0__WRITE                               0xffffffffU
#define ATLC_LC_FMAC_SYNC_WRD0__PRESERVED                           0x00000000U
#define ATLC_LC_FMAC_SYNC_WRD0__RESET_VALUE                         0x8e89bed6U

#endif /* __ATLC_LC_FMAC_SYNC_WRD0_MACRO__ */

/** @} end of lc_fmac_sync_wrd0 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_fmac_sync_wrd1 */
/**
 * @defgroup at_lc_regs_core_lc_fmac_sync_wrd1 lc_fmac_sync_wrd1
 * @brief Contains register fields associated with lc_fmac_sync_wrd1. definitions.
 * @{
 */
#ifndef __ATLC_LC_FMAC_SYNC_WRD1_MACRO__
#define __ATLC_LC_FMAC_SYNC_WRD1_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details synchronization word 1 supported for flexMAC.
 * @{
 */
#define ATLC_LC_FMAC_SYNC_WRD1__VL__SHIFT                                     0
#define ATLC_LC_FMAC_SYNC_WRD1__VL__WIDTH                                    32
#define ATLC_LC_FMAC_SYNC_WRD1__VL__MASK                            0xffffffffU
#define ATLC_LC_FMAC_SYNC_WRD1__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_FMAC_SYNC_WRD1__VL__WRITE(src)  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_FMAC_SYNC_WRD1__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_LC_FMAC_SYNC_WRD1__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_LC_FMAC_SYNC_WRD1__VL__RESET_VALUE                     0x5367a431U
/** @} */
#define ATLC_LC_FMAC_SYNC_WRD1__TYPE                                   uint32_t
#define ATLC_LC_FMAC_SYNC_WRD1__READ                                0xffffffffU
#define ATLC_LC_FMAC_SYNC_WRD1__WRITE                               0xffffffffU
#define ATLC_LC_FMAC_SYNC_WRD1__PRESERVED                           0x00000000U
#define ATLC_LC_FMAC_SYNC_WRD1__RESET_VALUE                         0x5367a431U

#endif /* __ATLC_LC_FMAC_SYNC_WRD1_MACRO__ */

/** @} end of lc_fmac_sync_wrd1 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_ble_sync_wrd */
/**
 * @defgroup at_lc_regs_core_lc_ble_sync_wrd lc_ble_sync_wrd
 * @brief Contains register fields associated with lc_ble_sync_wrd. definitions.
 * @{
 */
#ifndef __ATLC_LC_BLE_SYNC_WRD_MACRO__
#define __ATLC_LC_BLE_SYNC_WRD_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details synchronization word
 * @{
 */
#define ATLC_LC_BLE_SYNC_WRD__VL__SHIFT                                       0
#define ATLC_LC_BLE_SYNC_WRD__VL__WIDTH                                      32
#define ATLC_LC_BLE_SYNC_WRD__VL__MASK                              0xffffffffU
#define ATLC_LC_BLE_SYNC_WRD__VL__READ(src)     ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_BLE_SYNC_WRD__VL__WRITE(src)    ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_BLE_SYNC_WRD__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_LC_BLE_SYNC_WRD__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_LC_BLE_SYNC_WRD__VL__RESET_VALUE                       0x8e89bed6U
/** @} */
#define ATLC_LC_BLE_SYNC_WRD__TYPE                                     uint32_t
#define ATLC_LC_BLE_SYNC_WRD__READ                                  0xffffffffU
#define ATLC_LC_BLE_SYNC_WRD__WRITE                                 0xffffffffU
#define ATLC_LC_BLE_SYNC_WRD__PRESERVED                             0x00000000U
#define ATLC_LC_BLE_SYNC_WRD__RESET_VALUE                           0x8e89bed6U

#endif /* __ATLC_LC_BLE_SYNC_WRD_MACRO__ */

/** @} end of lc_ble_sync_wrd */

/* macros for BlueprintGlobalNameSpace::ATLC_mac_154_sync_wrd */
/**
 * @defgroup at_lc_regs_core_mac_154_sync_wrd mac_154_sync_wrd
 * @brief Contains register fields associated with mac_154_sync_wrd. definitions.
 * @{
 */
#ifndef __ATLC_MAC_154_SYNC_WRD_MACRO__
#define __ATLC_MAC_154_SYNC_WRD_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details synchronization word
 * @{
 */
#define ATLC_MAC_154_SYNC_WRD__VL__SHIFT                                      0
#define ATLC_MAC_154_SYNC_WRD__VL__WIDTH                                     32
#define ATLC_MAC_154_SYNC_WRD__VL__MASK                             0xffffffffU
#define ATLC_MAC_154_SYNC_WRD__VL__READ(src)    ((uint32_t)(src) & 0xffffffffU)
#define ATLC_MAC_154_SYNC_WRD__VL__WRITE(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_MAC_154_SYNC_WRD__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_MAC_154_SYNC_WRD__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_MAC_154_SYNC_WRD__VL__RESET_VALUE                      0x000000a7U
/** @} */
#define ATLC_MAC_154_SYNC_WRD__TYPE                                    uint32_t
#define ATLC_MAC_154_SYNC_WRD__READ                                 0xffffffffU
#define ATLC_MAC_154_SYNC_WRD__WRITE                                0xffffffffU
#define ATLC_MAC_154_SYNC_WRD__PRESERVED                            0x00000000U
#define ATLC_MAC_154_SYNC_WRD__RESET_VALUE                          0x000000a7U

#endif /* __ATLC_MAC_154_SYNC_WRD_MACRO__ */

/** @} end of mac_154_sync_wrd */

/* macros for BlueprintGlobalNameSpace::ATLC_rx_addr0 */
/**
 * @defgroup at_lc_regs_core_rx_addr0 rx_addr0
 * @brief Contains register fields associated with rx_addr0. definitions.
 * @{
 */
#ifndef __ATLC_RX_ADDR0_MACRO__
#define __ATLC_RX_ADDR0_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details rx addr of rx node 0 and tx_addr for tx node 0 supported for flexMAC.
 * @{
 */
#define ATLC_RX_ADDR0__VL__SHIFT                                              0
#define ATLC_RX_ADDR0__VL__WIDTH                                              8
#define ATLC_RX_ADDR0__VL__MASK                                     0x000000ffU
#define ATLC_RX_ADDR0__VL__READ(src)            ((uint32_t)(src) & 0x000000ffU)
#define ATLC_RX_ADDR0__VL__WRITE(src)           ((uint32_t)(src) & 0x000000ffU)
#define ATLC_RX_ADDR0__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_RX_ADDR0__VL__VERIFY(src)    (!(((uint32_t)(src) & ~0x000000ffU)))
#define ATLC_RX_ADDR0__VL__RESET_VALUE                              0x00000000U
/** @} */
#define ATLC_RX_ADDR0__TYPE                                            uint32_t
#define ATLC_RX_ADDR0__READ                                         0x000000ffU
#define ATLC_RX_ADDR0__WRITE                                        0x000000ffU
#define ATLC_RX_ADDR0__PRESERVED                                    0x00000000U
#define ATLC_RX_ADDR0__RESET_VALUE                                  0x00000000U

#endif /* __ATLC_RX_ADDR0_MACRO__ */

/** @} end of rx_addr0 */

/* macros for BlueprintGlobalNameSpace::ATLC_rx_addr1 */
/**
 * @defgroup at_lc_regs_core_rx_addr1 rx_addr1
 * @brief Contains register fields associated with rx_addr1. definitions.
 * @{
 */
#ifndef __ATLC_RX_ADDR1_MACRO__
#define __ATLC_RX_ADDR1_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details rx addr of rx node 1 and tx_addr for tx node 1 supported for flexMAC.
 * @{
 */
#define ATLC_RX_ADDR1__VL__SHIFT                                              0
#define ATLC_RX_ADDR1__VL__WIDTH                                              8
#define ATLC_RX_ADDR1__VL__MASK                                     0x000000ffU
#define ATLC_RX_ADDR1__VL__READ(src)            ((uint32_t)(src) & 0x000000ffU)
#define ATLC_RX_ADDR1__VL__WRITE(src)           ((uint32_t)(src) & 0x000000ffU)
#define ATLC_RX_ADDR1__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_RX_ADDR1__VL__VERIFY(src)    (!(((uint32_t)(src) & ~0x000000ffU)))
#define ATLC_RX_ADDR1__VL__RESET_VALUE                              0x00000000U
/** @} */
#define ATLC_RX_ADDR1__TYPE                                            uint32_t
#define ATLC_RX_ADDR1__READ                                         0x000000ffU
#define ATLC_RX_ADDR1__WRITE                                        0x000000ffU
#define ATLC_RX_ADDR1__PRESERVED                                    0x00000000U
#define ATLC_RX_ADDR1__RESET_VALUE                                  0x00000000U

#endif /* __ATLC_RX_ADDR1_MACRO__ */

/** @} end of rx_addr1 */

/* macros for BlueprintGlobalNameSpace::ATLC_rx_addr2 */
/**
 * @defgroup at_lc_regs_core_rx_addr2 rx_addr2
 * @brief Contains register fields associated with rx_addr2. definitions.
 * @{
 */
#ifndef __ATLC_RX_ADDR2_MACRO__
#define __ATLC_RX_ADDR2_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details rx addr of rx node 2 and tx_addr for tx node 2
 * @{
 */
#define ATLC_RX_ADDR2__VL__SHIFT                                              0
#define ATLC_RX_ADDR2__VL__WIDTH                                              8
#define ATLC_RX_ADDR2__VL__MASK                                     0x000000ffU
#define ATLC_RX_ADDR2__VL__READ(src)            ((uint32_t)(src) & 0x000000ffU)
#define ATLC_RX_ADDR2__VL__WRITE(src)           ((uint32_t)(src) & 0x000000ffU)
#define ATLC_RX_ADDR2__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_RX_ADDR2__VL__VERIFY(src)    (!(((uint32_t)(src) & ~0x000000ffU)))
#define ATLC_RX_ADDR2__VL__RESET_VALUE                              0x00000000U
/** @} */
#define ATLC_RX_ADDR2__TYPE                                            uint32_t
#define ATLC_RX_ADDR2__READ                                         0x000000ffU
#define ATLC_RX_ADDR2__WRITE                                        0x000000ffU
#define ATLC_RX_ADDR2__PRESERVED                                    0x00000000U
#define ATLC_RX_ADDR2__RESET_VALUE                                  0x00000000U

#endif /* __ATLC_RX_ADDR2_MACRO__ */

/** @} end of rx_addr2 */

/* macros for BlueprintGlobalNameSpace::ATLC_rx_addr3 */
/**
 * @defgroup at_lc_regs_core_rx_addr3 rx_addr3
 * @brief Contains register fields associated with rx_addr3. definitions.
 * @{
 */
#ifndef __ATLC_RX_ADDR3_MACRO__
#define __ATLC_RX_ADDR3_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details rx addr of rx node 3 and tx_addr for tx node 3
 * @{
 */
#define ATLC_RX_ADDR3__VL__SHIFT                                              0
#define ATLC_RX_ADDR3__VL__WIDTH                                              8
#define ATLC_RX_ADDR3__VL__MASK                                     0x000000ffU
#define ATLC_RX_ADDR3__VL__READ(src)            ((uint32_t)(src) & 0x000000ffU)
#define ATLC_RX_ADDR3__VL__WRITE(src)           ((uint32_t)(src) & 0x000000ffU)
#define ATLC_RX_ADDR3__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_RX_ADDR3__VL__VERIFY(src)    (!(((uint32_t)(src) & ~0x000000ffU)))
#define ATLC_RX_ADDR3__VL__RESET_VALUE                              0x00000000U
/** @} */
#define ATLC_RX_ADDR3__TYPE                                            uint32_t
#define ATLC_RX_ADDR3__READ                                         0x000000ffU
#define ATLC_RX_ADDR3__WRITE                                        0x000000ffU
#define ATLC_RX_ADDR3__PRESERVED                                    0x00000000U
#define ATLC_RX_ADDR3__RESET_VALUE                                  0x00000000U

#endif /* __ATLC_RX_ADDR3_MACRO__ */

/** @} end of rx_addr3 */

/* macros for BlueprintGlobalNameSpace::ATLC_rx_addr4 */
/**
 * @defgroup at_lc_regs_core_rx_addr4 rx_addr4
 * @brief Contains register fields associated with rx_addr4. definitions.
 * @{
 */
#ifndef __ATLC_RX_ADDR4_MACRO__
#define __ATLC_RX_ADDR4_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details rx addr of rx node 4 and tx_addr for tx node 4
 * @{
 */
#define ATLC_RX_ADDR4__VL__SHIFT                                              0
#define ATLC_RX_ADDR4__VL__WIDTH                                              8
#define ATLC_RX_ADDR4__VL__MASK                                     0x000000ffU
#define ATLC_RX_ADDR4__VL__READ(src)            ((uint32_t)(src) & 0x000000ffU)
#define ATLC_RX_ADDR4__VL__WRITE(src)           ((uint32_t)(src) & 0x000000ffU)
#define ATLC_RX_ADDR4__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_RX_ADDR4__VL__VERIFY(src)    (!(((uint32_t)(src) & ~0x000000ffU)))
#define ATLC_RX_ADDR4__VL__RESET_VALUE                              0x00000000U
/** @} */
#define ATLC_RX_ADDR4__TYPE                                            uint32_t
#define ATLC_RX_ADDR4__READ                                         0x000000ffU
#define ATLC_RX_ADDR4__WRITE                                        0x000000ffU
#define ATLC_RX_ADDR4__PRESERVED                                    0x00000000U
#define ATLC_RX_ADDR4__RESET_VALUE                                  0x00000000U

#endif /* __ATLC_RX_ADDR4_MACRO__ */

/** @} end of rx_addr4 */

/* macros for BlueprintGlobalNameSpace::ATLC_rx_addr5 */
/**
 * @defgroup at_lc_regs_core_rx_addr5 rx_addr5
 * @brief Contains register fields associated with rx_addr5. definitions.
 * @{
 */
#ifndef __ATLC_RX_ADDR5_MACRO__
#define __ATLC_RX_ADDR5_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details rx addr of rx node 5 and tx_addr for tx node 5
 * @{
 */
#define ATLC_RX_ADDR5__VL__SHIFT                                              0
#define ATLC_RX_ADDR5__VL__WIDTH                                              8
#define ATLC_RX_ADDR5__VL__MASK                                     0x000000ffU
#define ATLC_RX_ADDR5__VL__READ(src)            ((uint32_t)(src) & 0x000000ffU)
#define ATLC_RX_ADDR5__VL__WRITE(src)           ((uint32_t)(src) & 0x000000ffU)
#define ATLC_RX_ADDR5__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_RX_ADDR5__VL__VERIFY(src)    (!(((uint32_t)(src) & ~0x000000ffU)))
#define ATLC_RX_ADDR5__VL__RESET_VALUE                              0x00000000U
/** @} */
#define ATLC_RX_ADDR5__TYPE                                            uint32_t
#define ATLC_RX_ADDR5__READ                                         0x000000ffU
#define ATLC_RX_ADDR5__WRITE                                        0x000000ffU
#define ATLC_RX_ADDR5__PRESERVED                                    0x00000000U
#define ATLC_RX_ADDR5__RESET_VALUE                                  0x00000000U

#endif /* __ATLC_RX_ADDR5_MACRO__ */

/** @} end of rx_addr5 */

/* macros for BlueprintGlobalNameSpace::ATLC_rx_addr6 */
/**
 * @defgroup at_lc_regs_core_rx_addr6 rx_addr6
 * @brief Contains register fields associated with rx_addr6. definitions.
 * @{
 */
#ifndef __ATLC_RX_ADDR6_MACRO__
#define __ATLC_RX_ADDR6_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details rx addr of rx node 6 and tx_addr for tx node 6
 * @{
 */
#define ATLC_RX_ADDR6__VL__SHIFT                                              0
#define ATLC_RX_ADDR6__VL__WIDTH                                              8
#define ATLC_RX_ADDR6__VL__MASK                                     0x000000ffU
#define ATLC_RX_ADDR6__VL__READ(src)            ((uint32_t)(src) & 0x000000ffU)
#define ATLC_RX_ADDR6__VL__WRITE(src)           ((uint32_t)(src) & 0x000000ffU)
#define ATLC_RX_ADDR6__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_RX_ADDR6__VL__VERIFY(src)    (!(((uint32_t)(src) & ~0x000000ffU)))
#define ATLC_RX_ADDR6__VL__RESET_VALUE                              0x00000000U
/** @} */
#define ATLC_RX_ADDR6__TYPE                                            uint32_t
#define ATLC_RX_ADDR6__READ                                         0x000000ffU
#define ATLC_RX_ADDR6__WRITE                                        0x000000ffU
#define ATLC_RX_ADDR6__PRESERVED                                    0x00000000U
#define ATLC_RX_ADDR6__RESET_VALUE                                  0x00000000U

#endif /* __ATLC_RX_ADDR6_MACRO__ */

/** @} end of rx_addr6 */

/* macros for BlueprintGlobalNameSpace::ATLC_rx_addr7 */
/**
 * @defgroup at_lc_regs_core_rx_addr7 rx_addr7
 * @brief Contains register fields associated with rx_addr7. definitions.
 * @{
 */
#ifndef __ATLC_RX_ADDR7_MACRO__
#define __ATLC_RX_ADDR7_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details rx addr of rx node 7 and tx_addr for tx node 7
 * @{
 */
#define ATLC_RX_ADDR7__VL__SHIFT                                              0
#define ATLC_RX_ADDR7__VL__WIDTH                                              8
#define ATLC_RX_ADDR7__VL__MASK                                     0x000000ffU
#define ATLC_RX_ADDR7__VL__READ(src)            ((uint32_t)(src) & 0x000000ffU)
#define ATLC_RX_ADDR7__VL__WRITE(src)           ((uint32_t)(src) & 0x000000ffU)
#define ATLC_RX_ADDR7__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_RX_ADDR7__VL__VERIFY(src)    (!(((uint32_t)(src) & ~0x000000ffU)))
#define ATLC_RX_ADDR7__VL__RESET_VALUE                              0x00000000U
/** @} */
#define ATLC_RX_ADDR7__TYPE                                            uint32_t
#define ATLC_RX_ADDR7__READ                                         0x000000ffU
#define ATLC_RX_ADDR7__WRITE                                        0x000000ffU
#define ATLC_RX_ADDR7__PRESERVED                                    0x00000000U
#define ATLC_RX_ADDR7__RESET_VALUE                                  0x00000000U

#endif /* __ATLC_RX_ADDR7_MACRO__ */

/** @} end of rx_addr7 */

/* macros for BlueprintGlobalNameSpace::ATLC_tff0_addr */
/**
 * @defgroup at_lc_regs_core_tff0_addr tff0_addr
 * @brief Contains register fields associated with tff0_addr. definitions.
 * @{
 */
#ifndef __ATLC_TFF0_ADDR_MACRO__
#define __ATLC_TFF0_ADDR_MACRO__

/* macros for field st */
/**
 * @defgroup at_lc_regs_core_st_field st_field
 * @brief macros for field st
 * @details tx fifo node 0 start addr use ff0 for BLE and 154
 * @{
 */
#define ATLC_TFF0_ADDR__ST__SHIFT                                             0
#define ATLC_TFF0_ADDR__ST__WIDTH                                            16
#define ATLC_TFF0_ADDR__ST__MASK                                    0x0000ffffU
#define ATLC_TFF0_ADDR__ST__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF0_ADDR__ST__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF0_ADDR__ST__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_TFF0_ADDR__ST__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_TFF0_ADDR__ST__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field ed */
/**
 * @defgroup at_lc_regs_core_ed_field ed_field
 * @brief macros for field ed
 * @details tx fifo node 0 end addr
 * @{
 */
#define ATLC_TFF0_ADDR__ED__SHIFT                                            16
#define ATLC_TFF0_ADDR__ED__WIDTH                                            16
#define ATLC_TFF0_ADDR__ED__MASK                                    0xffff0000U
#define ATLC_TFF0_ADDR__ED__READ(src)   (((uint32_t)(src) & 0xffff0000U) >> 16)
#define ATLC_TFF0_ADDR__ED__WRITE(src)  (((uint32_t)(src) << 16) & 0xffff0000U)
#define ATLC_TFF0_ADDR__ED__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffff0000U) | (((uint32_t)(src) <<\
                    16) & 0xffff0000U)
#define ATLC_TFF0_ADDR__ED__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0xffff0000U)))
#define ATLC_TFF0_ADDR__ED__RESET_VALUE                             0x0000031eU
/** @} */
#define ATLC_TFF0_ADDR__TYPE                                           uint32_t
#define ATLC_TFF0_ADDR__READ                                        0xffffffffU
#define ATLC_TFF0_ADDR__WRITE                                       0xffffffffU
#define ATLC_TFF0_ADDR__PRESERVED                                   0x00000000U
#define ATLC_TFF0_ADDR__RESET_VALUE                                 0x031e0000U

#endif /* __ATLC_TFF0_ADDR_MACRO__ */

/** @} end of tff0_addr */

/* macros for BlueprintGlobalNameSpace::ATLC_rff0_addr */
/**
 * @defgroup at_lc_regs_core_rff0_addr rff0_addr
 * @brief Contains register fields associated with rff0_addr. definitions.
 * @{
 */
#ifndef __ATLC_RFF0_ADDR_MACRO__
#define __ATLC_RFF0_ADDR_MACRO__

/* macros for field st */
/**
 * @defgroup at_lc_regs_core_st_field st_field
 * @brief macros for field st
 * @details rx fifo node 0 start addr use ff0 for BLE and 154
 * @{
 */
#define ATLC_RFF0_ADDR__ST__SHIFT                                             0
#define ATLC_RFF0_ADDR__ST__WIDTH                                            16
#define ATLC_RFF0_ADDR__ST__MASK                                    0x0000ffffU
#define ATLC_RFF0_ADDR__ST__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF0_ADDR__ST__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF0_ADDR__ST__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_RFF0_ADDR__ST__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_RFF0_ADDR__ST__RESET_VALUE                             0x00000320U
/** @} */

/* macros for field ed */
/**
 * @defgroup at_lc_regs_core_ed_field ed_field
 * @brief macros for field ed
 * @details rx fifo node 0 end addr
 * @{
 */
#define ATLC_RFF0_ADDR__ED__SHIFT                                            16
#define ATLC_RFF0_ADDR__ED__WIDTH                                            16
#define ATLC_RFF0_ADDR__ED__MASK                                    0xffff0000U
#define ATLC_RFF0_ADDR__ED__READ(src)   (((uint32_t)(src) & 0xffff0000U) >> 16)
#define ATLC_RFF0_ADDR__ED__WRITE(src)  (((uint32_t)(src) << 16) & 0xffff0000U)
#define ATLC_RFF0_ADDR__ED__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffff0000U) | (((uint32_t)(src) <<\
                    16) & 0xffff0000U)
#define ATLC_RFF0_ADDR__ED__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0xffff0000U)))
#define ATLC_RFF0_ADDR__ED__RESET_VALUE                             0x0000063eU
/** @} */
#define ATLC_RFF0_ADDR__TYPE                                           uint32_t
#define ATLC_RFF0_ADDR__READ                                        0xffffffffU
#define ATLC_RFF0_ADDR__WRITE                                       0xffffffffU
#define ATLC_RFF0_ADDR__PRESERVED                                   0x00000000U
#define ATLC_RFF0_ADDR__RESET_VALUE                                 0x063e0320U

#endif /* __ATLC_RFF0_ADDR_MACRO__ */

/** @} end of rff0_addr */

/* macros for BlueprintGlobalNameSpace::ATLC_tff1_addr */
/**
 * @defgroup at_lc_regs_core_tff1_addr tff1_addr
 * @brief Contains register fields associated with tff1_addr. definitions.
 * @{
 */
#ifndef __ATLC_TFF1_ADDR_MACRO__
#define __ATLC_TFF1_ADDR_MACRO__

/* macros for field st */
/**
 * @defgroup at_lc_regs_core_st_field st_field
 * @brief macros for field st
 * @details tx fifo node 1 start addr
 * @{
 */
#define ATLC_TFF1_ADDR__ST__SHIFT                                             0
#define ATLC_TFF1_ADDR__ST__WIDTH                                            16
#define ATLC_TFF1_ADDR__ST__MASK                                    0x0000ffffU
#define ATLC_TFF1_ADDR__ST__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF1_ADDR__ST__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF1_ADDR__ST__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_TFF1_ADDR__ST__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_TFF1_ADDR__ST__RESET_VALUE                             0x00000640U
/** @} */

/* macros for field ed */
/**
 * @defgroup at_lc_regs_core_ed_field ed_field
 * @brief macros for field ed
 * @details tx fifo node 1 end addr
 * @{
 */
#define ATLC_TFF1_ADDR__ED__SHIFT                                            16
#define ATLC_TFF1_ADDR__ED__WIDTH                                            16
#define ATLC_TFF1_ADDR__ED__MASK                                    0xffff0000U
#define ATLC_TFF1_ADDR__ED__READ(src)   (((uint32_t)(src) & 0xffff0000U) >> 16)
#define ATLC_TFF1_ADDR__ED__WRITE(src)  (((uint32_t)(src) << 16) & 0xffff0000U)
#define ATLC_TFF1_ADDR__ED__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffff0000U) | (((uint32_t)(src) <<\
                    16) & 0xffff0000U)
#define ATLC_TFF1_ADDR__ED__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0xffff0000U)))
#define ATLC_TFF1_ADDR__ED__RESET_VALUE                             0x0000095eU
/** @} */
#define ATLC_TFF1_ADDR__TYPE                                           uint32_t
#define ATLC_TFF1_ADDR__READ                                        0xffffffffU
#define ATLC_TFF1_ADDR__WRITE                                       0xffffffffU
#define ATLC_TFF1_ADDR__PRESERVED                                   0x00000000U
#define ATLC_TFF1_ADDR__RESET_VALUE                                 0x095e0640U

#endif /* __ATLC_TFF1_ADDR_MACRO__ */

/** @} end of tff1_addr */

/* macros for BlueprintGlobalNameSpace::ATLC_rff1_addr */
/**
 * @defgroup at_lc_regs_core_rff1_addr rff1_addr
 * @brief Contains register fields associated with rff1_addr. definitions.
 * @{
 */
#ifndef __ATLC_RFF1_ADDR_MACRO__
#define __ATLC_RFF1_ADDR_MACRO__

/* macros for field st */
/**
 * @defgroup at_lc_regs_core_st_field st_field
 * @brief macros for field st
 * @details rx fifo node 1 start addr
 * @{
 */
#define ATLC_RFF1_ADDR__ST__SHIFT                                             0
#define ATLC_RFF1_ADDR__ST__WIDTH                                            16
#define ATLC_RFF1_ADDR__ST__MASK                                    0x0000ffffU
#define ATLC_RFF1_ADDR__ST__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF1_ADDR__ST__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF1_ADDR__ST__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_RFF1_ADDR__ST__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_RFF1_ADDR__ST__RESET_VALUE                             0x00000960U
/** @} */

/* macros for field ed */
/**
 * @defgroup at_lc_regs_core_ed_field ed_field
 * @brief macros for field ed
 * @details rx fifo node 1 end addr
 * @{
 */
#define ATLC_RFF1_ADDR__ED__SHIFT                                            16
#define ATLC_RFF1_ADDR__ED__WIDTH                                            16
#define ATLC_RFF1_ADDR__ED__MASK                                    0xffff0000U
#define ATLC_RFF1_ADDR__ED__READ(src)   (((uint32_t)(src) & 0xffff0000U) >> 16)
#define ATLC_RFF1_ADDR__ED__WRITE(src)  (((uint32_t)(src) << 16) & 0xffff0000U)
#define ATLC_RFF1_ADDR__ED__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffff0000U) | (((uint32_t)(src) <<\
                    16) & 0xffff0000U)
#define ATLC_RFF1_ADDR__ED__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0xffff0000U)))
#define ATLC_RFF1_ADDR__ED__RESET_VALUE                             0x00000c7eU
/** @} */
#define ATLC_RFF1_ADDR__TYPE                                           uint32_t
#define ATLC_RFF1_ADDR__READ                                        0xffffffffU
#define ATLC_RFF1_ADDR__WRITE                                       0xffffffffU
#define ATLC_RFF1_ADDR__PRESERVED                                   0x00000000U
#define ATLC_RFF1_ADDR__RESET_VALUE                                 0x0c7e0960U

#endif /* __ATLC_RFF1_ADDR_MACRO__ */

/** @} end of rff1_addr */

/* macros for BlueprintGlobalNameSpace::ATLC_tff2_addr */
/**
 * @defgroup at_lc_regs_core_tff2_addr tff2_addr
 * @brief Contains register fields associated with tff2_addr. definitions.
 * @{
 */
#ifndef __ATLC_TFF2_ADDR_MACRO__
#define __ATLC_TFF2_ADDR_MACRO__

/* macros for field st */
/**
 * @defgroup at_lc_regs_core_st_field st_field
 * @brief macros for field st
 * @details tx fifo node 2 start addr
 * @{
 */
#define ATLC_TFF2_ADDR__ST__SHIFT                                             0
#define ATLC_TFF2_ADDR__ST__WIDTH                                            16
#define ATLC_TFF2_ADDR__ST__MASK                                    0x0000ffffU
#define ATLC_TFF2_ADDR__ST__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF2_ADDR__ST__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF2_ADDR__ST__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_TFF2_ADDR__ST__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_TFF2_ADDR__ST__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field ed */
/**
 * @defgroup at_lc_regs_core_ed_field ed_field
 * @brief macros for field ed
 * @details tx fifo node 2 end addr
 * @{
 */
#define ATLC_TFF2_ADDR__ED__SHIFT                                            16
#define ATLC_TFF2_ADDR__ED__WIDTH                                            16
#define ATLC_TFF2_ADDR__ED__MASK                                    0xffff0000U
#define ATLC_TFF2_ADDR__ED__READ(src)   (((uint32_t)(src) & 0xffff0000U) >> 16)
#define ATLC_TFF2_ADDR__ED__WRITE(src)  (((uint32_t)(src) << 16) & 0xffff0000U)
#define ATLC_TFF2_ADDR__ED__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffff0000U) | (((uint32_t)(src) <<\
                    16) & 0xffff0000U)
#define ATLC_TFF2_ADDR__ED__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0xffff0000U)))
#define ATLC_TFF2_ADDR__ED__RESET_VALUE                             0x00000000U
/** @} */
#define ATLC_TFF2_ADDR__TYPE                                           uint32_t
#define ATLC_TFF2_ADDR__READ                                        0xffffffffU
#define ATLC_TFF2_ADDR__WRITE                                       0xffffffffU
#define ATLC_TFF2_ADDR__PRESERVED                                   0x00000000U
#define ATLC_TFF2_ADDR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_TFF2_ADDR_MACRO__ */

/** @} end of tff2_addr */

/* macros for BlueprintGlobalNameSpace::ATLC_rff2_addr */
/**
 * @defgroup at_lc_regs_core_rff2_addr rff2_addr
 * @brief Contains register fields associated with rff2_addr. definitions.
 * @{
 */
#ifndef __ATLC_RFF2_ADDR_MACRO__
#define __ATLC_RFF2_ADDR_MACRO__

/* macros for field st */
/**
 * @defgroup at_lc_regs_core_st_field st_field
 * @brief macros for field st
 * @details rx fifo node 2 start addr
 * @{
 */
#define ATLC_RFF2_ADDR__ST__SHIFT                                             0
#define ATLC_RFF2_ADDR__ST__WIDTH                                            16
#define ATLC_RFF2_ADDR__ST__MASK                                    0x0000ffffU
#define ATLC_RFF2_ADDR__ST__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF2_ADDR__ST__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF2_ADDR__ST__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_RFF2_ADDR__ST__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_RFF2_ADDR__ST__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field ed */
/**
 * @defgroup at_lc_regs_core_ed_field ed_field
 * @brief macros for field ed
 * @details rx fifo node 2 end addr
 * @{
 */
#define ATLC_RFF2_ADDR__ED__SHIFT                                            16
#define ATLC_RFF2_ADDR__ED__WIDTH                                            16
#define ATLC_RFF2_ADDR__ED__MASK                                    0xffff0000U
#define ATLC_RFF2_ADDR__ED__READ(src)   (((uint32_t)(src) & 0xffff0000U) >> 16)
#define ATLC_RFF2_ADDR__ED__WRITE(src)  (((uint32_t)(src) << 16) & 0xffff0000U)
#define ATLC_RFF2_ADDR__ED__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffff0000U) | (((uint32_t)(src) <<\
                    16) & 0xffff0000U)
#define ATLC_RFF2_ADDR__ED__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0xffff0000U)))
#define ATLC_RFF2_ADDR__ED__RESET_VALUE                             0x00000000U
/** @} */
#define ATLC_RFF2_ADDR__TYPE                                           uint32_t
#define ATLC_RFF2_ADDR__READ                                        0xffffffffU
#define ATLC_RFF2_ADDR__WRITE                                       0xffffffffU
#define ATLC_RFF2_ADDR__PRESERVED                                   0x00000000U
#define ATLC_RFF2_ADDR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_RFF2_ADDR_MACRO__ */

/** @} end of rff2_addr */

/* macros for BlueprintGlobalNameSpace::ATLC_tff3_addr */
/**
 * @defgroup at_lc_regs_core_tff3_addr tff3_addr
 * @brief Contains register fields associated with tff3_addr. definitions.
 * @{
 */
#ifndef __ATLC_TFF3_ADDR_MACRO__
#define __ATLC_TFF3_ADDR_MACRO__

/* macros for field st */
/**
 * @defgroup at_lc_regs_core_st_field st_field
 * @brief macros for field st
 * @details tx fifo node 3 start addr
 * @{
 */
#define ATLC_TFF3_ADDR__ST__SHIFT                                             0
#define ATLC_TFF3_ADDR__ST__WIDTH                                            16
#define ATLC_TFF3_ADDR__ST__MASK                                    0x0000ffffU
#define ATLC_TFF3_ADDR__ST__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF3_ADDR__ST__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF3_ADDR__ST__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_TFF3_ADDR__ST__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_TFF3_ADDR__ST__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field ed */
/**
 * @defgroup at_lc_regs_core_ed_field ed_field
 * @brief macros for field ed
 * @details tx fifo node 3 end addr
 * @{
 */
#define ATLC_TFF3_ADDR__ED__SHIFT                                            16
#define ATLC_TFF3_ADDR__ED__WIDTH                                            16
#define ATLC_TFF3_ADDR__ED__MASK                                    0xffff0000U
#define ATLC_TFF3_ADDR__ED__READ(src)   (((uint32_t)(src) & 0xffff0000U) >> 16)
#define ATLC_TFF3_ADDR__ED__WRITE(src)  (((uint32_t)(src) << 16) & 0xffff0000U)
#define ATLC_TFF3_ADDR__ED__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffff0000U) | (((uint32_t)(src) <<\
                    16) & 0xffff0000U)
#define ATLC_TFF3_ADDR__ED__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0xffff0000U)))
#define ATLC_TFF3_ADDR__ED__RESET_VALUE                             0x00000000U
/** @} */
#define ATLC_TFF3_ADDR__TYPE                                           uint32_t
#define ATLC_TFF3_ADDR__READ                                        0xffffffffU
#define ATLC_TFF3_ADDR__WRITE                                       0xffffffffU
#define ATLC_TFF3_ADDR__PRESERVED                                   0x00000000U
#define ATLC_TFF3_ADDR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_TFF3_ADDR_MACRO__ */

/** @} end of tff3_addr */

/* macros for BlueprintGlobalNameSpace::ATLC_rff3_addr */
/**
 * @defgroup at_lc_regs_core_rff3_addr rff3_addr
 * @brief Contains register fields associated with rff3_addr. definitions.
 * @{
 */
#ifndef __ATLC_RFF3_ADDR_MACRO__
#define __ATLC_RFF3_ADDR_MACRO__

/* macros for field st */
/**
 * @defgroup at_lc_regs_core_st_field st_field
 * @brief macros for field st
 * @details rx fifo node 3 start addr
 * @{
 */
#define ATLC_RFF3_ADDR__ST__SHIFT                                             0
#define ATLC_RFF3_ADDR__ST__WIDTH                                            16
#define ATLC_RFF3_ADDR__ST__MASK                                    0x0000ffffU
#define ATLC_RFF3_ADDR__ST__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF3_ADDR__ST__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF3_ADDR__ST__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_RFF3_ADDR__ST__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_RFF3_ADDR__ST__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field ed */
/**
 * @defgroup at_lc_regs_core_ed_field ed_field
 * @brief macros for field ed
 * @details rx fifo node 3 end addr
 * @{
 */
#define ATLC_RFF3_ADDR__ED__SHIFT                                            16
#define ATLC_RFF3_ADDR__ED__WIDTH                                            16
#define ATLC_RFF3_ADDR__ED__MASK                                    0xffff0000U
#define ATLC_RFF3_ADDR__ED__READ(src)   (((uint32_t)(src) & 0xffff0000U) >> 16)
#define ATLC_RFF3_ADDR__ED__WRITE(src)  (((uint32_t)(src) << 16) & 0xffff0000U)
#define ATLC_RFF3_ADDR__ED__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffff0000U) | (((uint32_t)(src) <<\
                    16) & 0xffff0000U)
#define ATLC_RFF3_ADDR__ED__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0xffff0000U)))
#define ATLC_RFF3_ADDR__ED__RESET_VALUE                             0x00000000U
/** @} */
#define ATLC_RFF3_ADDR__TYPE                                           uint32_t
#define ATLC_RFF3_ADDR__READ                                        0xffffffffU
#define ATLC_RFF3_ADDR__WRITE                                       0xffffffffU
#define ATLC_RFF3_ADDR__PRESERVED                                   0x00000000U
#define ATLC_RFF3_ADDR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_RFF3_ADDR_MACRO__ */

/** @} end of rff3_addr */

/* macros for BlueprintGlobalNameSpace::ATLC_tff4_addr */
/**
 * @defgroup at_lc_regs_core_tff4_addr tff4_addr
 * @brief Contains register fields associated with tff4_addr. definitions.
 * @{
 */
#ifndef __ATLC_TFF4_ADDR_MACRO__
#define __ATLC_TFF4_ADDR_MACRO__

/* macros for field st */
/**
 * @defgroup at_lc_regs_core_st_field st_field
 * @brief macros for field st
 * @details tx fifo node 4 start addr
 * @{
 */
#define ATLC_TFF4_ADDR__ST__SHIFT                                             0
#define ATLC_TFF4_ADDR__ST__WIDTH                                            16
#define ATLC_TFF4_ADDR__ST__MASK                                    0x0000ffffU
#define ATLC_TFF4_ADDR__ST__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF4_ADDR__ST__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF4_ADDR__ST__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_TFF4_ADDR__ST__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_TFF4_ADDR__ST__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field ed */
/**
 * @defgroup at_lc_regs_core_ed_field ed_field
 * @brief macros for field ed
 * @details tx fifo node 4 end addr
 * @{
 */
#define ATLC_TFF4_ADDR__ED__SHIFT                                            16
#define ATLC_TFF4_ADDR__ED__WIDTH                                            16
#define ATLC_TFF4_ADDR__ED__MASK                                    0xffff0000U
#define ATLC_TFF4_ADDR__ED__READ(src)   (((uint32_t)(src) & 0xffff0000U) >> 16)
#define ATLC_TFF4_ADDR__ED__WRITE(src)  (((uint32_t)(src) << 16) & 0xffff0000U)
#define ATLC_TFF4_ADDR__ED__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffff0000U) | (((uint32_t)(src) <<\
                    16) & 0xffff0000U)
#define ATLC_TFF4_ADDR__ED__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0xffff0000U)))
#define ATLC_TFF4_ADDR__ED__RESET_VALUE                             0x00000000U
/** @} */
#define ATLC_TFF4_ADDR__TYPE                                           uint32_t
#define ATLC_TFF4_ADDR__READ                                        0xffffffffU
#define ATLC_TFF4_ADDR__WRITE                                       0xffffffffU
#define ATLC_TFF4_ADDR__PRESERVED                                   0x00000000U
#define ATLC_TFF4_ADDR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_TFF4_ADDR_MACRO__ */

/** @} end of tff4_addr */

/* macros for BlueprintGlobalNameSpace::ATLC_rff4_addr */
/**
 * @defgroup at_lc_regs_core_rff4_addr rff4_addr
 * @brief Contains register fields associated with rff4_addr. definitions.
 * @{
 */
#ifndef __ATLC_RFF4_ADDR_MACRO__
#define __ATLC_RFF4_ADDR_MACRO__

/* macros for field st */
/**
 * @defgroup at_lc_regs_core_st_field st_field
 * @brief macros for field st
 * @details rx fifo node 4 start addr
 * @{
 */
#define ATLC_RFF4_ADDR__ST__SHIFT                                             0
#define ATLC_RFF4_ADDR__ST__WIDTH                                            16
#define ATLC_RFF4_ADDR__ST__MASK                                    0x0000ffffU
#define ATLC_RFF4_ADDR__ST__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF4_ADDR__ST__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF4_ADDR__ST__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_RFF4_ADDR__ST__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_RFF4_ADDR__ST__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field ed */
/**
 * @defgroup at_lc_regs_core_ed_field ed_field
 * @brief macros for field ed
 * @details rx fifo node 4 end addr
 * @{
 */
#define ATLC_RFF4_ADDR__ED__SHIFT                                            16
#define ATLC_RFF4_ADDR__ED__WIDTH                                            16
#define ATLC_RFF4_ADDR__ED__MASK                                    0xffff0000U
#define ATLC_RFF4_ADDR__ED__READ(src)   (((uint32_t)(src) & 0xffff0000U) >> 16)
#define ATLC_RFF4_ADDR__ED__WRITE(src)  (((uint32_t)(src) << 16) & 0xffff0000U)
#define ATLC_RFF4_ADDR__ED__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffff0000U) | (((uint32_t)(src) <<\
                    16) & 0xffff0000U)
#define ATLC_RFF4_ADDR__ED__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0xffff0000U)))
#define ATLC_RFF4_ADDR__ED__RESET_VALUE                             0x00000000U
/** @} */
#define ATLC_RFF4_ADDR__TYPE                                           uint32_t
#define ATLC_RFF4_ADDR__READ                                        0xffffffffU
#define ATLC_RFF4_ADDR__WRITE                                       0xffffffffU
#define ATLC_RFF4_ADDR__PRESERVED                                   0x00000000U
#define ATLC_RFF4_ADDR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_RFF4_ADDR_MACRO__ */

/** @} end of rff4_addr */

/* macros for BlueprintGlobalNameSpace::ATLC_tff5_addr */
/**
 * @defgroup at_lc_regs_core_tff5_addr tff5_addr
 * @brief Contains register fields associated with tff5_addr. definitions.
 * @{
 */
#ifndef __ATLC_TFF5_ADDR_MACRO__
#define __ATLC_TFF5_ADDR_MACRO__

/* macros for field st */
/**
 * @defgroup at_lc_regs_core_st_field st_field
 * @brief macros for field st
 * @details tx fifo node 5 start addr
 * @{
 */
#define ATLC_TFF5_ADDR__ST__SHIFT                                             0
#define ATLC_TFF5_ADDR__ST__WIDTH                                            16
#define ATLC_TFF5_ADDR__ST__MASK                                    0x0000ffffU
#define ATLC_TFF5_ADDR__ST__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF5_ADDR__ST__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF5_ADDR__ST__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_TFF5_ADDR__ST__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_TFF5_ADDR__ST__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field ed */
/**
 * @defgroup at_lc_regs_core_ed_field ed_field
 * @brief macros for field ed
 * @details tx fifo node 5 end addr
 * @{
 */
#define ATLC_TFF5_ADDR__ED__SHIFT                                            16
#define ATLC_TFF5_ADDR__ED__WIDTH                                            16
#define ATLC_TFF5_ADDR__ED__MASK                                    0xffff0000U
#define ATLC_TFF5_ADDR__ED__READ(src)   (((uint32_t)(src) & 0xffff0000U) >> 16)
#define ATLC_TFF5_ADDR__ED__WRITE(src)  (((uint32_t)(src) << 16) & 0xffff0000U)
#define ATLC_TFF5_ADDR__ED__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffff0000U) | (((uint32_t)(src) <<\
                    16) & 0xffff0000U)
#define ATLC_TFF5_ADDR__ED__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0xffff0000U)))
#define ATLC_TFF5_ADDR__ED__RESET_VALUE                             0x00000000U
/** @} */
#define ATLC_TFF5_ADDR__TYPE                                           uint32_t
#define ATLC_TFF5_ADDR__READ                                        0xffffffffU
#define ATLC_TFF5_ADDR__WRITE                                       0xffffffffU
#define ATLC_TFF5_ADDR__PRESERVED                                   0x00000000U
#define ATLC_TFF5_ADDR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_TFF5_ADDR_MACRO__ */

/** @} end of tff5_addr */

/* macros for BlueprintGlobalNameSpace::ATLC_rff5_addr */
/**
 * @defgroup at_lc_regs_core_rff5_addr rff5_addr
 * @brief Contains register fields associated with rff5_addr. definitions.
 * @{
 */
#ifndef __ATLC_RFF5_ADDR_MACRO__
#define __ATLC_RFF5_ADDR_MACRO__

/* macros for field st */
/**
 * @defgroup at_lc_regs_core_st_field st_field
 * @brief macros for field st
 * @details rx fifo node 5 start addr
 * @{
 */
#define ATLC_RFF5_ADDR__ST__SHIFT                                             0
#define ATLC_RFF5_ADDR__ST__WIDTH                                            16
#define ATLC_RFF5_ADDR__ST__MASK                                    0x0000ffffU
#define ATLC_RFF5_ADDR__ST__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF5_ADDR__ST__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF5_ADDR__ST__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_RFF5_ADDR__ST__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_RFF5_ADDR__ST__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field ed */
/**
 * @defgroup at_lc_regs_core_ed_field ed_field
 * @brief macros for field ed
 * @details rx fifo node 5 end addr
 * @{
 */
#define ATLC_RFF5_ADDR__ED__SHIFT                                            16
#define ATLC_RFF5_ADDR__ED__WIDTH                                            16
#define ATLC_RFF5_ADDR__ED__MASK                                    0xffff0000U
#define ATLC_RFF5_ADDR__ED__READ(src)   (((uint32_t)(src) & 0xffff0000U) >> 16)
#define ATLC_RFF5_ADDR__ED__WRITE(src)  (((uint32_t)(src) << 16) & 0xffff0000U)
#define ATLC_RFF5_ADDR__ED__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffff0000U) | (((uint32_t)(src) <<\
                    16) & 0xffff0000U)
#define ATLC_RFF5_ADDR__ED__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0xffff0000U)))
#define ATLC_RFF5_ADDR__ED__RESET_VALUE                             0x00000000U
/** @} */
#define ATLC_RFF5_ADDR__TYPE                                           uint32_t
#define ATLC_RFF5_ADDR__READ                                        0xffffffffU
#define ATLC_RFF5_ADDR__WRITE                                       0xffffffffU
#define ATLC_RFF5_ADDR__PRESERVED                                   0x00000000U
#define ATLC_RFF5_ADDR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_RFF5_ADDR_MACRO__ */

/** @} end of rff5_addr */

/* macros for BlueprintGlobalNameSpace::ATLC_tff6_addr */
/**
 * @defgroup at_lc_regs_core_tff6_addr tff6_addr
 * @brief Contains register fields associated with tff6_addr. definitions.
 * @{
 */
#ifndef __ATLC_TFF6_ADDR_MACRO__
#define __ATLC_TFF6_ADDR_MACRO__

/* macros for field st */
/**
 * @defgroup at_lc_regs_core_st_field st_field
 * @brief macros for field st
 * @details tx fifo node 6 start addr
 * @{
 */
#define ATLC_TFF6_ADDR__ST__SHIFT                                             0
#define ATLC_TFF6_ADDR__ST__WIDTH                                            16
#define ATLC_TFF6_ADDR__ST__MASK                                    0x0000ffffU
#define ATLC_TFF6_ADDR__ST__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF6_ADDR__ST__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF6_ADDR__ST__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_TFF6_ADDR__ST__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_TFF6_ADDR__ST__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field ed */
/**
 * @defgroup at_lc_regs_core_ed_field ed_field
 * @brief macros for field ed
 * @details tx fifo node 6 end addr
 * @{
 */
#define ATLC_TFF6_ADDR__ED__SHIFT                                            16
#define ATLC_TFF6_ADDR__ED__WIDTH                                            16
#define ATLC_TFF6_ADDR__ED__MASK                                    0xffff0000U
#define ATLC_TFF6_ADDR__ED__READ(src)   (((uint32_t)(src) & 0xffff0000U) >> 16)
#define ATLC_TFF6_ADDR__ED__WRITE(src)  (((uint32_t)(src) << 16) & 0xffff0000U)
#define ATLC_TFF6_ADDR__ED__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffff0000U) | (((uint32_t)(src) <<\
                    16) & 0xffff0000U)
#define ATLC_TFF6_ADDR__ED__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0xffff0000U)))
#define ATLC_TFF6_ADDR__ED__RESET_VALUE                             0x00000000U
/** @} */
#define ATLC_TFF6_ADDR__TYPE                                           uint32_t
#define ATLC_TFF6_ADDR__READ                                        0xffffffffU
#define ATLC_TFF6_ADDR__WRITE                                       0xffffffffU
#define ATLC_TFF6_ADDR__PRESERVED                                   0x00000000U
#define ATLC_TFF6_ADDR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_TFF6_ADDR_MACRO__ */

/** @} end of tff6_addr */

/* macros for BlueprintGlobalNameSpace::ATLC_rff6_addr */
/**
 * @defgroup at_lc_regs_core_rff6_addr rff6_addr
 * @brief Contains register fields associated with rff6_addr. definitions.
 * @{
 */
#ifndef __ATLC_RFF6_ADDR_MACRO__
#define __ATLC_RFF6_ADDR_MACRO__

/* macros for field st */
/**
 * @defgroup at_lc_regs_core_st_field st_field
 * @brief macros for field st
 * @details rx fifo node 6 start addr
 * @{
 */
#define ATLC_RFF6_ADDR__ST__SHIFT                                             0
#define ATLC_RFF6_ADDR__ST__WIDTH                                            16
#define ATLC_RFF6_ADDR__ST__MASK                                    0x0000ffffU
#define ATLC_RFF6_ADDR__ST__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF6_ADDR__ST__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF6_ADDR__ST__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_RFF6_ADDR__ST__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_RFF6_ADDR__ST__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field ed */
/**
 * @defgroup at_lc_regs_core_ed_field ed_field
 * @brief macros for field ed
 * @details rx fifo node 6 end addr
 * @{
 */
#define ATLC_RFF6_ADDR__ED__SHIFT                                            16
#define ATLC_RFF6_ADDR__ED__WIDTH                                            16
#define ATLC_RFF6_ADDR__ED__MASK                                    0xffff0000U
#define ATLC_RFF6_ADDR__ED__READ(src)   (((uint32_t)(src) & 0xffff0000U) >> 16)
#define ATLC_RFF6_ADDR__ED__WRITE(src)  (((uint32_t)(src) << 16) & 0xffff0000U)
#define ATLC_RFF6_ADDR__ED__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffff0000U) | (((uint32_t)(src) <<\
                    16) & 0xffff0000U)
#define ATLC_RFF6_ADDR__ED__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0xffff0000U)))
#define ATLC_RFF6_ADDR__ED__RESET_VALUE                             0x00000000U
/** @} */
#define ATLC_RFF6_ADDR__TYPE                                           uint32_t
#define ATLC_RFF6_ADDR__READ                                        0xffffffffU
#define ATLC_RFF6_ADDR__WRITE                                       0xffffffffU
#define ATLC_RFF6_ADDR__PRESERVED                                   0x00000000U
#define ATLC_RFF6_ADDR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_RFF6_ADDR_MACRO__ */

/** @} end of rff6_addr */

/* macros for BlueprintGlobalNameSpace::ATLC_tff7_addr */
/**
 * @defgroup at_lc_regs_core_tff7_addr tff7_addr
 * @brief Contains register fields associated with tff7_addr. definitions.
 * @{
 */
#ifndef __ATLC_TFF7_ADDR_MACRO__
#define __ATLC_TFF7_ADDR_MACRO__

/* macros for field st */
/**
 * @defgroup at_lc_regs_core_st_field st_field
 * @brief macros for field st
 * @details tx fifo node 7 start addr
 * @{
 */
#define ATLC_TFF7_ADDR__ST__SHIFT                                             0
#define ATLC_TFF7_ADDR__ST__WIDTH                                            16
#define ATLC_TFF7_ADDR__ST__MASK                                    0x0000ffffU
#define ATLC_TFF7_ADDR__ST__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF7_ADDR__ST__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF7_ADDR__ST__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_TFF7_ADDR__ST__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_TFF7_ADDR__ST__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field ed */
/**
 * @defgroup at_lc_regs_core_ed_field ed_field
 * @brief macros for field ed
 * @details tx fifo node 7 end addr
 * @{
 */
#define ATLC_TFF7_ADDR__ED__SHIFT                                            16
#define ATLC_TFF7_ADDR__ED__WIDTH                                            16
#define ATLC_TFF7_ADDR__ED__MASK                                    0xffff0000U
#define ATLC_TFF7_ADDR__ED__READ(src)   (((uint32_t)(src) & 0xffff0000U) >> 16)
#define ATLC_TFF7_ADDR__ED__WRITE(src)  (((uint32_t)(src) << 16) & 0xffff0000U)
#define ATLC_TFF7_ADDR__ED__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffff0000U) | (((uint32_t)(src) <<\
                    16) & 0xffff0000U)
#define ATLC_TFF7_ADDR__ED__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0xffff0000U)))
#define ATLC_TFF7_ADDR__ED__RESET_VALUE                             0x00000000U
/** @} */
#define ATLC_TFF7_ADDR__TYPE                                           uint32_t
#define ATLC_TFF7_ADDR__READ                                        0xffffffffU
#define ATLC_TFF7_ADDR__WRITE                                       0xffffffffU
#define ATLC_TFF7_ADDR__PRESERVED                                   0x00000000U
#define ATLC_TFF7_ADDR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_TFF7_ADDR_MACRO__ */

/** @} end of tff7_addr */

/* macros for BlueprintGlobalNameSpace::ATLC_rff7_addr */
/**
 * @defgroup at_lc_regs_core_rff7_addr rff7_addr
 * @brief Contains register fields associated with rff7_addr. definitions.
 * @{
 */
#ifndef __ATLC_RFF7_ADDR_MACRO__
#define __ATLC_RFF7_ADDR_MACRO__

/* macros for field st */
/**
 * @defgroup at_lc_regs_core_st_field st_field
 * @brief macros for field st
 * @details rx fifo node 7 start addr
 * @{
 */
#define ATLC_RFF7_ADDR__ST__SHIFT                                             0
#define ATLC_RFF7_ADDR__ST__WIDTH                                            16
#define ATLC_RFF7_ADDR__ST__MASK                                    0x0000ffffU
#define ATLC_RFF7_ADDR__ST__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF7_ADDR__ST__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF7_ADDR__ST__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_RFF7_ADDR__ST__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_RFF7_ADDR__ST__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field ed */
/**
 * @defgroup at_lc_regs_core_ed_field ed_field
 * @brief macros for field ed
 * @details rx fifo node 7 end addr
 * @{
 */
#define ATLC_RFF7_ADDR__ED__SHIFT                                            16
#define ATLC_RFF7_ADDR__ED__WIDTH                                            16
#define ATLC_RFF7_ADDR__ED__MASK                                    0xffff0000U
#define ATLC_RFF7_ADDR__ED__READ(src)   (((uint32_t)(src) & 0xffff0000U) >> 16)
#define ATLC_RFF7_ADDR__ED__WRITE(src)  (((uint32_t)(src) << 16) & 0xffff0000U)
#define ATLC_RFF7_ADDR__ED__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffff0000U) | (((uint32_t)(src) <<\
                    16) & 0xffff0000U)
#define ATLC_RFF7_ADDR__ED__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0xffff0000U)))
#define ATLC_RFF7_ADDR__ED__RESET_VALUE                             0x00000000U
/** @} */
#define ATLC_RFF7_ADDR__TYPE                                           uint32_t
#define ATLC_RFF7_ADDR__READ                                        0xffffffffU
#define ATLC_RFF7_ADDR__WRITE                                       0xffffffffU
#define ATLC_RFF7_ADDR__PRESERVED                                   0x00000000U
#define ATLC_RFF7_ADDR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_RFF7_ADDR_MACRO__ */

/** @} end of rff7_addr */

/* macros for BlueprintGlobalNameSpace::ATLC_tff0_rptr */
/**
 * @defgroup at_lc_regs_core_tff0_rptr tff0_rptr
 * @brief Contains register fields associated with tff0_rptr. definitions.
 * @{
 */
#ifndef __ATLC_TFF0_RPTR_MACRO__
#define __ATLC_TFF0_RPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details tx fifo node 0 read pointer
 * @{
 */
#define ATLC_TFF0_RPTR__VL__SHIFT                                             0
#define ATLC_TFF0_RPTR__VL__WIDTH                                            16
#define ATLC_TFF0_RPTR__VL__MASK                                    0x0000ffffU
#define ATLC_TFF0_RPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF0_RPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit
 * @{
 */
#define ATLC_TFF0_RPTR__VL_WRP__SHIFT                                        16
#define ATLC_TFF0_RPTR__VL_WRP__WIDTH                                         1
#define ATLC_TFF0_RPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_TFF0_RPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_TFF0_RPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_TFF0_RPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_TFF0_RPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_TFF0_RPTR__TYPE                                           uint32_t
#define ATLC_TFF0_RPTR__READ                                        0x0001ffffU
#define ATLC_TFF0_RPTR__PRESERVED                                   0x00000000U
#define ATLC_TFF0_RPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_TFF0_RPTR_MACRO__ */

/** @} end of tff0_rptr */

/* macros for BlueprintGlobalNameSpace::ATLC_tff0_wptr */
/**
 * @defgroup at_lc_regs_core_tff0_wptr tff0_wptr
 * @brief Contains register fields associated with tff0_wptr. definitions.
 * @{
 */
#ifndef __ATLC_TFF0_WPTR_MACRO__
#define __ATLC_TFF0_WPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details tx fifo node 0 write pointer
 * @{
 */
#define ATLC_TFF0_WPTR__VL__SHIFT                                             0
#define ATLC_TFF0_WPTR__VL__WIDTH                                            16
#define ATLC_TFF0_WPTR__VL__MASK                                    0x0000ffffU
#define ATLC_TFF0_WPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF0_WPTR__VL__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF0_WPTR__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_TFF0_WPTR__VL__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_TFF0_WPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit. It should be flipped when write pointer wraps at end addr
 * @{
 */
#define ATLC_TFF0_WPTR__VL_WRP__SHIFT                                        16
#define ATLC_TFF0_WPTR__VL_WRP__WIDTH                                         1
#define ATLC_TFF0_WPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_TFF0_WPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_TFF0_WPTR__VL_WRP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00010000U)
#define ATLC_TFF0_WPTR__VL_WRP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | (((uint32_t)(src) <<\
                    16) & 0x00010000U)
#define ATLC_TFF0_WPTR__VL_WRP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00010000U)))
#define ATLC_TFF0_WPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_TFF0_WPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_TFF0_WPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_TFF0_WPTR__TYPE                                           uint32_t
#define ATLC_TFF0_WPTR__READ                                        0x0001ffffU
#define ATLC_TFF0_WPTR__WRITE                                       0x0001ffffU
#define ATLC_TFF0_WPTR__PRESERVED                                   0x00000000U
#define ATLC_TFF0_WPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_TFF0_WPTR_MACRO__ */

/** @} end of tff0_wptr */

/* macros for BlueprintGlobalNameSpace::ATLC_rff0_rptr */
/**
 * @defgroup at_lc_regs_core_rff0_rptr rff0_rptr
 * @brief Contains register fields associated with rff0_rptr. definitions.
 * @{
 */
#ifndef __ATLC_RFF0_RPTR_MACRO__
#define __ATLC_RFF0_RPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details rx fifo node 0 read pointer
 * @{
 */
#define ATLC_RFF0_RPTR__VL__SHIFT                                             0
#define ATLC_RFF0_RPTR__VL__WIDTH                                            16
#define ATLC_RFF0_RPTR__VL__MASK                                    0x0000ffffU
#define ATLC_RFF0_RPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF0_RPTR__VL__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF0_RPTR__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_RFF0_RPTR__VL__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_RFF0_RPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit. It should be flipped when read pointer wraps at end addr
 * @{
 */
#define ATLC_RFF0_RPTR__VL_WRP__SHIFT                                        16
#define ATLC_RFF0_RPTR__VL_WRP__WIDTH                                         1
#define ATLC_RFF0_RPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_RFF0_RPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_RFF0_RPTR__VL_WRP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00010000U)
#define ATLC_RFF0_RPTR__VL_WRP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | (((uint32_t)(src) <<\
                    16) & 0x00010000U)
#define ATLC_RFF0_RPTR__VL_WRP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00010000U)))
#define ATLC_RFF0_RPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_RFF0_RPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_RFF0_RPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_RFF0_RPTR__TYPE                                           uint32_t
#define ATLC_RFF0_RPTR__READ                                        0x0001ffffU
#define ATLC_RFF0_RPTR__WRITE                                       0x0001ffffU
#define ATLC_RFF0_RPTR__PRESERVED                                   0x00000000U
#define ATLC_RFF0_RPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_RFF0_RPTR_MACRO__ */

/** @} end of rff0_rptr */

/* macros for BlueprintGlobalNameSpace::ATLC_rff0_wptr */
/**
 * @defgroup at_lc_regs_core_rff0_wptr rff0_wptr
 * @brief Contains register fields associated with rff0_wptr. definitions.
 * @{
 */
#ifndef __ATLC_RFF0_WPTR_MACRO__
#define __ATLC_RFF0_WPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details rx fifo node 0 write pointer
 * @{
 */
#define ATLC_RFF0_WPTR__VL__SHIFT                                             0
#define ATLC_RFF0_WPTR__VL__WIDTH                                            16
#define ATLC_RFF0_WPTR__VL__MASK                                    0x0000ffffU
#define ATLC_RFF0_WPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF0_WPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit
 * @{
 */
#define ATLC_RFF0_WPTR__VL_WRP__SHIFT                                        16
#define ATLC_RFF0_WPTR__VL_WRP__WIDTH                                         1
#define ATLC_RFF0_WPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_RFF0_WPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_RFF0_WPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_RFF0_WPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_RFF0_WPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_RFF0_WPTR__TYPE                                           uint32_t
#define ATLC_RFF0_WPTR__READ                                        0x0001ffffU
#define ATLC_RFF0_WPTR__PRESERVED                                   0x00000000U
#define ATLC_RFF0_WPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_RFF0_WPTR_MACRO__ */

/** @} end of rff0_wptr */

/* macros for BlueprintGlobalNameSpace::ATLC_tff1_rptr */
/**
 * @defgroup at_lc_regs_core_tff1_rptr tff1_rptr
 * @brief Contains register fields associated with tff1_rptr. definitions.
 * @{
 */
#ifndef __ATLC_TFF1_RPTR_MACRO__
#define __ATLC_TFF1_RPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details tx fifo node 1 read pointer
 * @{
 */
#define ATLC_TFF1_RPTR__VL__SHIFT                                             0
#define ATLC_TFF1_RPTR__VL__WIDTH                                            16
#define ATLC_TFF1_RPTR__VL__MASK                                    0x0000ffffU
#define ATLC_TFF1_RPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF1_RPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit
 * @{
 */
#define ATLC_TFF1_RPTR__VL_WRP__SHIFT                                        16
#define ATLC_TFF1_RPTR__VL_WRP__WIDTH                                         1
#define ATLC_TFF1_RPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_TFF1_RPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_TFF1_RPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_TFF1_RPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_TFF1_RPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_TFF1_RPTR__TYPE                                           uint32_t
#define ATLC_TFF1_RPTR__READ                                        0x0001ffffU
#define ATLC_TFF1_RPTR__PRESERVED                                   0x00000000U
#define ATLC_TFF1_RPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_TFF1_RPTR_MACRO__ */

/** @} end of tff1_rptr */

/* macros for BlueprintGlobalNameSpace::ATLC_tff1_wptr */
/**
 * @defgroup at_lc_regs_core_tff1_wptr tff1_wptr
 * @brief Contains register fields associated with tff1_wptr. definitions.
 * @{
 */
#ifndef __ATLC_TFF1_WPTR_MACRO__
#define __ATLC_TFF1_WPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details tx fifo node 1 write pointer
 * @{
 */
#define ATLC_TFF1_WPTR__VL__SHIFT                                             0
#define ATLC_TFF1_WPTR__VL__WIDTH                                            16
#define ATLC_TFF1_WPTR__VL__MASK                                    0x0000ffffU
#define ATLC_TFF1_WPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF1_WPTR__VL__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF1_WPTR__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_TFF1_WPTR__VL__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_TFF1_WPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit. It should be flipped when write pointer wraps at end addr
 * @{
 */
#define ATLC_TFF1_WPTR__VL_WRP__SHIFT                                        16
#define ATLC_TFF1_WPTR__VL_WRP__WIDTH                                         1
#define ATLC_TFF1_WPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_TFF1_WPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_TFF1_WPTR__VL_WRP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00010000U)
#define ATLC_TFF1_WPTR__VL_WRP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | (((uint32_t)(src) <<\
                    16) & 0x00010000U)
#define ATLC_TFF1_WPTR__VL_WRP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00010000U)))
#define ATLC_TFF1_WPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_TFF1_WPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_TFF1_WPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_TFF1_WPTR__TYPE                                           uint32_t
#define ATLC_TFF1_WPTR__READ                                        0x0001ffffU
#define ATLC_TFF1_WPTR__WRITE                                       0x0001ffffU
#define ATLC_TFF1_WPTR__PRESERVED                                   0x00000000U
#define ATLC_TFF1_WPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_TFF1_WPTR_MACRO__ */

/** @} end of tff1_wptr */

/* macros for BlueprintGlobalNameSpace::ATLC_rff1_rptr */
/**
 * @defgroup at_lc_regs_core_rff1_rptr rff1_rptr
 * @brief Contains register fields associated with rff1_rptr. definitions.
 * @{
 */
#ifndef __ATLC_RFF1_RPTR_MACRO__
#define __ATLC_RFF1_RPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details rx fifo node 1 read pointer
 * @{
 */
#define ATLC_RFF1_RPTR__VL__SHIFT                                             0
#define ATLC_RFF1_RPTR__VL__WIDTH                                            16
#define ATLC_RFF1_RPTR__VL__MASK                                    0x0000ffffU
#define ATLC_RFF1_RPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF1_RPTR__VL__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF1_RPTR__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_RFF1_RPTR__VL__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_RFF1_RPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit. It should be flipped when read pointer wraps at end addr
 * @{
 */
#define ATLC_RFF1_RPTR__VL_WRP__SHIFT                                        16
#define ATLC_RFF1_RPTR__VL_WRP__WIDTH                                         1
#define ATLC_RFF1_RPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_RFF1_RPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_RFF1_RPTR__VL_WRP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00010000U)
#define ATLC_RFF1_RPTR__VL_WRP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | (((uint32_t)(src) <<\
                    16) & 0x00010000U)
#define ATLC_RFF1_RPTR__VL_WRP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00010000U)))
#define ATLC_RFF1_RPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_RFF1_RPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_RFF1_RPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_RFF1_RPTR__TYPE                                           uint32_t
#define ATLC_RFF1_RPTR__READ                                        0x0001ffffU
#define ATLC_RFF1_RPTR__WRITE                                       0x0001ffffU
#define ATLC_RFF1_RPTR__PRESERVED                                   0x00000000U
#define ATLC_RFF1_RPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_RFF1_RPTR_MACRO__ */

/** @} end of rff1_rptr */

/* macros for BlueprintGlobalNameSpace::ATLC_rff1_wptr */
/**
 * @defgroup at_lc_regs_core_rff1_wptr rff1_wptr
 * @brief Contains register fields associated with rff1_wptr. definitions.
 * @{
 */
#ifndef __ATLC_RFF1_WPTR_MACRO__
#define __ATLC_RFF1_WPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details rx fifo node 1 write pointer
 * @{
 */
#define ATLC_RFF1_WPTR__VL__SHIFT                                             0
#define ATLC_RFF1_WPTR__VL__WIDTH                                            16
#define ATLC_RFF1_WPTR__VL__MASK                                    0x0000ffffU
#define ATLC_RFF1_WPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF1_WPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit
 * @{
 */
#define ATLC_RFF1_WPTR__VL_WRP__SHIFT                                        16
#define ATLC_RFF1_WPTR__VL_WRP__WIDTH                                         1
#define ATLC_RFF1_WPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_RFF1_WPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_RFF1_WPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_RFF1_WPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_RFF1_WPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_RFF1_WPTR__TYPE                                           uint32_t
#define ATLC_RFF1_WPTR__READ                                        0x0001ffffU
#define ATLC_RFF1_WPTR__PRESERVED                                   0x00000000U
#define ATLC_RFF1_WPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_RFF1_WPTR_MACRO__ */

/** @} end of rff1_wptr */

/* macros for BlueprintGlobalNameSpace::ATLC_tff2_rptr */
/**
 * @defgroup at_lc_regs_core_tff2_rptr tff2_rptr
 * @brief Contains register fields associated with tff2_rptr. definitions.
 * @{
 */
#ifndef __ATLC_TFF2_RPTR_MACRO__
#define __ATLC_TFF2_RPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details tx fifo node 2 read pointer
 * @{
 */
#define ATLC_TFF2_RPTR__VL__SHIFT                                             0
#define ATLC_TFF2_RPTR__VL__WIDTH                                            16
#define ATLC_TFF2_RPTR__VL__MASK                                    0x0000ffffU
#define ATLC_TFF2_RPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF2_RPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit
 * @{
 */
#define ATLC_TFF2_RPTR__VL_WRP__SHIFT                                        16
#define ATLC_TFF2_RPTR__VL_WRP__WIDTH                                         1
#define ATLC_TFF2_RPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_TFF2_RPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_TFF2_RPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_TFF2_RPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_TFF2_RPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_TFF2_RPTR__TYPE                                           uint32_t
#define ATLC_TFF2_RPTR__READ                                        0x0001ffffU
#define ATLC_TFF2_RPTR__PRESERVED                                   0x00000000U
#define ATLC_TFF2_RPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_TFF2_RPTR_MACRO__ */

/** @} end of tff2_rptr */

/* macros for BlueprintGlobalNameSpace::ATLC_tff2_wptr */
/**
 * @defgroup at_lc_regs_core_tff2_wptr tff2_wptr
 * @brief Contains register fields associated with tff2_wptr. definitions.
 * @{
 */
#ifndef __ATLC_TFF2_WPTR_MACRO__
#define __ATLC_TFF2_WPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details tx fifo node 2 write pointer
 * @{
 */
#define ATLC_TFF2_WPTR__VL__SHIFT                                             0
#define ATLC_TFF2_WPTR__VL__WIDTH                                            16
#define ATLC_TFF2_WPTR__VL__MASK                                    0x0000ffffU
#define ATLC_TFF2_WPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF2_WPTR__VL__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF2_WPTR__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_TFF2_WPTR__VL__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_TFF2_WPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit. It should be flipped when write pointer wraps at end addr
 * @{
 */
#define ATLC_TFF2_WPTR__VL_WRP__SHIFT                                        16
#define ATLC_TFF2_WPTR__VL_WRP__WIDTH                                         1
#define ATLC_TFF2_WPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_TFF2_WPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_TFF2_WPTR__VL_WRP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00010000U)
#define ATLC_TFF2_WPTR__VL_WRP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | (((uint32_t)(src) <<\
                    16) & 0x00010000U)
#define ATLC_TFF2_WPTR__VL_WRP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00010000U)))
#define ATLC_TFF2_WPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_TFF2_WPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_TFF2_WPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_TFF2_WPTR__TYPE                                           uint32_t
#define ATLC_TFF2_WPTR__READ                                        0x0001ffffU
#define ATLC_TFF2_WPTR__WRITE                                       0x0001ffffU
#define ATLC_TFF2_WPTR__PRESERVED                                   0x00000000U
#define ATLC_TFF2_WPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_TFF2_WPTR_MACRO__ */

/** @} end of tff2_wptr */

/* macros for BlueprintGlobalNameSpace::ATLC_rff2_rptr */
/**
 * @defgroup at_lc_regs_core_rff2_rptr rff2_rptr
 * @brief Contains register fields associated with rff2_rptr. definitions.
 * @{
 */
#ifndef __ATLC_RFF2_RPTR_MACRO__
#define __ATLC_RFF2_RPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details rx fifo node 2 read pointer
 * @{
 */
#define ATLC_RFF2_RPTR__VL__SHIFT                                             0
#define ATLC_RFF2_RPTR__VL__WIDTH                                            16
#define ATLC_RFF2_RPTR__VL__MASK                                    0x0000ffffU
#define ATLC_RFF2_RPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF2_RPTR__VL__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF2_RPTR__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_RFF2_RPTR__VL__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_RFF2_RPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit. It should be flipped when read pointer wraps at end addr
 * @{
 */
#define ATLC_RFF2_RPTR__VL_WRP__SHIFT                                        16
#define ATLC_RFF2_RPTR__VL_WRP__WIDTH                                         1
#define ATLC_RFF2_RPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_RFF2_RPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_RFF2_RPTR__VL_WRP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00010000U)
#define ATLC_RFF2_RPTR__VL_WRP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | (((uint32_t)(src) <<\
                    16) & 0x00010000U)
#define ATLC_RFF2_RPTR__VL_WRP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00010000U)))
#define ATLC_RFF2_RPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_RFF2_RPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_RFF2_RPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_RFF2_RPTR__TYPE                                           uint32_t
#define ATLC_RFF2_RPTR__READ                                        0x0001ffffU
#define ATLC_RFF2_RPTR__WRITE                                       0x0001ffffU
#define ATLC_RFF2_RPTR__PRESERVED                                   0x00000000U
#define ATLC_RFF2_RPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_RFF2_RPTR_MACRO__ */

/** @} end of rff2_rptr */

/* macros for BlueprintGlobalNameSpace::ATLC_rff2_wptr */
/**
 * @defgroup at_lc_regs_core_rff2_wptr rff2_wptr
 * @brief Contains register fields associated with rff2_wptr. definitions.
 * @{
 */
#ifndef __ATLC_RFF2_WPTR_MACRO__
#define __ATLC_RFF2_WPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details rx fifo node 2 write pointer
 * @{
 */
#define ATLC_RFF2_WPTR__VL__SHIFT                                             0
#define ATLC_RFF2_WPTR__VL__WIDTH                                            16
#define ATLC_RFF2_WPTR__VL__MASK                                    0x0000ffffU
#define ATLC_RFF2_WPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF2_WPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit
 * @{
 */
#define ATLC_RFF2_WPTR__VL_WRP__SHIFT                                        16
#define ATLC_RFF2_WPTR__VL_WRP__WIDTH                                         1
#define ATLC_RFF2_WPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_RFF2_WPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_RFF2_WPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_RFF2_WPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_RFF2_WPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_RFF2_WPTR__TYPE                                           uint32_t
#define ATLC_RFF2_WPTR__READ                                        0x0001ffffU
#define ATLC_RFF2_WPTR__PRESERVED                                   0x00000000U
#define ATLC_RFF2_WPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_RFF2_WPTR_MACRO__ */

/** @} end of rff2_wptr */

/* macros for BlueprintGlobalNameSpace::ATLC_tff3_rptr */
/**
 * @defgroup at_lc_regs_core_tff3_rptr tff3_rptr
 * @brief Contains register fields associated with tff3_rptr. definitions.
 * @{
 */
#ifndef __ATLC_TFF3_RPTR_MACRO__
#define __ATLC_TFF3_RPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details tx fifo node 3 read pointer
 * @{
 */
#define ATLC_TFF3_RPTR__VL__SHIFT                                             0
#define ATLC_TFF3_RPTR__VL__WIDTH                                            16
#define ATLC_TFF3_RPTR__VL__MASK                                    0x0000ffffU
#define ATLC_TFF3_RPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF3_RPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit
 * @{
 */
#define ATLC_TFF3_RPTR__VL_WRP__SHIFT                                        16
#define ATLC_TFF3_RPTR__VL_WRP__WIDTH                                         1
#define ATLC_TFF3_RPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_TFF3_RPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_TFF3_RPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_TFF3_RPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_TFF3_RPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_TFF3_RPTR__TYPE                                           uint32_t
#define ATLC_TFF3_RPTR__READ                                        0x0001ffffU
#define ATLC_TFF3_RPTR__PRESERVED                                   0x00000000U
#define ATLC_TFF3_RPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_TFF3_RPTR_MACRO__ */

/** @} end of tff3_rptr */

/* macros for BlueprintGlobalNameSpace::ATLC_tff3_wptr */
/**
 * @defgroup at_lc_regs_core_tff3_wptr tff3_wptr
 * @brief Contains register fields associated with tff3_wptr. definitions.
 * @{
 */
#ifndef __ATLC_TFF3_WPTR_MACRO__
#define __ATLC_TFF3_WPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details tx fifo node 3 write pointer
 * @{
 */
#define ATLC_TFF3_WPTR__VL__SHIFT                                             0
#define ATLC_TFF3_WPTR__VL__WIDTH                                            16
#define ATLC_TFF3_WPTR__VL__MASK                                    0x0000ffffU
#define ATLC_TFF3_WPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF3_WPTR__VL__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF3_WPTR__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_TFF3_WPTR__VL__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_TFF3_WPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit. It should be flipped when write pointer wraps at end addr
 * @{
 */
#define ATLC_TFF3_WPTR__VL_WRP__SHIFT                                        16
#define ATLC_TFF3_WPTR__VL_WRP__WIDTH                                         1
#define ATLC_TFF3_WPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_TFF3_WPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_TFF3_WPTR__VL_WRP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00010000U)
#define ATLC_TFF3_WPTR__VL_WRP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | (((uint32_t)(src) <<\
                    16) & 0x00010000U)
#define ATLC_TFF3_WPTR__VL_WRP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00010000U)))
#define ATLC_TFF3_WPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_TFF3_WPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_TFF3_WPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_TFF3_WPTR__TYPE                                           uint32_t
#define ATLC_TFF3_WPTR__READ                                        0x0001ffffU
#define ATLC_TFF3_WPTR__WRITE                                       0x0001ffffU
#define ATLC_TFF3_WPTR__PRESERVED                                   0x00000000U
#define ATLC_TFF3_WPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_TFF3_WPTR_MACRO__ */

/** @} end of tff3_wptr */

/* macros for BlueprintGlobalNameSpace::ATLC_rff3_rptr */
/**
 * @defgroup at_lc_regs_core_rff3_rptr rff3_rptr
 * @brief Contains register fields associated with rff3_rptr. definitions.
 * @{
 */
#ifndef __ATLC_RFF3_RPTR_MACRO__
#define __ATLC_RFF3_RPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details rx fifo node 3 read pointer
 * @{
 */
#define ATLC_RFF3_RPTR__VL__SHIFT                                             0
#define ATLC_RFF3_RPTR__VL__WIDTH                                            16
#define ATLC_RFF3_RPTR__VL__MASK                                    0x0000ffffU
#define ATLC_RFF3_RPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF3_RPTR__VL__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF3_RPTR__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_RFF3_RPTR__VL__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_RFF3_RPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit. It should be flipped when read pointer wraps at end addr
 * @{
 */
#define ATLC_RFF3_RPTR__VL_WRP__SHIFT                                        16
#define ATLC_RFF3_RPTR__VL_WRP__WIDTH                                         1
#define ATLC_RFF3_RPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_RFF3_RPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_RFF3_RPTR__VL_WRP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00010000U)
#define ATLC_RFF3_RPTR__VL_WRP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | (((uint32_t)(src) <<\
                    16) & 0x00010000U)
#define ATLC_RFF3_RPTR__VL_WRP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00010000U)))
#define ATLC_RFF3_RPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_RFF3_RPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_RFF3_RPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_RFF3_RPTR__TYPE                                           uint32_t
#define ATLC_RFF3_RPTR__READ                                        0x0001ffffU
#define ATLC_RFF3_RPTR__WRITE                                       0x0001ffffU
#define ATLC_RFF3_RPTR__PRESERVED                                   0x00000000U
#define ATLC_RFF3_RPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_RFF3_RPTR_MACRO__ */

/** @} end of rff3_rptr */

/* macros for BlueprintGlobalNameSpace::ATLC_rff3_wptr */
/**
 * @defgroup at_lc_regs_core_rff3_wptr rff3_wptr
 * @brief Contains register fields associated with rff3_wptr. definitions.
 * @{
 */
#ifndef __ATLC_RFF3_WPTR_MACRO__
#define __ATLC_RFF3_WPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details rx fifo node 3 write pointer
 * @{
 */
#define ATLC_RFF3_WPTR__VL__SHIFT                                             0
#define ATLC_RFF3_WPTR__VL__WIDTH                                            16
#define ATLC_RFF3_WPTR__VL__MASK                                    0x0000ffffU
#define ATLC_RFF3_WPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF3_WPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit
 * @{
 */
#define ATLC_RFF3_WPTR__VL_WRP__SHIFT                                        16
#define ATLC_RFF3_WPTR__VL_WRP__WIDTH                                         1
#define ATLC_RFF3_WPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_RFF3_WPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_RFF3_WPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_RFF3_WPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_RFF3_WPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_RFF3_WPTR__TYPE                                           uint32_t
#define ATLC_RFF3_WPTR__READ                                        0x0001ffffU
#define ATLC_RFF3_WPTR__PRESERVED                                   0x00000000U
#define ATLC_RFF3_WPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_RFF3_WPTR_MACRO__ */

/** @} end of rff3_wptr */

/* macros for BlueprintGlobalNameSpace::ATLC_tff4_rptr */
/**
 * @defgroup at_lc_regs_core_tff4_rptr tff4_rptr
 * @brief Contains register fields associated with tff4_rptr. definitions.
 * @{
 */
#ifndef __ATLC_TFF4_RPTR_MACRO__
#define __ATLC_TFF4_RPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details tx fifo node 4 read pointer
 * @{
 */
#define ATLC_TFF4_RPTR__VL__SHIFT                                             0
#define ATLC_TFF4_RPTR__VL__WIDTH                                            16
#define ATLC_TFF4_RPTR__VL__MASK                                    0x0000ffffU
#define ATLC_TFF4_RPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF4_RPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit
 * @{
 */
#define ATLC_TFF4_RPTR__VL_WRP__SHIFT                                        16
#define ATLC_TFF4_RPTR__VL_WRP__WIDTH                                         1
#define ATLC_TFF4_RPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_TFF4_RPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_TFF4_RPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_TFF4_RPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_TFF4_RPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_TFF4_RPTR__TYPE                                           uint32_t
#define ATLC_TFF4_RPTR__READ                                        0x0001ffffU
#define ATLC_TFF4_RPTR__PRESERVED                                   0x00000000U
#define ATLC_TFF4_RPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_TFF4_RPTR_MACRO__ */

/** @} end of tff4_rptr */

/* macros for BlueprintGlobalNameSpace::ATLC_tff4_wptr */
/**
 * @defgroup at_lc_regs_core_tff4_wptr tff4_wptr
 * @brief Contains register fields associated with tff4_wptr. definitions.
 * @{
 */
#ifndef __ATLC_TFF4_WPTR_MACRO__
#define __ATLC_TFF4_WPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details tx fifo node 4 write pointer
 * @{
 */
#define ATLC_TFF4_WPTR__VL__SHIFT                                             0
#define ATLC_TFF4_WPTR__VL__WIDTH                                            16
#define ATLC_TFF4_WPTR__VL__MASK                                    0x0000ffffU
#define ATLC_TFF4_WPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF4_WPTR__VL__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF4_WPTR__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_TFF4_WPTR__VL__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_TFF4_WPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit. It should be flipped when write pointer wraps at end addr
 * @{
 */
#define ATLC_TFF4_WPTR__VL_WRP__SHIFT                                        16
#define ATLC_TFF4_WPTR__VL_WRP__WIDTH                                         1
#define ATLC_TFF4_WPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_TFF4_WPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_TFF4_WPTR__VL_WRP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00010000U)
#define ATLC_TFF4_WPTR__VL_WRP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | (((uint32_t)(src) <<\
                    16) & 0x00010000U)
#define ATLC_TFF4_WPTR__VL_WRP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00010000U)))
#define ATLC_TFF4_WPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_TFF4_WPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_TFF4_WPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_TFF4_WPTR__TYPE                                           uint32_t
#define ATLC_TFF4_WPTR__READ                                        0x0001ffffU
#define ATLC_TFF4_WPTR__WRITE                                       0x0001ffffU
#define ATLC_TFF4_WPTR__PRESERVED                                   0x00000000U
#define ATLC_TFF4_WPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_TFF4_WPTR_MACRO__ */

/** @} end of tff4_wptr */

/* macros for BlueprintGlobalNameSpace::ATLC_rff4_rptr */
/**
 * @defgroup at_lc_regs_core_rff4_rptr rff4_rptr
 * @brief Contains register fields associated with rff4_rptr. definitions.
 * @{
 */
#ifndef __ATLC_RFF4_RPTR_MACRO__
#define __ATLC_RFF4_RPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details rx fifo node 4 read pointer
 * @{
 */
#define ATLC_RFF4_RPTR__VL__SHIFT                                             0
#define ATLC_RFF4_RPTR__VL__WIDTH                                            16
#define ATLC_RFF4_RPTR__VL__MASK                                    0x0000ffffU
#define ATLC_RFF4_RPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF4_RPTR__VL__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF4_RPTR__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_RFF4_RPTR__VL__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_RFF4_RPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit. It should be flipped when read pointer wraps at end addr
 * @{
 */
#define ATLC_RFF4_RPTR__VL_WRP__SHIFT                                        16
#define ATLC_RFF4_RPTR__VL_WRP__WIDTH                                         1
#define ATLC_RFF4_RPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_RFF4_RPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_RFF4_RPTR__VL_WRP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00010000U)
#define ATLC_RFF4_RPTR__VL_WRP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | (((uint32_t)(src) <<\
                    16) & 0x00010000U)
#define ATLC_RFF4_RPTR__VL_WRP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00010000U)))
#define ATLC_RFF4_RPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_RFF4_RPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_RFF4_RPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_RFF4_RPTR__TYPE                                           uint32_t
#define ATLC_RFF4_RPTR__READ                                        0x0001ffffU
#define ATLC_RFF4_RPTR__WRITE                                       0x0001ffffU
#define ATLC_RFF4_RPTR__PRESERVED                                   0x00000000U
#define ATLC_RFF4_RPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_RFF4_RPTR_MACRO__ */

/** @} end of rff4_rptr */

/* macros for BlueprintGlobalNameSpace::ATLC_rff4_wptr */
/**
 * @defgroup at_lc_regs_core_rff4_wptr rff4_wptr
 * @brief Contains register fields associated with rff4_wptr. definitions.
 * @{
 */
#ifndef __ATLC_RFF4_WPTR_MACRO__
#define __ATLC_RFF4_WPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details rx fifo node 4 write pointer
 * @{
 */
#define ATLC_RFF4_WPTR__VL__SHIFT                                             0
#define ATLC_RFF4_WPTR__VL__WIDTH                                            16
#define ATLC_RFF4_WPTR__VL__MASK                                    0x0000ffffU
#define ATLC_RFF4_WPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF4_WPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit
 * @{
 */
#define ATLC_RFF4_WPTR__VL_WRP__SHIFT                                        16
#define ATLC_RFF4_WPTR__VL_WRP__WIDTH                                         1
#define ATLC_RFF4_WPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_RFF4_WPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_RFF4_WPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_RFF4_WPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_RFF4_WPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_RFF4_WPTR__TYPE                                           uint32_t
#define ATLC_RFF4_WPTR__READ                                        0x0001ffffU
#define ATLC_RFF4_WPTR__PRESERVED                                   0x00000000U
#define ATLC_RFF4_WPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_RFF4_WPTR_MACRO__ */

/** @} end of rff4_wptr */

/* macros for BlueprintGlobalNameSpace::ATLC_tff5_rptr */
/**
 * @defgroup at_lc_regs_core_tff5_rptr tff5_rptr
 * @brief Contains register fields associated with tff5_rptr. definitions.
 * @{
 */
#ifndef __ATLC_TFF5_RPTR_MACRO__
#define __ATLC_TFF5_RPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details tx fifo node 5 read pointer
 * @{
 */
#define ATLC_TFF5_RPTR__VL__SHIFT                                             0
#define ATLC_TFF5_RPTR__VL__WIDTH                                            16
#define ATLC_TFF5_RPTR__VL__MASK                                    0x0000ffffU
#define ATLC_TFF5_RPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF5_RPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit
 * @{
 */
#define ATLC_TFF5_RPTR__VL_WRP__SHIFT                                        16
#define ATLC_TFF5_RPTR__VL_WRP__WIDTH                                         1
#define ATLC_TFF5_RPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_TFF5_RPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_TFF5_RPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_TFF5_RPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_TFF5_RPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_TFF5_RPTR__TYPE                                           uint32_t
#define ATLC_TFF5_RPTR__READ                                        0x0001ffffU
#define ATLC_TFF5_RPTR__PRESERVED                                   0x00000000U
#define ATLC_TFF5_RPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_TFF5_RPTR_MACRO__ */

/** @} end of tff5_rptr */

/* macros for BlueprintGlobalNameSpace::ATLC_tff5_wptr */
/**
 * @defgroup at_lc_regs_core_tff5_wptr tff5_wptr
 * @brief Contains register fields associated with tff5_wptr. definitions.
 * @{
 */
#ifndef __ATLC_TFF5_WPTR_MACRO__
#define __ATLC_TFF5_WPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details tx fifo node 5 write pointer
 * @{
 */
#define ATLC_TFF5_WPTR__VL__SHIFT                                             0
#define ATLC_TFF5_WPTR__VL__WIDTH                                            16
#define ATLC_TFF5_WPTR__VL__MASK                                    0x0000ffffU
#define ATLC_TFF5_WPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF5_WPTR__VL__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF5_WPTR__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_TFF5_WPTR__VL__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_TFF5_WPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit. It should be flipped when write pointer wraps at end addr
 * @{
 */
#define ATLC_TFF5_WPTR__VL_WRP__SHIFT                                        16
#define ATLC_TFF5_WPTR__VL_WRP__WIDTH                                         1
#define ATLC_TFF5_WPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_TFF5_WPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_TFF5_WPTR__VL_WRP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00010000U)
#define ATLC_TFF5_WPTR__VL_WRP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | (((uint32_t)(src) <<\
                    16) & 0x00010000U)
#define ATLC_TFF5_WPTR__VL_WRP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00010000U)))
#define ATLC_TFF5_WPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_TFF5_WPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_TFF5_WPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_TFF5_WPTR__TYPE                                           uint32_t
#define ATLC_TFF5_WPTR__READ                                        0x0001ffffU
#define ATLC_TFF5_WPTR__WRITE                                       0x0001ffffU
#define ATLC_TFF5_WPTR__PRESERVED                                   0x00000000U
#define ATLC_TFF5_WPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_TFF5_WPTR_MACRO__ */

/** @} end of tff5_wptr */

/* macros for BlueprintGlobalNameSpace::ATLC_rff5_rptr */
/**
 * @defgroup at_lc_regs_core_rff5_rptr rff5_rptr
 * @brief Contains register fields associated with rff5_rptr. definitions.
 * @{
 */
#ifndef __ATLC_RFF5_RPTR_MACRO__
#define __ATLC_RFF5_RPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details rx fifo node 5 read pointer
 * @{
 */
#define ATLC_RFF5_RPTR__VL__SHIFT                                             0
#define ATLC_RFF5_RPTR__VL__WIDTH                                            16
#define ATLC_RFF5_RPTR__VL__MASK                                    0x0000ffffU
#define ATLC_RFF5_RPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF5_RPTR__VL__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF5_RPTR__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_RFF5_RPTR__VL__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_RFF5_RPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit. It should be flipped when read pointer wraps at end addr
 * @{
 */
#define ATLC_RFF5_RPTR__VL_WRP__SHIFT                                        16
#define ATLC_RFF5_RPTR__VL_WRP__WIDTH                                         1
#define ATLC_RFF5_RPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_RFF5_RPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_RFF5_RPTR__VL_WRP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00010000U)
#define ATLC_RFF5_RPTR__VL_WRP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | (((uint32_t)(src) <<\
                    16) & 0x00010000U)
#define ATLC_RFF5_RPTR__VL_WRP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00010000U)))
#define ATLC_RFF5_RPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_RFF5_RPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_RFF5_RPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_RFF5_RPTR__TYPE                                           uint32_t
#define ATLC_RFF5_RPTR__READ                                        0x0001ffffU
#define ATLC_RFF5_RPTR__WRITE                                       0x0001ffffU
#define ATLC_RFF5_RPTR__PRESERVED                                   0x00000000U
#define ATLC_RFF5_RPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_RFF5_RPTR_MACRO__ */

/** @} end of rff5_rptr */

/* macros for BlueprintGlobalNameSpace::ATLC_rff5_wptr */
/**
 * @defgroup at_lc_regs_core_rff5_wptr rff5_wptr
 * @brief Contains register fields associated with rff5_wptr. definitions.
 * @{
 */
#ifndef __ATLC_RFF5_WPTR_MACRO__
#define __ATLC_RFF5_WPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details rx fifo node 5 write pointer
 * @{
 */
#define ATLC_RFF5_WPTR__VL__SHIFT                                             0
#define ATLC_RFF5_WPTR__VL__WIDTH                                            16
#define ATLC_RFF5_WPTR__VL__MASK                                    0x0000ffffU
#define ATLC_RFF5_WPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF5_WPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit
 * @{
 */
#define ATLC_RFF5_WPTR__VL_WRP__SHIFT                                        16
#define ATLC_RFF5_WPTR__VL_WRP__WIDTH                                         1
#define ATLC_RFF5_WPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_RFF5_WPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_RFF5_WPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_RFF5_WPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_RFF5_WPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_RFF5_WPTR__TYPE                                           uint32_t
#define ATLC_RFF5_WPTR__READ                                        0x0001ffffU
#define ATLC_RFF5_WPTR__PRESERVED                                   0x00000000U
#define ATLC_RFF5_WPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_RFF5_WPTR_MACRO__ */

/** @} end of rff5_wptr */

/* macros for BlueprintGlobalNameSpace::ATLC_tff6_rptr */
/**
 * @defgroup at_lc_regs_core_tff6_rptr tff6_rptr
 * @brief Contains register fields associated with tff6_rptr. definitions.
 * @{
 */
#ifndef __ATLC_TFF6_RPTR_MACRO__
#define __ATLC_TFF6_RPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details tx fifo node 6 read pointer
 * @{
 */
#define ATLC_TFF6_RPTR__VL__SHIFT                                             0
#define ATLC_TFF6_RPTR__VL__WIDTH                                            16
#define ATLC_TFF6_RPTR__VL__MASK                                    0x0000ffffU
#define ATLC_TFF6_RPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF6_RPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit
 * @{
 */
#define ATLC_TFF6_RPTR__VL_WRP__SHIFT                                        16
#define ATLC_TFF6_RPTR__VL_WRP__WIDTH                                         1
#define ATLC_TFF6_RPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_TFF6_RPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_TFF6_RPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_TFF6_RPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_TFF6_RPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_TFF6_RPTR__TYPE                                           uint32_t
#define ATLC_TFF6_RPTR__READ                                        0x0001ffffU
#define ATLC_TFF6_RPTR__PRESERVED                                   0x00000000U
#define ATLC_TFF6_RPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_TFF6_RPTR_MACRO__ */

/** @} end of tff6_rptr */

/* macros for BlueprintGlobalNameSpace::ATLC_tff6_wptr */
/**
 * @defgroup at_lc_regs_core_tff6_wptr tff6_wptr
 * @brief Contains register fields associated with tff6_wptr. definitions.
 * @{
 */
#ifndef __ATLC_TFF6_WPTR_MACRO__
#define __ATLC_TFF6_WPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details tx fifo node 6 write pointer
 * @{
 */
#define ATLC_TFF6_WPTR__VL__SHIFT                                             0
#define ATLC_TFF6_WPTR__VL__WIDTH                                            16
#define ATLC_TFF6_WPTR__VL__MASK                                    0x0000ffffU
#define ATLC_TFF6_WPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF6_WPTR__VL__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF6_WPTR__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_TFF6_WPTR__VL__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_TFF6_WPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit. It should be flipped when write pointer wraps at end addr
 * @{
 */
#define ATLC_TFF6_WPTR__VL_WRP__SHIFT                                        16
#define ATLC_TFF6_WPTR__VL_WRP__WIDTH                                         1
#define ATLC_TFF6_WPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_TFF6_WPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_TFF6_WPTR__VL_WRP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00010000U)
#define ATLC_TFF6_WPTR__VL_WRP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | (((uint32_t)(src) <<\
                    16) & 0x00010000U)
#define ATLC_TFF6_WPTR__VL_WRP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00010000U)))
#define ATLC_TFF6_WPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_TFF6_WPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_TFF6_WPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_TFF6_WPTR__TYPE                                           uint32_t
#define ATLC_TFF6_WPTR__READ                                        0x0001ffffU
#define ATLC_TFF6_WPTR__WRITE                                       0x0001ffffU
#define ATLC_TFF6_WPTR__PRESERVED                                   0x00000000U
#define ATLC_TFF6_WPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_TFF6_WPTR_MACRO__ */

/** @} end of tff6_wptr */

/* macros for BlueprintGlobalNameSpace::ATLC_rff6_rptr */
/**
 * @defgroup at_lc_regs_core_rff6_rptr rff6_rptr
 * @brief Contains register fields associated with rff6_rptr. definitions.
 * @{
 */
#ifndef __ATLC_RFF6_RPTR_MACRO__
#define __ATLC_RFF6_RPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details rx fifo node 6 read pointer
 * @{
 */
#define ATLC_RFF6_RPTR__VL__SHIFT                                             0
#define ATLC_RFF6_RPTR__VL__WIDTH                                            16
#define ATLC_RFF6_RPTR__VL__MASK                                    0x0000ffffU
#define ATLC_RFF6_RPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF6_RPTR__VL__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF6_RPTR__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_RFF6_RPTR__VL__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_RFF6_RPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit. It should be flipped when read pointer wraps at end addr
 * @{
 */
#define ATLC_RFF6_RPTR__VL_WRP__SHIFT                                        16
#define ATLC_RFF6_RPTR__VL_WRP__WIDTH                                         1
#define ATLC_RFF6_RPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_RFF6_RPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_RFF6_RPTR__VL_WRP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00010000U)
#define ATLC_RFF6_RPTR__VL_WRP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | (((uint32_t)(src) <<\
                    16) & 0x00010000U)
#define ATLC_RFF6_RPTR__VL_WRP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00010000U)))
#define ATLC_RFF6_RPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_RFF6_RPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_RFF6_RPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_RFF6_RPTR__TYPE                                           uint32_t
#define ATLC_RFF6_RPTR__READ                                        0x0001ffffU
#define ATLC_RFF6_RPTR__WRITE                                       0x0001ffffU
#define ATLC_RFF6_RPTR__PRESERVED                                   0x00000000U
#define ATLC_RFF6_RPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_RFF6_RPTR_MACRO__ */

/** @} end of rff6_rptr */

/* macros for BlueprintGlobalNameSpace::ATLC_rff6_wptr */
/**
 * @defgroup at_lc_regs_core_rff6_wptr rff6_wptr
 * @brief Contains register fields associated with rff6_wptr. definitions.
 * @{
 */
#ifndef __ATLC_RFF6_WPTR_MACRO__
#define __ATLC_RFF6_WPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details rx fifo node 6 write pointer
 * @{
 */
#define ATLC_RFF6_WPTR__VL__SHIFT                                             0
#define ATLC_RFF6_WPTR__VL__WIDTH                                            16
#define ATLC_RFF6_WPTR__VL__MASK                                    0x0000ffffU
#define ATLC_RFF6_WPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF6_WPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit
 * @{
 */
#define ATLC_RFF6_WPTR__VL_WRP__SHIFT                                        16
#define ATLC_RFF6_WPTR__VL_WRP__WIDTH                                         1
#define ATLC_RFF6_WPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_RFF6_WPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_RFF6_WPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_RFF6_WPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_RFF6_WPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_RFF6_WPTR__TYPE                                           uint32_t
#define ATLC_RFF6_WPTR__READ                                        0x0001ffffU
#define ATLC_RFF6_WPTR__PRESERVED                                   0x00000000U
#define ATLC_RFF6_WPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_RFF6_WPTR_MACRO__ */

/** @} end of rff6_wptr */

/* macros for BlueprintGlobalNameSpace::ATLC_tff7_rptr */
/**
 * @defgroup at_lc_regs_core_tff7_rptr tff7_rptr
 * @brief Contains register fields associated with tff7_rptr. definitions.
 * @{
 */
#ifndef __ATLC_TFF7_RPTR_MACRO__
#define __ATLC_TFF7_RPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details tx fifo node 7 read pointer
 * @{
 */
#define ATLC_TFF7_RPTR__VL__SHIFT                                             0
#define ATLC_TFF7_RPTR__VL__WIDTH                                            16
#define ATLC_TFF7_RPTR__VL__MASK                                    0x0000ffffU
#define ATLC_TFF7_RPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF7_RPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit
 * @{
 */
#define ATLC_TFF7_RPTR__VL_WRP__SHIFT                                        16
#define ATLC_TFF7_RPTR__VL_WRP__WIDTH                                         1
#define ATLC_TFF7_RPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_TFF7_RPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_TFF7_RPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_TFF7_RPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_TFF7_RPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_TFF7_RPTR__TYPE                                           uint32_t
#define ATLC_TFF7_RPTR__READ                                        0x0001ffffU
#define ATLC_TFF7_RPTR__PRESERVED                                   0x00000000U
#define ATLC_TFF7_RPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_TFF7_RPTR_MACRO__ */

/** @} end of tff7_rptr */

/* macros for BlueprintGlobalNameSpace::ATLC_tff7_wptr */
/**
 * @defgroup at_lc_regs_core_tff7_wptr tff7_wptr
 * @brief Contains register fields associated with tff7_wptr. definitions.
 * @{
 */
#ifndef __ATLC_TFF7_WPTR_MACRO__
#define __ATLC_TFF7_WPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details tx fifo node 7 write pointer
 * @{
 */
#define ATLC_TFF7_WPTR__VL__SHIFT                                             0
#define ATLC_TFF7_WPTR__VL__WIDTH                                            16
#define ATLC_TFF7_WPTR__VL__MASK                                    0x0000ffffU
#define ATLC_TFF7_WPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF7_WPTR__VL__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_TFF7_WPTR__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_TFF7_WPTR__VL__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_TFF7_WPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit. It should be flipped when write pointer wraps at end addr
 * @{
 */
#define ATLC_TFF7_WPTR__VL_WRP__SHIFT                                        16
#define ATLC_TFF7_WPTR__VL_WRP__WIDTH                                         1
#define ATLC_TFF7_WPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_TFF7_WPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_TFF7_WPTR__VL_WRP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00010000U)
#define ATLC_TFF7_WPTR__VL_WRP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | (((uint32_t)(src) <<\
                    16) & 0x00010000U)
#define ATLC_TFF7_WPTR__VL_WRP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00010000U)))
#define ATLC_TFF7_WPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_TFF7_WPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_TFF7_WPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_TFF7_WPTR__TYPE                                           uint32_t
#define ATLC_TFF7_WPTR__READ                                        0x0001ffffU
#define ATLC_TFF7_WPTR__WRITE                                       0x0001ffffU
#define ATLC_TFF7_WPTR__PRESERVED                                   0x00000000U
#define ATLC_TFF7_WPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_TFF7_WPTR_MACRO__ */

/** @} end of tff7_wptr */

/* macros for BlueprintGlobalNameSpace::ATLC_rff7_rptr */
/**
 * @defgroup at_lc_regs_core_rff7_rptr rff7_rptr
 * @brief Contains register fields associated with rff7_rptr. definitions.
 * @{
 */
#ifndef __ATLC_RFF7_RPTR_MACRO__
#define __ATLC_RFF7_RPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details rx fifo node 7 read pointer
 * @{
 */
#define ATLC_RFF7_RPTR__VL__SHIFT                                             0
#define ATLC_RFF7_RPTR__VL__WIDTH                                            16
#define ATLC_RFF7_RPTR__VL__MASK                                    0x0000ffffU
#define ATLC_RFF7_RPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF7_RPTR__VL__WRITE(src)          ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF7_RPTR__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_RFF7_RPTR__VL__VERIFY(src)   (!(((uint32_t)(src) & ~0x0000ffffU)))
#define ATLC_RFF7_RPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit. It should be flipped when read pointer wraps at end addr
 * @{
 */
#define ATLC_RFF7_RPTR__VL_WRP__SHIFT                                        16
#define ATLC_RFF7_RPTR__VL_WRP__WIDTH                                         1
#define ATLC_RFF7_RPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_RFF7_RPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_RFF7_RPTR__VL_WRP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00010000U)
#define ATLC_RFF7_RPTR__VL_WRP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | (((uint32_t)(src) <<\
                    16) & 0x00010000U)
#define ATLC_RFF7_RPTR__VL_WRP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00010000U)))
#define ATLC_RFF7_RPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_RFF7_RPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_RFF7_RPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_RFF7_RPTR__TYPE                                           uint32_t
#define ATLC_RFF7_RPTR__READ                                        0x0001ffffU
#define ATLC_RFF7_RPTR__WRITE                                       0x0001ffffU
#define ATLC_RFF7_RPTR__PRESERVED                                   0x00000000U
#define ATLC_RFF7_RPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_RFF7_RPTR_MACRO__ */

/** @} end of rff7_rptr */

/* macros for BlueprintGlobalNameSpace::ATLC_rff7_wptr */
/**
 * @defgroup at_lc_regs_core_rff7_wptr rff7_wptr
 * @brief Contains register fields associated with rff7_wptr. definitions.
 * @{
 */
#ifndef __ATLC_RFF7_WPTR_MACRO__
#define __ATLC_RFF7_WPTR_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details rx fifo node 7 write pointer
 * @{
 */
#define ATLC_RFF7_WPTR__VL__SHIFT                                             0
#define ATLC_RFF7_WPTR__VL__WIDTH                                            16
#define ATLC_RFF7_WPTR__VL__MASK                                    0x0000ffffU
#define ATLC_RFF7_WPTR__VL__READ(src)           ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_RFF7_WPTR__VL__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field vl_wrp */
/**
 * @defgroup at_lc_regs_core_vl_wrp_field vl_wrp_field
 * @brief macros for field vl_wrp
 * @details Wrap bit
 * @{
 */
#define ATLC_RFF7_WPTR__VL_WRP__SHIFT                                        16
#define ATLC_RFF7_WPTR__VL_WRP__WIDTH                                         1
#define ATLC_RFF7_WPTR__VL_WRP__MASK                                0x00010000U
#define ATLC_RFF7_WPTR__VL_WRP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_RFF7_WPTR__VL_WRP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_RFF7_WPTR__VL_WRP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_RFF7_WPTR__VL_WRP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_RFF7_WPTR__TYPE                                           uint32_t
#define ATLC_RFF7_WPTR__READ                                        0x0001ffffU
#define ATLC_RFF7_WPTR__PRESERVED                                   0x00000000U
#define ATLC_RFF7_WPTR__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_RFF7_WPTR_MACRO__ */

/** @} end of rff7_wptr */

/* macros for BlueprintGlobalNameSpace::ATLC_crc_plynml_fmac */
/**
 * @defgroup at_lc_regs_core_crc_plynml_fmac crc_plynml_fmac
 * @brief Contains register fields associated with crc_plynml_fmac. definitions.
 * @{
 */
#ifndef __ATLC_CRC_PLYNML_FMAC_MACRO__
#define __ATLC_CRC_PLYNML_FMAC_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details crc polynomial
 * @{
 */
#define ATLC_CRC_PLYNML_FMAC__VL__SHIFT                                       0
#define ATLC_CRC_PLYNML_FMAC__VL__WIDTH                                      32
#define ATLC_CRC_PLYNML_FMAC__VL__MASK                              0xffffffffU
#define ATLC_CRC_PLYNML_FMAC__VL__READ(src)     ((uint32_t)(src) & 0xffffffffU)
#define ATLC_CRC_PLYNML_FMAC__VL__WRITE(src)    ((uint32_t)(src) & 0xffffffffU)
#define ATLC_CRC_PLYNML_FMAC__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_CRC_PLYNML_FMAC__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_CRC_PLYNML_FMAC__VL__RESET_VALUE                       0x00000000U
/** @} */
#define ATLC_CRC_PLYNML_FMAC__TYPE                                     uint32_t
#define ATLC_CRC_PLYNML_FMAC__READ                                  0xffffffffU
#define ATLC_CRC_PLYNML_FMAC__WRITE                                 0xffffffffU
#define ATLC_CRC_PLYNML_FMAC__PRESERVED                             0x00000000U
#define ATLC_CRC_PLYNML_FMAC__RESET_VALUE                           0x00000000U

#endif /* __ATLC_CRC_PLYNML_FMAC_MACRO__ */

/** @} end of crc_plynml_fmac */

/* macros for BlueprintGlobalNameSpace::ATLC_crc_plynml_ble */
/**
 * @defgroup at_lc_regs_core_crc_plynml_ble crc_plynml_ble
 * @brief Contains register fields associated with crc_plynml_ble. definitions.
 * @{
 */
#ifndef __ATLC_CRC_PLYNML_BLE_MACRO__
#define __ATLC_CRC_PLYNML_BLE_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details crc polynomial
 * @{
 */
#define ATLC_CRC_PLYNML_BLE__VL__SHIFT                                        0
#define ATLC_CRC_PLYNML_BLE__VL__WIDTH                                       32
#define ATLC_CRC_PLYNML_BLE__VL__MASK                               0xffffffffU
#define ATLC_CRC_PLYNML_BLE__VL__READ(src)      ((uint32_t)(src) & 0xffffffffU)
#define ATLC_CRC_PLYNML_BLE__VL__WRITE(src)     ((uint32_t)(src) & 0xffffffffU)
#define ATLC_CRC_PLYNML_BLE__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_CRC_PLYNML_BLE__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_CRC_PLYNML_BLE__VL__RESET_VALUE                        0x00000000U
/** @} */
#define ATLC_CRC_PLYNML_BLE__TYPE                                      uint32_t
#define ATLC_CRC_PLYNML_BLE__READ                                   0xffffffffU
#define ATLC_CRC_PLYNML_BLE__WRITE                                  0xffffffffU
#define ATLC_CRC_PLYNML_BLE__PRESERVED                              0x00000000U
#define ATLC_CRC_PLYNML_BLE__RESET_VALUE                            0x00000000U

#endif /* __ATLC_CRC_PLYNML_BLE_MACRO__ */

/** @} end of crc_plynml_ble */

/* macros for BlueprintGlobalNameSpace::ATLC_crc_plynml_154 */
/**
 * @defgroup at_lc_regs_core_crc_plynml_154 crc_plynml_154
 * @brief Contains register fields associated with crc_plynml_154. definitions.
 * @{
 */
#ifndef __ATLC_CRC_PLYNML_154_MACRO__
#define __ATLC_CRC_PLYNML_154_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details crc polynomial
 * @{
 */
#define ATLC_CRC_PLYNML_154__VL__SHIFT                                        0
#define ATLC_CRC_PLYNML_154__VL__WIDTH                                       32
#define ATLC_CRC_PLYNML_154__VL__MASK                               0xffffffffU
#define ATLC_CRC_PLYNML_154__VL__READ(src)      ((uint32_t)(src) & 0xffffffffU)
#define ATLC_CRC_PLYNML_154__VL__WRITE(src)     ((uint32_t)(src) & 0xffffffffU)
#define ATLC_CRC_PLYNML_154__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_CRC_PLYNML_154__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_CRC_PLYNML_154__VL__RESET_VALUE                        0x00000000U
/** @} */
#define ATLC_CRC_PLYNML_154__TYPE                                      uint32_t
#define ATLC_CRC_PLYNML_154__READ                                   0xffffffffU
#define ATLC_CRC_PLYNML_154__WRITE                                  0xffffffffU
#define ATLC_CRC_PLYNML_154__PRESERVED                              0x00000000U
#define ATLC_CRC_PLYNML_154__RESET_VALUE                            0x00000000U

#endif /* __ATLC_CRC_PLYNML_154_MACRO__ */

/** @} end of crc_plynml_154 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_fmac_crc_ctrl */
/**
 * @defgroup at_lc_regs_core_lc_fmac_crc_ctrl lc_fmac_crc_ctrl
 * @brief Contains register fields associated with lc_fmac_crc_ctrl. definitions.
 * @{
 */
#ifndef __ATLC_LC_FMAC_CRC_CTRL_MACRO__
#define __ATLC_LC_FMAC_CRC_CTRL_MACRO__

/* macros for field sd */
/**
 * @defgroup at_lc_regs_core_sd_field sd_field
 * @brief macros for field sd
 * @details initial seed for crc
 * @{
 */
#define ATLC_LC_FMAC_CRC_CTRL__SD__SHIFT                                      0
#define ATLC_LC_FMAC_CRC_CTRL__SD__WIDTH                                     32
#define ATLC_LC_FMAC_CRC_CTRL__SD__MASK                             0xffffffffU
#define ATLC_LC_FMAC_CRC_CTRL__SD__READ(src)    ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_FMAC_CRC_CTRL__SD__WRITE(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_FMAC_CRC_CTRL__SD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_LC_FMAC_CRC_CTRL__SD__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_LC_FMAC_CRC_CTRL__SD__RESET_VALUE                      0xffffffffU
/** @} */
#define ATLC_LC_FMAC_CRC_CTRL__TYPE                                    uint32_t
#define ATLC_LC_FMAC_CRC_CTRL__READ                                 0xffffffffU
#define ATLC_LC_FMAC_CRC_CTRL__WRITE                                0xffffffffU
#define ATLC_LC_FMAC_CRC_CTRL__PRESERVED                            0x00000000U
#define ATLC_LC_FMAC_CRC_CTRL__RESET_VALUE                          0xffffffffU

#endif /* __ATLC_LC_FMAC_CRC_CTRL_MACRO__ */

/** @} end of lc_fmac_crc_ctrl */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_ble_crc_ctrl */
/**
 * @defgroup at_lc_regs_core_lc_ble_crc_ctrl lc_ble_crc_ctrl
 * @brief Contains register fields associated with lc_ble_crc_ctrl. definitions.
 * @{
 */
#ifndef __ATLC_LC_BLE_CRC_CTRL_MACRO__
#define __ATLC_LC_BLE_CRC_CTRL_MACRO__

/* macros for field sd */
/**
 * @defgroup at_lc_regs_core_sd_field sd_field
 * @brief macros for field sd
 * @details initial seed for crc
 * @{
 */
#define ATLC_LC_BLE_CRC_CTRL__SD__SHIFT                                       0
#define ATLC_LC_BLE_CRC_CTRL__SD__WIDTH                                      32
#define ATLC_LC_BLE_CRC_CTRL__SD__MASK                              0xffffffffU
#define ATLC_LC_BLE_CRC_CTRL__SD__READ(src)     ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_BLE_CRC_CTRL__SD__WRITE(src)    ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_BLE_CRC_CTRL__SD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_LC_BLE_CRC_CTRL__SD__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_LC_BLE_CRC_CTRL__SD__RESET_VALUE                       0x00000000U
/** @} */
#define ATLC_LC_BLE_CRC_CTRL__TYPE                                     uint32_t
#define ATLC_LC_BLE_CRC_CTRL__READ                                  0xffffffffU
#define ATLC_LC_BLE_CRC_CTRL__WRITE                                 0xffffffffU
#define ATLC_LC_BLE_CRC_CTRL__PRESERVED                             0x00000000U
#define ATLC_LC_BLE_CRC_CTRL__RESET_VALUE                           0x00000000U

#endif /* __ATLC_LC_BLE_CRC_CTRL_MACRO__ */

/** @} end of lc_ble_crc_ctrl */

/* macros for BlueprintGlobalNameSpace::ATLC_mac_154_crc_ctrl */
/**
 * @defgroup at_lc_regs_core_mac_154_crc_ctrl mac_154_crc_ctrl
 * @brief Contains register fields associated with mac_154_crc_ctrl. definitions.
 * @{
 */
#ifndef __ATLC_MAC_154_CRC_CTRL_MACRO__
#define __ATLC_MAC_154_CRC_CTRL_MACRO__

/* macros for field sd */
/**
 * @defgroup at_lc_regs_core_sd_field sd_field
 * @brief macros for field sd
 * @details initial seed for crc
 * @{
 */
#define ATLC_MAC_154_CRC_CTRL__SD__SHIFT                                      0
#define ATLC_MAC_154_CRC_CTRL__SD__WIDTH                                     32
#define ATLC_MAC_154_CRC_CTRL__SD__MASK                             0xffffffffU
#define ATLC_MAC_154_CRC_CTRL__SD__READ(src)    ((uint32_t)(src) & 0xffffffffU)
#define ATLC_MAC_154_CRC_CTRL__SD__WRITE(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_MAC_154_CRC_CTRL__SD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_MAC_154_CRC_CTRL__SD__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_MAC_154_CRC_CTRL__SD__RESET_VALUE                      0x00000000U
/** @} */
#define ATLC_MAC_154_CRC_CTRL__TYPE                                    uint32_t
#define ATLC_MAC_154_CRC_CTRL__READ                                 0xffffffffU
#define ATLC_MAC_154_CRC_CTRL__WRITE                                0xffffffffU
#define ATLC_MAC_154_CRC_CTRL__PRESERVED                            0x00000000U
#define ATLC_MAC_154_CRC_CTRL__RESET_VALUE                          0x00000000U

#endif /* __ATLC_MAC_154_CRC_CTRL_MACRO__ */

/** @} end of mac_154_crc_ctrl */

/* macros for BlueprintGlobalNameSpace::ATLC_cmd */
/**
 * @defgroup at_lc_regs_core_cmd cmd
 * @brief Contains register fields associated with cmd. definitions.
 * @{
 */
#ifndef __ATLC_CMD_MACRO__
#define __ATLC_CMD_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details start command immediately at 1 micro second boundary if cmd_*us_en are all set to 0 sw needs to clear to idle after issuing command cmd content is latched internally so register can be cleared and set to idle immedidately after it is written. 0x00 idle 0x01 start tx flow 0x02 start rx flow 0x03 abort 0x04 flush tx fifo 0x05 flush rx fifo 0x06 start tx with cca flow 0x11 Secure_desecure accelerator for secure unsecured data to secured data 0x12 start rx flow and write received secured data to memory lcoation pointed by aesccm_secure_desecure_acc_ctrl4 the reason for not writing data to normal rff0 as normal rx flow is RX is not descriptor based, and poosible wrap around overwrite by next RX packet 0x13 Secure_desecure accelerator for desecure secured data to unsecured data
 * @{
 */
#define ATLC_CMD__VL__SHIFT                                                   0
#define ATLC_CMD__VL__WIDTH                                                   8
#define ATLC_CMD__VL__MASK                                          0x000000ffU
#define ATLC_CMD__VL__READ(src)                 ((uint32_t)(src) & 0x000000ffU)
#define ATLC_CMD__VL__WRITE(src)                ((uint32_t)(src) & 0x000000ffU)
#define ATLC_CMD__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_CMD__VL__VERIFY(src)         (!(((uint32_t)(src) & ~0x000000ffU)))
#define ATLC_CMD__VL__RESET_VALUE                                   0x00000000U
/** @} */

/* macros for field cmd_320us_en */
/**
 * @defgroup at_lc_regs_core_cmd_320us_en_field cmd_320us_en_field
 * @brief macros for field cmd_320us_en
 * @details Enable command schedule to be executed at cmd_320us. If not enabled, 320 us counter compare is bypassed and command is executed immediately.
 * @{
 */
#define ATLC_CMD__CMD_320US_EN__SHIFT                                         8
#define ATLC_CMD__CMD_320US_EN__WIDTH                                         1
#define ATLC_CMD__CMD_320US_EN__MASK                                0x00000100U
#define ATLC_CMD__CMD_320US_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000100U) >> 8)
#define ATLC_CMD__CMD_320US_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00000100U)
#define ATLC_CMD__CMD_320US_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | (((uint32_t)(src) <<\
                    8) & 0x00000100U)
#define ATLC_CMD__CMD_320US_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00000100U)))
#define ATLC_CMD__CMD_320US_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | ((uint32_t)(1) << 8)
#define ATLC_CMD__CMD_320US_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | ((uint32_t)(0) << 8)
#define ATLC_CMD__CMD_320US_EN__RESET_VALUE                         0x00000000U
/** @} */

/* macros for field cmd_us_en */
/**
 * @defgroup at_lc_regs_core_cmd_us_en_field cmd_us_en_field
 * @brief macros for field cmd_us_en
 * @details Enable command schedule to be executed at cmd_us. If not enabled, us counter compare is bypassed and command is executed immediately.
 * @{
 */
#define ATLC_CMD__CMD_US_EN__SHIFT                                            9
#define ATLC_CMD__CMD_US_EN__WIDTH                                            1
#define ATLC_CMD__CMD_US_EN__MASK                                   0x00000200U
#define ATLC_CMD__CMD_US_EN__READ(src)   (((uint32_t)(src) & 0x00000200U) >> 9)
#define ATLC_CMD__CMD_US_EN__WRITE(src)  (((uint32_t)(src) << 9) & 0x00000200U)
#define ATLC_CMD__CMD_US_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000200U) | (((uint32_t)(src) <<\
                    9) & 0x00000200U)
#define ATLC_CMD__CMD_US_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 9) & ~0x00000200U)))
#define ATLC_CMD__CMD_US_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000200U) | ((uint32_t)(1) << 9)
#define ATLC_CMD__CMD_US_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000200U) | ((uint32_t)(0) << 9)
#define ATLC_CMD__CMD_US_EN__RESET_VALUE                            0x00000000U
/** @} */
#define ATLC_CMD__TYPE                                                 uint32_t
#define ATLC_CMD__READ                                              0x000003ffU
#define ATLC_CMD__WRITE                                             0x000003ffU
#define ATLC_CMD__PRESERVED                                         0x00000000U
#define ATLC_CMD__RESET_VALUE                                       0x00000000U

#endif /* __ATLC_CMD_MACRO__ */

/** @} end of cmd */

/* macros for BlueprintGlobalNameSpace::ATLC_cmd_us */
/**
 * @defgroup at_lc_regs_core_cmd_us cmd_us
 * @brief Contains register fields associated with cmd_us. definitions.
 * @{
 */
#ifndef __ATLC_CMD_US_MACRO__
#define __ATLC_CMD_US_MACRO__

/* macros for field tm_stmp */
/**
 * @defgroup at_lc_regs_core_tm_stmp_field tm_stmp_field
 * @brief macros for field tm_stmp
 * @details define the time when the command will be executed, in unit of 1 micro second no affect when descriptor mode is enabled.
 * @{
 */
#define ATLC_CMD_US__TM_STMP__SHIFT                                           0
#define ATLC_CMD_US__TM_STMP__WIDTH                                          32
#define ATLC_CMD_US__TM_STMP__MASK                                  0xffffffffU
#define ATLC_CMD_US__TM_STMP__READ(src)         ((uint32_t)(src) & 0xffffffffU)
#define ATLC_CMD_US__TM_STMP__WRITE(src)        ((uint32_t)(src) & 0xffffffffU)
#define ATLC_CMD_US__TM_STMP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_CMD_US__TM_STMP__VERIFY(src) (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_CMD_US__TM_STMP__RESET_VALUE                           0x00000000U
/** @} */
#define ATLC_CMD_US__TYPE                                              uint32_t
#define ATLC_CMD_US__READ                                           0xffffffffU
#define ATLC_CMD_US__WRITE                                          0xffffffffU
#define ATLC_CMD_US__PRESERVED                                      0x00000000U
#define ATLC_CMD_US__RESET_VALUE                                    0x00000000U

#endif /* __ATLC_CMD_US_MACRO__ */

/** @} end of cmd_us */

/* macros for BlueprintGlobalNameSpace::ATLC_cmd_320us */
/**
 * @defgroup at_lc_regs_core_cmd_320us cmd_320us
 * @brief Contains register fields associated with cmd_320us. definitions.
 * @{
 */
#ifndef __ATLC_CMD_320US_MACRO__
#define __ATLC_CMD_320US_MACRO__

/* macros for field tm_stmp */
/**
 * @defgroup at_lc_regs_core_tm_stmp_field tm_stmp_field
 * @brief macros for field tm_stmp
 * @details define the time when the command will be executed, in unit of 320 micro second tmp_stmp should not be set to 0 because it causes problem for air mode counter comparrison no affect when descriptor mode is enabled.
 * @{
 */
#define ATLC_CMD_320US__TM_STMP__SHIFT                                        0
#define ATLC_CMD_320US__TM_STMP__WIDTH                                       32
#define ATLC_CMD_320US__TM_STMP__MASK                               0xffffffffU
#define ATLC_CMD_320US__TM_STMP__READ(src)      ((uint32_t)(src) & 0xffffffffU)
#define ATLC_CMD_320US__TM_STMP__WRITE(src)     ((uint32_t)(src) & 0xffffffffU)
#define ATLC_CMD_320US__TM_STMP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_CMD_320US__TM_STMP__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_CMD_320US__TM_STMP__RESET_VALUE                        0x00000000U
/** @} */
#define ATLC_CMD_320US__TYPE                                           uint32_t
#define ATLC_CMD_320US__READ                                        0xffffffffU
#define ATLC_CMD_320US__WRITE                                       0xffffffffU
#define ATLC_CMD_320US__PRESERVED                                   0x00000000U
#define ATLC_CMD_320US__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_CMD_320US_MACRO__ */

/** @} end of cmd_320us */

/* macros for BlueprintGlobalNameSpace::ATLC_nd_st */
/**
 * @defgroup at_lc_regs_core_nd_st nd_st
 * @brief Contains register fields associated with nd_st. definitions.
 * @{
 */
#ifndef __ATLC_ND_ST_MACRO__
#define __ATLC_ND_ST_MACRO__

/* macros for field rx_drdy_nd */
/**
 * @defgroup at_lc_regs_core_rx_drdy_nd_field rx_drdy_nd_field
 * @brief macros for field rx_drdy_nd
 * @details node number for the receive data ready interrupt supported for flexMAC.
 * @{
 */
#define ATLC_ND_ST__RX_DRDY_ND__SHIFT                                         0
#define ATLC_ND_ST__RX_DRDY_ND__WIDTH                                         3
#define ATLC_ND_ST__RX_DRDY_ND__MASK                                0x00000007U
#define ATLC_ND_ST__RX_DRDY_ND__READ(src)       ((uint32_t)(src) & 0x00000007U)
#define ATLC_ND_ST__RX_DRDY_ND__RESET_VALUE                         0x00000000U
/** @} */

/* macros for field rff_of_nd */
/**
 * @defgroup at_lc_regs_core_rff_of_nd_field rff_of_nd_field
 * @brief macros for field rff_of_nd
 * @details node number for the receive fifo overflow interrupt
 * @{
 */
#define ATLC_ND_ST__RFF_OF_ND__SHIFT                                          4
#define ATLC_ND_ST__RFF_OF_ND__WIDTH                                          3
#define ATLC_ND_ST__RFF_OF_ND__MASK                                 0x00000070U
#define ATLC_ND_ST__RFF_OF_ND__READ(src) (((uint32_t)(src) & 0x00000070U) >> 4)
#define ATLC_ND_ST__RFF_OF_ND__RESET_VALUE                          0x00000000U
/** @} */

/* macros for field tff_uf_nd */
/**
 * @defgroup at_lc_regs_core_tff_uf_nd_field tff_uf_nd_field
 * @brief macros for field tff_uf_nd
 * @details node number for the receive fifo underflow interrupt
 * @{
 */
#define ATLC_ND_ST__TFF_UF_ND__SHIFT                                          8
#define ATLC_ND_ST__TFF_UF_ND__WIDTH                                          3
#define ATLC_ND_ST__TFF_UF_ND__MASK                                 0x00000700U
#define ATLC_ND_ST__TFF_UF_ND__READ(src) (((uint32_t)(src) & 0x00000700U) >> 8)
#define ATLC_ND_ST__TFF_UF_ND__RESET_VALUE                          0x00000000U
/** @} */

/* macros for field rmff_of_nd */
/**
 * @defgroup at_lc_regs_core_rmff_of_nd_field rmff_of_nd_field
 * @brief macros for field rmff_of_nd
 * @details node number for the memory receive fifo overflow interrupt
 * @{
 */
#define ATLC_ND_ST__RMFF_OF_ND__SHIFT                                        12
#define ATLC_ND_ST__RMFF_OF_ND__WIDTH                                         3
#define ATLC_ND_ST__RMFF_OF_ND__MASK                                0x00007000U
#define ATLC_ND_ST__RMFF_OF_ND__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00007000U) >> 12)
#define ATLC_ND_ST__RMFF_OF_ND__RESET_VALUE                         0x00000000U
/** @} */

/* macros for field tmff_uf_nd */
/**
 * @defgroup at_lc_regs_core_tmff_uf_nd_field tmff_uf_nd_field
 * @brief macros for field tmff_uf_nd
 * @details node number for the memory transmit fifo underflow interrupt
 * @{
 */
#define ATLC_ND_ST__TMFF_UF_ND__SHIFT                                        16
#define ATLC_ND_ST__TMFF_UF_ND__WIDTH                                         3
#define ATLC_ND_ST__TMFF_UF_ND__MASK                                0x00070000U
#define ATLC_ND_ST__TMFF_UF_ND__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00070000U) >> 16)
#define ATLC_ND_ST__TMFF_UF_ND__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_ND_ST__TYPE                                               uint32_t
#define ATLC_ND_ST__READ                                            0x00077777U
#define ATLC_ND_ST__PRESERVED                                       0x00000000U
#define ATLC_ND_ST__RESET_VALUE                                     0x00000000U

#endif /* __ATLC_ND_ST_MACRO__ */

/** @} end of nd_st */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_irq */
/**
 * @defgroup at_lc_regs_core_lc_irq lc_irq
 * @brief Contains register fields associated with lc_irq. definitions.
 * @{
 */
#ifndef __ATLC_LC_IRQ_MACRO__
#define __ATLC_LC_IRQ_MACRO__

/* macros for field tx_dsnt */
/**
 * @defgroup at_lc_regs_core_tx_dsnt_field tx_dsnt_field
 * @brief macros for field tx_dsnt
 * @details interrupt for transmit data sent
 * @{
 */
#define ATLC_LC_IRQ__TX_DSNT__SHIFT                                           0
#define ATLC_LC_IRQ__TX_DSNT__WIDTH                                           1
#define ATLC_LC_IRQ__TX_DSNT__MASK                                  0x00000001U
#define ATLC_LC_IRQ__TX_DSNT__READ(src)         ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_IRQ__TX_DSNT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_IRQ__TX_DSNT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_IRQ__TX_DSNT__RESET_VALUE                           0x00000000U
/** @} */

/* macros for field rx_drdy */
/**
 * @defgroup at_lc_regs_core_rx_drdy_field rx_drdy_field
 * @brief macros for field rx_drdy
 * @details interrupt for receive data ready
 * @{
 */
#define ATLC_LC_IRQ__RX_DRDY__SHIFT                                           1
#define ATLC_LC_IRQ__RX_DRDY__WIDTH                                           1
#define ATLC_LC_IRQ__RX_DRDY__MASK                                  0x00000002U
#define ATLC_LC_IRQ__RX_DRDY__READ(src)  (((uint32_t)(src) & 0x00000002U) >> 1)
#define ATLC_LC_IRQ__RX_DRDY__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(1) << 1)
#define ATLC_LC_IRQ__RX_DRDY__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(0) << 1)
#define ATLC_LC_IRQ__RX_DRDY__RESET_VALUE                           0x00000000U
/** @} */

/* macros for field max_rt */
/**
 * @defgroup at_lc_regs_core_max_rt_field max_rt_field
 * @brief macros for field max_rt
 * @details interrupt for maximum number of retransmission
 * @{
 */
#define ATLC_LC_IRQ__MAX_RT__SHIFT                                            2
#define ATLC_LC_IRQ__MAX_RT__WIDTH                                            1
#define ATLC_LC_IRQ__MAX_RT__MASK                                   0x00000004U
#define ATLC_LC_IRQ__MAX_RT__READ(src)   (((uint32_t)(src) & 0x00000004U) >> 2)
#define ATLC_LC_IRQ__MAX_RT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(1) << 2)
#define ATLC_LC_IRQ__MAX_RT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(0) << 2)
#define ATLC_LC_IRQ__MAX_RT__RESET_VALUE                            0x00000000U
/** @} */

/* macros for field rx_to */
/**
 * @defgroup at_lc_regs_core_rx_to_field rx_to_field
 * @brief macros for field rx_to
 * @details interrupt for receive time out
 * @{
 */
#define ATLC_LC_IRQ__RX_TO__SHIFT                                             3
#define ATLC_LC_IRQ__RX_TO__WIDTH                                             1
#define ATLC_LC_IRQ__RX_TO__MASK                                    0x00000008U
#define ATLC_LC_IRQ__RX_TO__READ(src)    (((uint32_t)(src) & 0x00000008U) >> 3)
#define ATLC_LC_IRQ__RX_TO__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | ((uint32_t)(1) << 3)
#define ATLC_LC_IRQ__RX_TO__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | ((uint32_t)(0) << 3)
#define ATLC_LC_IRQ__RX_TO__RESET_VALUE                             0x00000000U
/** @} */

/* macros for field rff_of */
/**
 * @defgroup at_lc_regs_core_rff_of_field rff_of_field
 * @brief macros for field rff_of
 * @details interrupt for receive fifo overflow hw exceptions
 * @{
 */
#define ATLC_LC_IRQ__RFF_OF__SHIFT                                            4
#define ATLC_LC_IRQ__RFF_OF__WIDTH                                            1
#define ATLC_LC_IRQ__RFF_OF__MASK                                   0x00000010U
#define ATLC_LC_IRQ__RFF_OF__READ(src)   (((uint32_t)(src) & 0x00000010U) >> 4)
#define ATLC_LC_IRQ__RFF_OF__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | ((uint32_t)(1) << 4)
#define ATLC_LC_IRQ__RFF_OF__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | ((uint32_t)(0) << 4)
#define ATLC_LC_IRQ__RFF_OF__RESET_VALUE                            0x00000000U
/** @} */

/* macros for field tff_uf */
/**
 * @defgroup at_lc_regs_core_tff_uf_field tff_uf_field
 * @brief macros for field tff_uf
 * @details interrupt for transmit fifo underflow hw exceptions
 * @{
 */
#define ATLC_LC_IRQ__TFF_UF__SHIFT                                            5
#define ATLC_LC_IRQ__TFF_UF__WIDTH                                            1
#define ATLC_LC_IRQ__TFF_UF__MASK                                   0x00000020U
#define ATLC_LC_IRQ__TFF_UF__READ(src)   (((uint32_t)(src) & 0x00000020U) >> 5)
#define ATLC_LC_IRQ__TFF_UF__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | ((uint32_t)(1) << 5)
#define ATLC_LC_IRQ__TFF_UF__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | ((uint32_t)(0) << 5)
#define ATLC_LC_IRQ__TFF_UF__RESET_VALUE                            0x00000000U
/** @} */

/* macros for field rmff_of */
/**
 * @defgroup at_lc_regs_core_rmff_of_field rmff_of_field
 * @brief macros for field rmff_of
 * @details interrupt for memory receive fifo overflow
 * @{
 */
#define ATLC_LC_IRQ__RMFF_OF__SHIFT                                           6
#define ATLC_LC_IRQ__RMFF_OF__WIDTH                                           1
#define ATLC_LC_IRQ__RMFF_OF__MASK                                  0x00000040U
#define ATLC_LC_IRQ__RMFF_OF__READ(src)  (((uint32_t)(src) & 0x00000040U) >> 6)
#define ATLC_LC_IRQ__RMFF_OF__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | ((uint32_t)(1) << 6)
#define ATLC_LC_IRQ__RMFF_OF__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | ((uint32_t)(0) << 6)
#define ATLC_LC_IRQ__RMFF_OF__RESET_VALUE                           0x00000000U
/** @} */

/* macros for field tmff_uf */
/**
 * @defgroup at_lc_regs_core_tmff_uf_field tmff_uf_field
 * @brief macros for field tmff_uf
 * @details interrupt for memory transmit fifo underflow
 * @{
 */
#define ATLC_LC_IRQ__TMFF_UF__SHIFT                                           7
#define ATLC_LC_IRQ__TMFF_UF__WIDTH                                           1
#define ATLC_LC_IRQ__TMFF_UF__MASK                                  0x00000080U
#define ATLC_LC_IRQ__TMFF_UF__READ(src)  (((uint32_t)(src) & 0x00000080U) >> 7)
#define ATLC_LC_IRQ__TMFF_UF__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(1) << 7)
#define ATLC_LC_IRQ__TMFF_UF__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(0) << 7)
#define ATLC_LC_IRQ__TMFF_UF__RESET_VALUE                           0x00000000U
/** @} */

/* macros for field tm_stmp_pst */
/**
 * @defgroup at_lc_regs_core_tm_stmp_pst_field tm_stmp_pst_field
 * @brief macros for field tm_stmp_pst
 * @details interrupt for time stamp in the past
 * @{
 */
#define ATLC_LC_IRQ__TM_STMP_PST__SHIFT                                       8
#define ATLC_LC_IRQ__TM_STMP_PST__WIDTH                                       1
#define ATLC_LC_IRQ__TM_STMP_PST__MASK                              0x00000100U
#define ATLC_LC_IRQ__TM_STMP_PST__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000100U) >> 8)
#define ATLC_LC_IRQ__TM_STMP_PST__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | ((uint32_t)(1) << 8)
#define ATLC_LC_IRQ__TM_STMP_PST__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | ((uint32_t)(0) << 8)
#define ATLC_LC_IRQ__TM_STMP_PST__RESET_VALUE                       0x00000000U
/** @} */

/* macros for field rx_sync_pls_n */
/**
 * @defgroup at_lc_regs_core_rx_sync_pls_n_field rx_sync_pls_n_field
 * @brief macros for field rx_sync_pls_n
 * @details interrupt for bytes after sync words are received
 * @{
 */
#define ATLC_LC_IRQ__RX_SYNC_PLS_N__SHIFT                                     9
#define ATLC_LC_IRQ__RX_SYNC_PLS_N__WIDTH                                     1
#define ATLC_LC_IRQ__RX_SYNC_PLS_N__MASK                            0x00000200U
#define ATLC_LC_IRQ__RX_SYNC_PLS_N__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000200U) >> 9)
#define ATLC_LC_IRQ__RX_SYNC_PLS_N__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000200U) | ((uint32_t)(1) << 9)
#define ATLC_LC_IRQ__RX_SYNC_PLS_N__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000200U) | ((uint32_t)(0) << 9)
#define ATLC_LC_IRQ__RX_SYNC_PLS_N__RESET_VALUE                     0x00000000U
/** @} */

/* macros for field wu_slp */
/**
 * @defgroup at_lc_regs_core_wu_slp_field wu_slp_field
 * @brief macros for field wu_slp
 * @details interrupt when waking up from sleep
 * @{
 */
#define ATLC_LC_IRQ__WU_SLP__SHIFT                                           10
#define ATLC_LC_IRQ__WU_SLP__WIDTH                                            1
#define ATLC_LC_IRQ__WU_SLP__MASK                                   0x00000400U
#define ATLC_LC_IRQ__WU_SLP__READ(src)  (((uint32_t)(src) & 0x00000400U) >> 10)
#define ATLC_LC_IRQ__WU_SLP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000400U) | ((uint32_t)(1) << 10)
#define ATLC_LC_IRQ__WU_SLP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000400U) | ((uint32_t)(0) << 10)
#define ATLC_LC_IRQ__WU_SLP__RESET_VALUE                            0x00000000U
/** @} */

/* macros for field cmd_err */
/**
 * @defgroup at_lc_regs_core_cmd_err_field cmd_err_field
 * @brief macros for field cmd_err
 * @details command error. issue one command before the previous one completes
 * @{
 */
#define ATLC_LC_IRQ__CMD_ERR__SHIFT                                          11
#define ATLC_LC_IRQ__CMD_ERR__WIDTH                                           1
#define ATLC_LC_IRQ__CMD_ERR__MASK                                  0x00000800U
#define ATLC_LC_IRQ__CMD_ERR__READ(src) (((uint32_t)(src) & 0x00000800U) >> 11)
#define ATLC_LC_IRQ__CMD_ERR__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000800U) | ((uint32_t)(1) << 11)
#define ATLC_LC_IRQ__CMD_ERR__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000800U) | ((uint32_t)(0) << 11)
#define ATLC_LC_IRQ__CMD_ERR__RESET_VALUE                           0x00000000U
/** @} */

/* macros for field chnl_bsy */
/**
 * @defgroup at_lc_regs_core_chnl_bsy_field chnl_bsy_field
 * @brief macros for field chnl_bsy
 * @details tx with cca rx detect channel busy
 * @{
 */
#define ATLC_LC_IRQ__CHNL_BSY__SHIFT                                         12
#define ATLC_LC_IRQ__CHNL_BSY__WIDTH                                          1
#define ATLC_LC_IRQ__CHNL_BSY__MASK                                 0x00001000U
#define ATLC_LC_IRQ__CHNL_BSY__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00001000U) >> 12)
#define ATLC_LC_IRQ__CHNL_BSY__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00001000U) | ((uint32_t)(1) << 12)
#define ATLC_LC_IRQ__CHNL_BSY__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00001000U) | ((uint32_t)(0) << 12)
#define ATLC_LC_IRQ__CHNL_BSY__RESET_VALUE                          0x00000000U
/** @} */

/* macros for field secure_done */
/**
 * @defgroup at_lc_regs_core_secure_done_field secure_done_field
 * @brief macros for field secure_done
 * @details interrupt for cmd => 0x11 finish
 * @{
 */
#define ATLC_LC_IRQ__SECURE_DONE__SHIFT                                      13
#define ATLC_LC_IRQ__SECURE_DONE__WIDTH                                       1
#define ATLC_LC_IRQ__SECURE_DONE__MASK                              0x00002000U
#define ATLC_LC_IRQ__SECURE_DONE__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00002000U) >> 13)
#define ATLC_LC_IRQ__SECURE_DONE__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00002000U) | ((uint32_t)(1) << 13)
#define ATLC_LC_IRQ__SECURE_DONE__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00002000U) | ((uint32_t)(0) << 13)
#define ATLC_LC_IRQ__SECURE_DONE__RESET_VALUE                       0x00000000U
/** @} */

/* macros for field desecure_done */
/**
 * @defgroup at_lc_regs_core_desecure_done_field desecure_done_field
 * @brief macros for field desecure_done
 * @details interrupt for cmd => 0x13 finish
 * @{
 */
#define ATLC_LC_IRQ__DESECURE_DONE__SHIFT                                    14
#define ATLC_LC_IRQ__DESECURE_DONE__WIDTH                                     1
#define ATLC_LC_IRQ__DESECURE_DONE__MASK                            0x00004000U
#define ATLC_LC_IRQ__DESECURE_DONE__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00004000U) >> 14)
#define ATLC_LC_IRQ__DESECURE_DONE__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00004000U) | ((uint32_t)(1) << 14)
#define ATLC_LC_IRQ__DESECURE_DONE__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00004000U) | ((uint32_t)(0) << 14)
#define ATLC_LC_IRQ__DESECURE_DONE__RESET_VALUE                     0x00000000U
/** @} */

/* macros for field rx_pyld_len_err */
/**
 * @defgroup at_lc_regs_core_rx_pyld_len_err_field rx_pyld_len_err_field
 * @brief macros for field rx_pyld_len_err
 * @details rx payload length exceeds maximal allowed value
 * @{
 */
#define ATLC_LC_IRQ__RX_PYLD_LEN_ERR__SHIFT                                  15
#define ATLC_LC_IRQ__RX_PYLD_LEN_ERR__WIDTH                                   1
#define ATLC_LC_IRQ__RX_PYLD_LEN_ERR__MASK                          0x00008000U
#define ATLC_LC_IRQ__RX_PYLD_LEN_ERR__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00008000U) >> 15)
#define ATLC_LC_IRQ__RX_PYLD_LEN_ERR__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | ((uint32_t)(1) << 15)
#define ATLC_LC_IRQ__RX_PYLD_LEN_ERR__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | ((uint32_t)(0) << 15)
#define ATLC_LC_IRQ__RX_PYLD_LEN_ERR__RESET_VALUE                   0x00000000U
/** @} */

/* macros for field rxsec_done */
/**
 * @defgroup at_lc_regs_core_rxsec_done_field rxsec_done_field
 * @brief macros for field rxsec_done
 * @details interrupt for cmd => 0x12 finish
 * @{
 */
#define ATLC_LC_IRQ__RXSEC_DONE__SHIFT                                       16
#define ATLC_LC_IRQ__RXSEC_DONE__WIDTH                                        1
#define ATLC_LC_IRQ__RXSEC_DONE__MASK                               0x00010000U
#define ATLC_LC_IRQ__RXSEC_DONE__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_LC_IRQ__RXSEC_DONE__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_LC_IRQ__RXSEC_DONE__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_LC_IRQ__RXSEC_DONE__RESET_VALUE                        0x00000000U
/** @} */

/* macros for field phr_err */
/**
 * @defgroup at_lc_regs_core_phr_err_field phr_err_field
 * @brief macros for field phr_err
 * @details The reserved bit in 15.4 PHR is not zero
 * @{
 */
#define ATLC_LC_IRQ__PHR_ERR__SHIFT                                          17
#define ATLC_LC_IRQ__PHR_ERR__WIDTH                                           1
#define ATLC_LC_IRQ__PHR_ERR__MASK                                  0x00020000U
#define ATLC_LC_IRQ__PHR_ERR__READ(src) (((uint32_t)(src) & 0x00020000U) >> 17)
#define ATLC_LC_IRQ__PHR_ERR__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00020000U) | ((uint32_t)(1) << 17)
#define ATLC_LC_IRQ__PHR_ERR__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00020000U) | ((uint32_t)(0) << 17)
#define ATLC_LC_IRQ__PHR_ERR__RESET_VALUE                           0x00000000U
/** @} */

/* macros for field rx_ed_mns_n */
/**
 * @defgroup at_lc_regs_core_rx_ed_mns_n_field rx_ed_mns_n_field
 * @brief macros for field rx_ed_mns_n
 * @details interrupt for n micro second before rx end
 * @{
 */
#define ATLC_LC_IRQ__RX_ED_MNS_N__SHIFT                                      18
#define ATLC_LC_IRQ__RX_ED_MNS_N__WIDTH                                       1
#define ATLC_LC_IRQ__RX_ED_MNS_N__MASK                              0x00040000U
#define ATLC_LC_IRQ__RX_ED_MNS_N__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00040000U) >> 18)
#define ATLC_LC_IRQ__RX_ED_MNS_N__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00040000U) | ((uint32_t)(1) << 18)
#define ATLC_LC_IRQ__RX_ED_MNS_N__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00040000U) | ((uint32_t)(0) << 18)
#define ATLC_LC_IRQ__RX_ED_MNS_N__RESET_VALUE                       0x00000000U
/** @} */

/* macros for field tx_ed_mns_n */
/**
 * @defgroup at_lc_regs_core_tx_ed_mns_n_field tx_ed_mns_n_field
 * @brief macros for field tx_ed_mns_n
 * @details interrupt for n micro second before tx end
 * @{
 */
#define ATLC_LC_IRQ__TX_ED_MNS_N__SHIFT                                      19
#define ATLC_LC_IRQ__TX_ED_MNS_N__WIDTH                                       1
#define ATLC_LC_IRQ__TX_ED_MNS_N__MASK                              0x00080000U
#define ATLC_LC_IRQ__TX_ED_MNS_N__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00080000U) >> 19)
#define ATLC_LC_IRQ__TX_ED_MNS_N__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00080000U) | ((uint32_t)(1) << 19)
#define ATLC_LC_IRQ__TX_ED_MNS_N__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00080000U) | ((uint32_t)(0) << 19)
#define ATLC_LC_IRQ__TX_ED_MNS_N__RESET_VALUE                       0x00000000U
/** @} */

/* macros for field rx_pyld_mic_len_err */
/**
 * @defgroup at_lc_regs_core_rx_pyld_mic_len_err_field rx_pyld_mic_len_err_field
 * @brief macros for field rx_pyld_mic_len_err
 * @details rx payload length less than MIC byte length
 * @{
 */
#define ATLC_LC_IRQ__RX_PYLD_MIC_LEN_ERR__SHIFT                              20
#define ATLC_LC_IRQ__RX_PYLD_MIC_LEN_ERR__WIDTH                               1
#define ATLC_LC_IRQ__RX_PYLD_MIC_LEN_ERR__MASK                      0x00100000U
#define ATLC_LC_IRQ__RX_PYLD_MIC_LEN_ERR__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00100000U) >> 20)
#define ATLC_LC_IRQ__RX_PYLD_MIC_LEN_ERR__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00100000U) | ((uint32_t)(1) << 20)
#define ATLC_LC_IRQ__RX_PYLD_MIC_LEN_ERR__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00100000U) | ((uint32_t)(0) << 20)
#define ATLC_LC_IRQ__RX_PYLD_MIC_LEN_ERR__RESET_VALUE               0x00000000U
/** @} */

/* macros for field rx_addr_no_mtch */
/**
 * @defgroup at_lc_regs_core_rx_addr_no_mtch_field rx_addr_no_mtch_field
 * @brief macros for field rx_addr_no_mtch
 * @details no address matches the address in the received packet, applicable only for FMAC
 * @{
 */
#define ATLC_LC_IRQ__RX_ADDR_NO_MTCH__SHIFT                                  21
#define ATLC_LC_IRQ__RX_ADDR_NO_MTCH__WIDTH                                   1
#define ATLC_LC_IRQ__RX_ADDR_NO_MTCH__MASK                          0x00200000U
#define ATLC_LC_IRQ__RX_ADDR_NO_MTCH__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00200000U) >> 21)
#define ATLC_LC_IRQ__RX_ADDR_NO_MTCH__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00200000U) | ((uint32_t)(1) << 21)
#define ATLC_LC_IRQ__RX_ADDR_NO_MTCH__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00200000U) | ((uint32_t)(0) << 21)
#define ATLC_LC_IRQ__RX_ADDR_NO_MTCH__RESET_VALUE                   0x00000000U
/** @} */

/* macros for field artd_no_rx_to */
/**
 * @defgroup at_lc_regs_core_artd_no_rx_to_field artd_no_rx_to_field
 * @brief macros for field artd_no_rx_to
 * @details auto retransmit delay hit but no rx to, applicable only for FMAC
 * @{
 */
#define ATLC_LC_IRQ__ARTD_NO_RX_TO__SHIFT                                    22
#define ATLC_LC_IRQ__ARTD_NO_RX_TO__WIDTH                                     1
#define ATLC_LC_IRQ__ARTD_NO_RX_TO__MASK                            0x00400000U
#define ATLC_LC_IRQ__ARTD_NO_RX_TO__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00400000U) >> 22)
#define ATLC_LC_IRQ__ARTD_NO_RX_TO__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00400000U) | ((uint32_t)(1) << 22)
#define ATLC_LC_IRQ__ARTD_NO_RX_TO__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00400000U) | ((uint32_t)(0) << 22)
#define ATLC_LC_IRQ__ARTD_NO_RX_TO__RESET_VALUE                     0x00000000U
/** @} */

/* macros for field tcm_acc_err */
/**
 * @defgroup at_lc_regs_core_tcm_acc_err_field tcm_acc_err_field
 * @brief macros for field tcm_acc_err
 * @details tcm access error status, asserted when ATLC HW tries to access TCM while tcm_atlc_byp is set to 1.
 * @{
 */
#define ATLC_LC_IRQ__TCM_ACC_ERR__SHIFT                                      23
#define ATLC_LC_IRQ__TCM_ACC_ERR__WIDTH                                       1
#define ATLC_LC_IRQ__TCM_ACC_ERR__MASK                              0x00800000U
#define ATLC_LC_IRQ__TCM_ACC_ERR__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00800000U) >> 23)
#define ATLC_LC_IRQ__TCM_ACC_ERR__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00800000U) | ((uint32_t)(1) << 23)
#define ATLC_LC_IRQ__TCM_ACC_ERR__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00800000U) | ((uint32_t)(0) << 23)
#define ATLC_LC_IRQ__TCM_ACC_ERR__RESET_VALUE                       0x00000000U
/** @} */
#define ATLC_LC_IRQ__TYPE                                              uint32_t
#define ATLC_LC_IRQ__READ                                           0x00ffffffU
#define ATLC_LC_IRQ__PRESERVED                                      0x00000000U
#define ATLC_LC_IRQ__RESET_VALUE                                    0x00000000U

#endif /* __ATLC_LC_IRQ_MACRO__ */

/** @} end of lc_irq */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_irqm */
/**
 * @defgroup at_lc_regs_core_lc_irqm lc_irqm
 * @brief _RETENTION_ definitions.
 * @{
 */
#ifndef __ATLC_LC_IRQM_MACRO__
#define __ATLC_LC_IRQM_MACRO__

/* macros for field tx_dsnt */
/**
 * @defgroup at_lc_regs_core_tx_dsnt_field tx_dsnt_field
 * @brief macros for field tx_dsnt
 * @details interrupt mask for transmit data sent
 * @{
 */
#define ATLC_LC_IRQM__TX_DSNT__SHIFT                                          0
#define ATLC_LC_IRQM__TX_DSNT__WIDTH                                          1
#define ATLC_LC_IRQM__TX_DSNT__MASK                                 0x00000001U
#define ATLC_LC_IRQM__TX_DSNT__READ(src)        ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_IRQM__TX_DSNT__WRITE(src)       ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_IRQM__TX_DSNT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_LC_IRQM__TX_DSNT__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_LC_IRQM__TX_DSNT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_IRQM__TX_DSNT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_IRQM__TX_DSNT__RESET_VALUE                          0x00000001U
/** @} */

/* macros for field rx_drdy */
/**
 * @defgroup at_lc_regs_core_rx_drdy_field rx_drdy_field
 * @brief macros for field rx_drdy
 * @details interrupt mask for receive data ready
 * @{
 */
#define ATLC_LC_IRQM__RX_DRDY__SHIFT                                          1
#define ATLC_LC_IRQM__RX_DRDY__WIDTH                                          1
#define ATLC_LC_IRQM__RX_DRDY__MASK                                 0x00000002U
#define ATLC_LC_IRQM__RX_DRDY__READ(src) (((uint32_t)(src) & 0x00000002U) >> 1)
#define ATLC_LC_IRQM__RX_DRDY__WRITE(src) \
                    (((uint32_t)(src)\
                    << 1) & 0x00000002U)
#define ATLC_LC_IRQM__RX_DRDY__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | (((uint32_t)(src) <<\
                    1) & 0x00000002U)
#define ATLC_LC_IRQM__RX_DRDY__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 1) & ~0x00000002U)))
#define ATLC_LC_IRQM__RX_DRDY__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(1) << 1)
#define ATLC_LC_IRQM__RX_DRDY__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(0) << 1)
#define ATLC_LC_IRQM__RX_DRDY__RESET_VALUE                          0x00000001U
/** @} */

/* macros for field max_rt */
/**
 * @defgroup at_lc_regs_core_max_rt_field max_rt_field
 * @brief macros for field max_rt
 * @details interrupt mask for maximum number of retransmission
 * @{
 */
#define ATLC_LC_IRQM__MAX_RT__SHIFT                                           2
#define ATLC_LC_IRQM__MAX_RT__WIDTH                                           1
#define ATLC_LC_IRQM__MAX_RT__MASK                                  0x00000004U
#define ATLC_LC_IRQM__MAX_RT__READ(src)  (((uint32_t)(src) & 0x00000004U) >> 2)
#define ATLC_LC_IRQM__MAX_RT__WRITE(src) (((uint32_t)(src) << 2) & 0x00000004U)
#define ATLC_LC_IRQM__MAX_RT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | (((uint32_t)(src) <<\
                    2) & 0x00000004U)
#define ATLC_LC_IRQM__MAX_RT__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 2) & ~0x00000004U)))
#define ATLC_LC_IRQM__MAX_RT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(1) << 2)
#define ATLC_LC_IRQM__MAX_RT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(0) << 2)
#define ATLC_LC_IRQM__MAX_RT__RESET_VALUE                           0x00000001U
/** @} */

/* macros for field rx_to */
/**
 * @defgroup at_lc_regs_core_rx_to_field rx_to_field
 * @brief macros for field rx_to
 * @details interrupt mask for receive time out
 * @{
 */
#define ATLC_LC_IRQM__RX_TO__SHIFT                                            3
#define ATLC_LC_IRQM__RX_TO__WIDTH                                            1
#define ATLC_LC_IRQM__RX_TO__MASK                                   0x00000008U
#define ATLC_LC_IRQM__RX_TO__READ(src)   (((uint32_t)(src) & 0x00000008U) >> 3)
#define ATLC_LC_IRQM__RX_TO__WRITE(src)  (((uint32_t)(src) << 3) & 0x00000008U)
#define ATLC_LC_IRQM__RX_TO__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | (((uint32_t)(src) <<\
                    3) & 0x00000008U)
#define ATLC_LC_IRQM__RX_TO__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 3) & ~0x00000008U)))
#define ATLC_LC_IRQM__RX_TO__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | ((uint32_t)(1) << 3)
#define ATLC_LC_IRQM__RX_TO__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | ((uint32_t)(0) << 3)
#define ATLC_LC_IRQM__RX_TO__RESET_VALUE                            0x00000001U
/** @} */

/* macros for field rff_of */
/**
 * @defgroup at_lc_regs_core_rff_of_field rff_of_field
 * @brief macros for field rff_of
 * @details interrupt mask for receive fifo overflow
 * @{
 */
#define ATLC_LC_IRQM__RFF_OF__SHIFT                                           4
#define ATLC_LC_IRQM__RFF_OF__WIDTH                                           1
#define ATLC_LC_IRQM__RFF_OF__MASK                                  0x00000010U
#define ATLC_LC_IRQM__RFF_OF__READ(src)  (((uint32_t)(src) & 0x00000010U) >> 4)
#define ATLC_LC_IRQM__RFF_OF__WRITE(src) (((uint32_t)(src) << 4) & 0x00000010U)
#define ATLC_LC_IRQM__RFF_OF__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | (((uint32_t)(src) <<\
                    4) & 0x00000010U)
#define ATLC_LC_IRQM__RFF_OF__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 4) & ~0x00000010U)))
#define ATLC_LC_IRQM__RFF_OF__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | ((uint32_t)(1) << 4)
#define ATLC_LC_IRQM__RFF_OF__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | ((uint32_t)(0) << 4)
#define ATLC_LC_IRQM__RFF_OF__RESET_VALUE                           0x00000001U
/** @} */

/* macros for field tff_uf */
/**
 * @defgroup at_lc_regs_core_tff_uf_field tff_uf_field
 * @brief macros for field tff_uf
 * @details interrupt mask for transmit fifo underflow
 * @{
 */
#define ATLC_LC_IRQM__TFF_UF__SHIFT                                           5
#define ATLC_LC_IRQM__TFF_UF__WIDTH                                           1
#define ATLC_LC_IRQM__TFF_UF__MASK                                  0x00000020U
#define ATLC_LC_IRQM__TFF_UF__READ(src)  (((uint32_t)(src) & 0x00000020U) >> 5)
#define ATLC_LC_IRQM__TFF_UF__WRITE(src) (((uint32_t)(src) << 5) & 0x00000020U)
#define ATLC_LC_IRQM__TFF_UF__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | (((uint32_t)(src) <<\
                    5) & 0x00000020U)
#define ATLC_LC_IRQM__TFF_UF__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 5) & ~0x00000020U)))
#define ATLC_LC_IRQM__TFF_UF__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | ((uint32_t)(1) << 5)
#define ATLC_LC_IRQM__TFF_UF__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | ((uint32_t)(0) << 5)
#define ATLC_LC_IRQM__TFF_UF__RESET_VALUE                           0x00000001U
/** @} */

/* macros for field rmff_of */
/**
 * @defgroup at_lc_regs_core_rmff_of_field rmff_of_field
 * @brief macros for field rmff_of
 * @details interrupt mask for memory receive fifo overflow
 * @{
 */
#define ATLC_LC_IRQM__RMFF_OF__SHIFT                                          6
#define ATLC_LC_IRQM__RMFF_OF__WIDTH                                          1
#define ATLC_LC_IRQM__RMFF_OF__MASK                                 0x00000040U
#define ATLC_LC_IRQM__RMFF_OF__READ(src) (((uint32_t)(src) & 0x00000040U) >> 6)
#define ATLC_LC_IRQM__RMFF_OF__WRITE(src) \
                    (((uint32_t)(src)\
                    << 6) & 0x00000040U)
#define ATLC_LC_IRQM__RMFF_OF__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | (((uint32_t)(src) <<\
                    6) & 0x00000040U)
#define ATLC_LC_IRQM__RMFF_OF__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 6) & ~0x00000040U)))
#define ATLC_LC_IRQM__RMFF_OF__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | ((uint32_t)(1) << 6)
#define ATLC_LC_IRQM__RMFF_OF__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | ((uint32_t)(0) << 6)
#define ATLC_LC_IRQM__RMFF_OF__RESET_VALUE                          0x00000001U
/** @} */

/* macros for field tmff_uf */
/**
 * @defgroup at_lc_regs_core_tmff_uf_field tmff_uf_field
 * @brief macros for field tmff_uf
 * @details interrupt mask for memory transmit fifo underflow
 * @{
 */
#define ATLC_LC_IRQM__TMFF_UF__SHIFT                                          7
#define ATLC_LC_IRQM__TMFF_UF__WIDTH                                          1
#define ATLC_LC_IRQM__TMFF_UF__MASK                                 0x00000080U
#define ATLC_LC_IRQM__TMFF_UF__READ(src) (((uint32_t)(src) & 0x00000080U) >> 7)
#define ATLC_LC_IRQM__TMFF_UF__WRITE(src) \
                    (((uint32_t)(src)\
                    << 7) & 0x00000080U)
#define ATLC_LC_IRQM__TMFF_UF__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | (((uint32_t)(src) <<\
                    7) & 0x00000080U)
#define ATLC_LC_IRQM__TMFF_UF__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 7) & ~0x00000080U)))
#define ATLC_LC_IRQM__TMFF_UF__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(1) << 7)
#define ATLC_LC_IRQM__TMFF_UF__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(0) << 7)
#define ATLC_LC_IRQM__TMFF_UF__RESET_VALUE                          0x00000001U
/** @} */

/* macros for field tm_stmp_pst */
/**
 * @defgroup at_lc_regs_core_tm_stmp_pst_field tm_stmp_pst_field
 * @brief macros for field tm_stmp_pst
 * @details interrupt mask for time stamp in the past
 * @{
 */
#define ATLC_LC_IRQM__TM_STMP_PST__SHIFT                                      8
#define ATLC_LC_IRQM__TM_STMP_PST__WIDTH                                      1
#define ATLC_LC_IRQM__TM_STMP_PST__MASK                             0x00000100U
#define ATLC_LC_IRQM__TM_STMP_PST__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000100U) >> 8)
#define ATLC_LC_IRQM__TM_STMP_PST__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00000100U)
#define ATLC_LC_IRQM__TM_STMP_PST__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | (((uint32_t)(src) <<\
                    8) & 0x00000100U)
#define ATLC_LC_IRQM__TM_STMP_PST__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00000100U)))
#define ATLC_LC_IRQM__TM_STMP_PST__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | ((uint32_t)(1) << 8)
#define ATLC_LC_IRQM__TM_STMP_PST__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | ((uint32_t)(0) << 8)
#define ATLC_LC_IRQM__TM_STMP_PST__RESET_VALUE                      0x00000001U
/** @} */

/* macros for field rx_sync_pls_n */
/**
 * @defgroup at_lc_regs_core_rx_sync_pls_n_field rx_sync_pls_n_field
 * @brief macros for field rx_sync_pls_n
 * @details interrupt mask for bytes after sync words are received
 * @{
 */
#define ATLC_LC_IRQM__RX_SYNC_PLS_N__SHIFT                                    9
#define ATLC_LC_IRQM__RX_SYNC_PLS_N__WIDTH                                    1
#define ATLC_LC_IRQM__RX_SYNC_PLS_N__MASK                           0x00000200U
#define ATLC_LC_IRQM__RX_SYNC_PLS_N__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000200U) >> 9)
#define ATLC_LC_IRQM__RX_SYNC_PLS_N__WRITE(src) \
                    (((uint32_t)(src)\
                    << 9) & 0x00000200U)
#define ATLC_LC_IRQM__RX_SYNC_PLS_N__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000200U) | (((uint32_t)(src) <<\
                    9) & 0x00000200U)
#define ATLC_LC_IRQM__RX_SYNC_PLS_N__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 9) & ~0x00000200U)))
#define ATLC_LC_IRQM__RX_SYNC_PLS_N__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000200U) | ((uint32_t)(1) << 9)
#define ATLC_LC_IRQM__RX_SYNC_PLS_N__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000200U) | ((uint32_t)(0) << 9)
#define ATLC_LC_IRQM__RX_SYNC_PLS_N__RESET_VALUE                    0x00000001U
/** @} */

/* macros for field wu_slp */
/**
 * @defgroup at_lc_regs_core_wu_slp_field wu_slp_field
 * @brief macros for field wu_slp
 * @details interrupt mask for waking up from sleep
 * @{
 */
#define ATLC_LC_IRQM__WU_SLP__SHIFT                                          10
#define ATLC_LC_IRQM__WU_SLP__WIDTH                                           1
#define ATLC_LC_IRQM__WU_SLP__MASK                                  0x00000400U
#define ATLC_LC_IRQM__WU_SLP__READ(src) (((uint32_t)(src) & 0x00000400U) >> 10)
#define ATLC_LC_IRQM__WU_SLP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 10) & 0x00000400U)
#define ATLC_LC_IRQM__WU_SLP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000400U) | (((uint32_t)(src) <<\
                    10) & 0x00000400U)
#define ATLC_LC_IRQM__WU_SLP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 10) & ~0x00000400U)))
#define ATLC_LC_IRQM__WU_SLP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000400U) | ((uint32_t)(1) << 10)
#define ATLC_LC_IRQM__WU_SLP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000400U) | ((uint32_t)(0) << 10)
#define ATLC_LC_IRQM__WU_SLP__RESET_VALUE                           0x00000001U
/** @} */

/* macros for field cmd_err */
/**
 * @defgroup at_lc_regs_core_cmd_err_field cmd_err_field
 * @brief macros for field cmd_err
 * @details interrupt mask for command error
 * @{
 */
#define ATLC_LC_IRQM__CMD_ERR__SHIFT                                         11
#define ATLC_LC_IRQM__CMD_ERR__WIDTH                                          1
#define ATLC_LC_IRQM__CMD_ERR__MASK                                 0x00000800U
#define ATLC_LC_IRQM__CMD_ERR__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000800U) >> 11)
#define ATLC_LC_IRQM__CMD_ERR__WRITE(src) \
                    (((uint32_t)(src)\
                    << 11) & 0x00000800U)
#define ATLC_LC_IRQM__CMD_ERR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000800U) | (((uint32_t)(src) <<\
                    11) & 0x00000800U)
#define ATLC_LC_IRQM__CMD_ERR__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 11) & ~0x00000800U)))
#define ATLC_LC_IRQM__CMD_ERR__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000800U) | ((uint32_t)(1) << 11)
#define ATLC_LC_IRQM__CMD_ERR__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000800U) | ((uint32_t)(0) << 11)
#define ATLC_LC_IRQM__CMD_ERR__RESET_VALUE                          0x00000001U
/** @} */

/* macros for field chnl_bsy */
/**
 * @defgroup at_lc_regs_core_chnl_bsy_field chnl_bsy_field
 * @brief macros for field chnl_bsy
 * @details interrupt mask for tx with cca rx detect channel busy
 * @{
 */
#define ATLC_LC_IRQM__CHNL_BSY__SHIFT                                        12
#define ATLC_LC_IRQM__CHNL_BSY__WIDTH                                         1
#define ATLC_LC_IRQM__CHNL_BSY__MASK                                0x00001000U
#define ATLC_LC_IRQM__CHNL_BSY__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00001000U) >> 12)
#define ATLC_LC_IRQM__CHNL_BSY__WRITE(src) \
                    (((uint32_t)(src)\
                    << 12) & 0x00001000U)
#define ATLC_LC_IRQM__CHNL_BSY__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00001000U) | (((uint32_t)(src) <<\
                    12) & 0x00001000U)
#define ATLC_LC_IRQM__CHNL_BSY__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 12) & ~0x00001000U)))
#define ATLC_LC_IRQM__CHNL_BSY__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00001000U) | ((uint32_t)(1) << 12)
#define ATLC_LC_IRQM__CHNL_BSY__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00001000U) | ((uint32_t)(0) << 12)
#define ATLC_LC_IRQM__CHNL_BSY__RESET_VALUE                         0x00000001U
/** @} */

/* macros for field secure_done */
/**
 * @defgroup at_lc_regs_core_secure_done_field secure_done_field
 * @brief macros for field secure_done
 * @details interrupt mask for cmd=0x11 finish
 * @{
 */
#define ATLC_LC_IRQM__SECURE_DONE__SHIFT                                     13
#define ATLC_LC_IRQM__SECURE_DONE__WIDTH                                      1
#define ATLC_LC_IRQM__SECURE_DONE__MASK                             0x00002000U
#define ATLC_LC_IRQM__SECURE_DONE__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00002000U) >> 13)
#define ATLC_LC_IRQM__SECURE_DONE__WRITE(src) \
                    (((uint32_t)(src)\
                    << 13) & 0x00002000U)
#define ATLC_LC_IRQM__SECURE_DONE__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00002000U) | (((uint32_t)(src) <<\
                    13) & 0x00002000U)
#define ATLC_LC_IRQM__SECURE_DONE__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 13) & ~0x00002000U)))
#define ATLC_LC_IRQM__SECURE_DONE__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00002000U) | ((uint32_t)(1) << 13)
#define ATLC_LC_IRQM__SECURE_DONE__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00002000U) | ((uint32_t)(0) << 13)
#define ATLC_LC_IRQM__SECURE_DONE__RESET_VALUE                      0x00000001U
/** @} */

/* macros for field desecure_done */
/**
 * @defgroup at_lc_regs_core_desecure_done_field desecure_done_field
 * @brief macros for field desecure_done
 * @details interrupt mask for cmd=0x13 finish
 * @{
 */
#define ATLC_LC_IRQM__DESECURE_DONE__SHIFT                                   14
#define ATLC_LC_IRQM__DESECURE_DONE__WIDTH                                    1
#define ATLC_LC_IRQM__DESECURE_DONE__MASK                           0x00004000U
#define ATLC_LC_IRQM__DESECURE_DONE__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00004000U) >> 14)
#define ATLC_LC_IRQM__DESECURE_DONE__WRITE(src) \
                    (((uint32_t)(src)\
                    << 14) & 0x00004000U)
#define ATLC_LC_IRQM__DESECURE_DONE__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00004000U) | (((uint32_t)(src) <<\
                    14) & 0x00004000U)
#define ATLC_LC_IRQM__DESECURE_DONE__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 14) & ~0x00004000U)))
#define ATLC_LC_IRQM__DESECURE_DONE__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00004000U) | ((uint32_t)(1) << 14)
#define ATLC_LC_IRQM__DESECURE_DONE__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00004000U) | ((uint32_t)(0) << 14)
#define ATLC_LC_IRQM__DESECURE_DONE__RESET_VALUE                    0x00000001U
/** @} */

/* macros for field rx_pyld_len_err */
/**
 * @defgroup at_lc_regs_core_rx_pyld_len_err_field rx_pyld_len_err_field
 * @brief macros for field rx_pyld_len_err
 * @details interrupt mask for rx payload length exceeds maximal allowed value
 * @{
 */
#define ATLC_LC_IRQM__RX_PYLD_LEN_ERR__SHIFT                                 15
#define ATLC_LC_IRQM__RX_PYLD_LEN_ERR__WIDTH                                  1
#define ATLC_LC_IRQM__RX_PYLD_LEN_ERR__MASK                         0x00008000U
#define ATLC_LC_IRQM__RX_PYLD_LEN_ERR__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00008000U) >> 15)
#define ATLC_LC_IRQM__RX_PYLD_LEN_ERR__WRITE(src) \
                    (((uint32_t)(src)\
                    << 15) & 0x00008000U)
#define ATLC_LC_IRQM__RX_PYLD_LEN_ERR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | (((uint32_t)(src) <<\
                    15) & 0x00008000U)
#define ATLC_LC_IRQM__RX_PYLD_LEN_ERR__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 15) & ~0x00008000U)))
#define ATLC_LC_IRQM__RX_PYLD_LEN_ERR__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | ((uint32_t)(1) << 15)
#define ATLC_LC_IRQM__RX_PYLD_LEN_ERR__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | ((uint32_t)(0) << 15)
#define ATLC_LC_IRQM__RX_PYLD_LEN_ERR__RESET_VALUE                  0x00000001U
/** @} */

/* macros for field rxsec_done */
/**
 * @defgroup at_lc_regs_core_rxsec_done_field rxsec_done_field
 * @brief macros for field rxsec_done
 * @details interrupt mask for cmd=0x12 finish
 * @{
 */
#define ATLC_LC_IRQM__RXSEC_DONE__SHIFT                                      16
#define ATLC_LC_IRQM__RXSEC_DONE__WIDTH                                       1
#define ATLC_LC_IRQM__RXSEC_DONE__MASK                              0x00010000U
#define ATLC_LC_IRQM__RXSEC_DONE__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_LC_IRQM__RXSEC_DONE__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00010000U)
#define ATLC_LC_IRQM__RXSEC_DONE__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | (((uint32_t)(src) <<\
                    16) & 0x00010000U)
#define ATLC_LC_IRQM__RXSEC_DONE__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00010000U)))
#define ATLC_LC_IRQM__RXSEC_DONE__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_LC_IRQM__RXSEC_DONE__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_LC_IRQM__RXSEC_DONE__RESET_VALUE                       0x00000001U
/** @} */

/* macros for field phr_err */
/**
 * @defgroup at_lc_regs_core_phr_err_field phr_err_field
 * @brief macros for field phr_err
 * @details The reserved bit in 15.4 PHR is not zero
 * @{
 */
#define ATLC_LC_IRQM__PHR_ERR__SHIFT                                         17
#define ATLC_LC_IRQM__PHR_ERR__WIDTH                                          1
#define ATLC_LC_IRQM__PHR_ERR__MASK                                 0x00020000U
#define ATLC_LC_IRQM__PHR_ERR__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00020000U) >> 17)
#define ATLC_LC_IRQM__PHR_ERR__WRITE(src) \
                    (((uint32_t)(src)\
                    << 17) & 0x00020000U)
#define ATLC_LC_IRQM__PHR_ERR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00020000U) | (((uint32_t)(src) <<\
                    17) & 0x00020000U)
#define ATLC_LC_IRQM__PHR_ERR__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 17) & ~0x00020000U)))
#define ATLC_LC_IRQM__PHR_ERR__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00020000U) | ((uint32_t)(1) << 17)
#define ATLC_LC_IRQM__PHR_ERR__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00020000U) | ((uint32_t)(0) << 17)
#define ATLC_LC_IRQM__PHR_ERR__RESET_VALUE                          0x00000001U
/** @} */

/* macros for field rx_ed_mns_n */
/**
 * @defgroup at_lc_regs_core_rx_ed_mns_n_field rx_ed_mns_n_field
 * @brief macros for field rx_ed_mns_n
 * @details interrupt for n micro second before rx end
 * @{
 */
#define ATLC_LC_IRQM__RX_ED_MNS_N__SHIFT                                     18
#define ATLC_LC_IRQM__RX_ED_MNS_N__WIDTH                                      1
#define ATLC_LC_IRQM__RX_ED_MNS_N__MASK                             0x00040000U
#define ATLC_LC_IRQM__RX_ED_MNS_N__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00040000U) >> 18)
#define ATLC_LC_IRQM__RX_ED_MNS_N__WRITE(src) \
                    (((uint32_t)(src)\
                    << 18) & 0x00040000U)
#define ATLC_LC_IRQM__RX_ED_MNS_N__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00040000U) | (((uint32_t)(src) <<\
                    18) & 0x00040000U)
#define ATLC_LC_IRQM__RX_ED_MNS_N__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 18) & ~0x00040000U)))
#define ATLC_LC_IRQM__RX_ED_MNS_N__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00040000U) | ((uint32_t)(1) << 18)
#define ATLC_LC_IRQM__RX_ED_MNS_N__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00040000U) | ((uint32_t)(0) << 18)
#define ATLC_LC_IRQM__RX_ED_MNS_N__RESET_VALUE                      0x00000001U
/** @} */

/* macros for field tx_ed_mns_n */
/**
 * @defgroup at_lc_regs_core_tx_ed_mns_n_field tx_ed_mns_n_field
 * @brief macros for field tx_ed_mns_n
 * @details interrupt for n micro second before tx end
 * @{
 */
#define ATLC_LC_IRQM__TX_ED_MNS_N__SHIFT                                     19
#define ATLC_LC_IRQM__TX_ED_MNS_N__WIDTH                                      1
#define ATLC_LC_IRQM__TX_ED_MNS_N__MASK                             0x00080000U
#define ATLC_LC_IRQM__TX_ED_MNS_N__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00080000U) >> 19)
#define ATLC_LC_IRQM__TX_ED_MNS_N__WRITE(src) \
                    (((uint32_t)(src)\
                    << 19) & 0x00080000U)
#define ATLC_LC_IRQM__TX_ED_MNS_N__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00080000U) | (((uint32_t)(src) <<\
                    19) & 0x00080000U)
#define ATLC_LC_IRQM__TX_ED_MNS_N__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 19) & ~0x00080000U)))
#define ATLC_LC_IRQM__TX_ED_MNS_N__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00080000U) | ((uint32_t)(1) << 19)
#define ATLC_LC_IRQM__TX_ED_MNS_N__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00080000U) | ((uint32_t)(0) << 19)
#define ATLC_LC_IRQM__TX_ED_MNS_N__RESET_VALUE                      0x00000001U
/** @} */

/* macros for field rx_pyld_mic_len_err */
/**
 * @defgroup at_lc_regs_core_rx_pyld_mic_len_err_field rx_pyld_mic_len_err_field
 * @brief macros for field rx_pyld_mic_len_err
 * @details interrupt mask for rx payload length less than MIC byte length
 * @{
 */
#define ATLC_LC_IRQM__RX_PYLD_MIC_LEN_ERR__SHIFT                             20
#define ATLC_LC_IRQM__RX_PYLD_MIC_LEN_ERR__WIDTH                              1
#define ATLC_LC_IRQM__RX_PYLD_MIC_LEN_ERR__MASK                     0x00100000U
#define ATLC_LC_IRQM__RX_PYLD_MIC_LEN_ERR__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00100000U) >> 20)
#define ATLC_LC_IRQM__RX_PYLD_MIC_LEN_ERR__WRITE(src) \
                    (((uint32_t)(src)\
                    << 20) & 0x00100000U)
#define ATLC_LC_IRQM__RX_PYLD_MIC_LEN_ERR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00100000U) | (((uint32_t)(src) <<\
                    20) & 0x00100000U)
#define ATLC_LC_IRQM__RX_PYLD_MIC_LEN_ERR__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 20) & ~0x00100000U)))
#define ATLC_LC_IRQM__RX_PYLD_MIC_LEN_ERR__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00100000U) | ((uint32_t)(1) << 20)
#define ATLC_LC_IRQM__RX_PYLD_MIC_LEN_ERR__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00100000U) | ((uint32_t)(0) << 20)
#define ATLC_LC_IRQM__RX_PYLD_MIC_LEN_ERR__RESET_VALUE              0x00000001U
/** @} */

/* macros for field rx_addr_no_mtch */
/**
 * @defgroup at_lc_regs_core_rx_addr_no_mtch_field rx_addr_no_mtch_field
 * @brief macros for field rx_addr_no_mtch
 * @details no address matches the address in the received packet, applicable only for FMAC
 * @{
 */
#define ATLC_LC_IRQM__RX_ADDR_NO_MTCH__SHIFT                                 21
#define ATLC_LC_IRQM__RX_ADDR_NO_MTCH__WIDTH                                  1
#define ATLC_LC_IRQM__RX_ADDR_NO_MTCH__MASK                         0x00200000U
#define ATLC_LC_IRQM__RX_ADDR_NO_MTCH__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00200000U) >> 21)
#define ATLC_LC_IRQM__RX_ADDR_NO_MTCH__WRITE(src) \
                    (((uint32_t)(src)\
                    << 21) & 0x00200000U)
#define ATLC_LC_IRQM__RX_ADDR_NO_MTCH__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00200000U) | (((uint32_t)(src) <<\
                    21) & 0x00200000U)
#define ATLC_LC_IRQM__RX_ADDR_NO_MTCH__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 21) & ~0x00200000U)))
#define ATLC_LC_IRQM__RX_ADDR_NO_MTCH__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00200000U) | ((uint32_t)(1) << 21)
#define ATLC_LC_IRQM__RX_ADDR_NO_MTCH__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00200000U) | ((uint32_t)(0) << 21)
#define ATLC_LC_IRQM__RX_ADDR_NO_MTCH__RESET_VALUE                  0x00000000U
/** @} */

/* macros for field artd_no_rx_to */
/**
 * @defgroup at_lc_regs_core_artd_no_rx_to_field artd_no_rx_to_field
 * @brief macros for field artd_no_rx_to
 * @details auto retransmit delay hit but no rx to, applicable only for FMAC
 * @{
 */
#define ATLC_LC_IRQM__ARTD_NO_RX_TO__SHIFT                                   22
#define ATLC_LC_IRQM__ARTD_NO_RX_TO__WIDTH                                    1
#define ATLC_LC_IRQM__ARTD_NO_RX_TO__MASK                           0x00400000U
#define ATLC_LC_IRQM__ARTD_NO_RX_TO__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00400000U) >> 22)
#define ATLC_LC_IRQM__ARTD_NO_RX_TO__WRITE(src) \
                    (((uint32_t)(src)\
                    << 22) & 0x00400000U)
#define ATLC_LC_IRQM__ARTD_NO_RX_TO__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00400000U) | (((uint32_t)(src) <<\
                    22) & 0x00400000U)
#define ATLC_LC_IRQM__ARTD_NO_RX_TO__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 22) & ~0x00400000U)))
#define ATLC_LC_IRQM__ARTD_NO_RX_TO__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00400000U) | ((uint32_t)(1) << 22)
#define ATLC_LC_IRQM__ARTD_NO_RX_TO__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00400000U) | ((uint32_t)(0) << 22)
#define ATLC_LC_IRQM__ARTD_NO_RX_TO__RESET_VALUE                    0x00000000U
/** @} */

/* macros for field tcm_acc_err */
/**
 * @defgroup at_lc_regs_core_tcm_acc_err_field tcm_acc_err_field
 * @brief macros for field tcm_acc_err
 * @details tcm access error.
 * @{
 */
#define ATLC_LC_IRQM__TCM_ACC_ERR__SHIFT                                     23
#define ATLC_LC_IRQM__TCM_ACC_ERR__WIDTH                                      1
#define ATLC_LC_IRQM__TCM_ACC_ERR__MASK                             0x00800000U
#define ATLC_LC_IRQM__TCM_ACC_ERR__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00800000U) >> 23)
#define ATLC_LC_IRQM__TCM_ACC_ERR__WRITE(src) \
                    (((uint32_t)(src)\
                    << 23) & 0x00800000U)
#define ATLC_LC_IRQM__TCM_ACC_ERR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00800000U) | (((uint32_t)(src) <<\
                    23) & 0x00800000U)
#define ATLC_LC_IRQM__TCM_ACC_ERR__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 23) & ~0x00800000U)))
#define ATLC_LC_IRQM__TCM_ACC_ERR__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00800000U) | ((uint32_t)(1) << 23)
#define ATLC_LC_IRQM__TCM_ACC_ERR__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00800000U) | ((uint32_t)(0) << 23)
#define ATLC_LC_IRQM__TCM_ACC_ERR__RESET_VALUE                      0x00000001U
/** @} */
#define ATLC_LC_IRQM__TYPE                                             uint32_t
#define ATLC_LC_IRQM__READ                                          0x00ffffffU
#define ATLC_LC_IRQM__WRITE                                         0x00ffffffU
#define ATLC_LC_IRQM__PRESERVED                                     0x00000000U
#define ATLC_LC_IRQM__RESET_VALUE                                   0x009fffffU

#endif /* __ATLC_LC_IRQM_MACRO__ */

/** @} end of lc_irqm */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_irqs */
/**
 * @defgroup at_lc_regs_core_lc_irqs lc_irqs
 * @brief Contains register fields associated with lc_irqs. definitions.
 * @{
 */
#ifndef __ATLC_LC_IRQS_MACRO__
#define __ATLC_LC_IRQS_MACRO__

/* macros for field tx_dsnt */
/**
 * @defgroup at_lc_regs_core_tx_dsnt_field tx_dsnt_field
 * @brief macros for field tx_dsnt
 * @details interrupt for transmit data sent, write 1 to set. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQS__TX_DSNT__SHIFT                                          0
#define ATLC_LC_IRQS__TX_DSNT__WIDTH                                          1
#define ATLC_LC_IRQS__TX_DSNT__MASK                                 0x00000001U
#define ATLC_LC_IRQS__TX_DSNT__READ(src)        ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_IRQS__TX_DSNT__WRITE(src)       ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_IRQS__TX_DSNT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_LC_IRQS__TX_DSNT__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_LC_IRQS__TX_DSNT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_IRQS__TX_DSNT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_IRQS__TX_DSNT__RESET_VALUE                          0x00000000U
/** @} */

/* macros for field rx_drdy */
/**
 * @defgroup at_lc_regs_core_rx_drdy_field rx_drdy_field
 * @brief macros for field rx_drdy
 * @details interrupt for receive data ready, write 1 to set. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQS__RX_DRDY__SHIFT                                          1
#define ATLC_LC_IRQS__RX_DRDY__WIDTH                                          1
#define ATLC_LC_IRQS__RX_DRDY__MASK                                 0x00000002U
#define ATLC_LC_IRQS__RX_DRDY__READ(src) (((uint32_t)(src) & 0x00000002U) >> 1)
#define ATLC_LC_IRQS__RX_DRDY__WRITE(src) \
                    (((uint32_t)(src)\
                    << 1) & 0x00000002U)
#define ATLC_LC_IRQS__RX_DRDY__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | (((uint32_t)(src) <<\
                    1) & 0x00000002U)
#define ATLC_LC_IRQS__RX_DRDY__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 1) & ~0x00000002U)))
#define ATLC_LC_IRQS__RX_DRDY__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(1) << 1)
#define ATLC_LC_IRQS__RX_DRDY__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(0) << 1)
#define ATLC_LC_IRQS__RX_DRDY__RESET_VALUE                          0x00000000U
/** @} */

/* macros for field max_rt */
/**
 * @defgroup at_lc_regs_core_max_rt_field max_rt_field
 * @brief macros for field max_rt
 * @details interrupt for maximum number of retransmission, write 1 to set. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQS__MAX_RT__SHIFT                                           2
#define ATLC_LC_IRQS__MAX_RT__WIDTH                                           1
#define ATLC_LC_IRQS__MAX_RT__MASK                                  0x00000004U
#define ATLC_LC_IRQS__MAX_RT__READ(src)  (((uint32_t)(src) & 0x00000004U) >> 2)
#define ATLC_LC_IRQS__MAX_RT__WRITE(src) (((uint32_t)(src) << 2) & 0x00000004U)
#define ATLC_LC_IRQS__MAX_RT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | (((uint32_t)(src) <<\
                    2) & 0x00000004U)
#define ATLC_LC_IRQS__MAX_RT__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 2) & ~0x00000004U)))
#define ATLC_LC_IRQS__MAX_RT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(1) << 2)
#define ATLC_LC_IRQS__MAX_RT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(0) << 2)
#define ATLC_LC_IRQS__MAX_RT__RESET_VALUE                           0x00000000U
/** @} */

/* macros for field rx_to */
/**
 * @defgroup at_lc_regs_core_rx_to_field rx_to_field
 * @brief macros for field rx_to
 * @details interrupt for receive time out, write 1 to set. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQS__RX_TO__SHIFT                                            3
#define ATLC_LC_IRQS__RX_TO__WIDTH                                            1
#define ATLC_LC_IRQS__RX_TO__MASK                                   0x00000008U
#define ATLC_LC_IRQS__RX_TO__READ(src)   (((uint32_t)(src) & 0x00000008U) >> 3)
#define ATLC_LC_IRQS__RX_TO__WRITE(src)  (((uint32_t)(src) << 3) & 0x00000008U)
#define ATLC_LC_IRQS__RX_TO__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | (((uint32_t)(src) <<\
                    3) & 0x00000008U)
#define ATLC_LC_IRQS__RX_TO__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 3) & ~0x00000008U)))
#define ATLC_LC_IRQS__RX_TO__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | ((uint32_t)(1) << 3)
#define ATLC_LC_IRQS__RX_TO__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | ((uint32_t)(0) << 3)
#define ATLC_LC_IRQS__RX_TO__RESET_VALUE                            0x00000000U
/** @} */

/* macros for field rff_of */
/**
 * @defgroup at_lc_regs_core_rff_of_field rff_of_field
 * @brief macros for field rff_of
 * @details interrupt for receive fifo overflow, write 1 to set. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQS__RFF_OF__SHIFT                                           4
#define ATLC_LC_IRQS__RFF_OF__WIDTH                                           1
#define ATLC_LC_IRQS__RFF_OF__MASK                                  0x00000010U
#define ATLC_LC_IRQS__RFF_OF__READ(src)  (((uint32_t)(src) & 0x00000010U) >> 4)
#define ATLC_LC_IRQS__RFF_OF__WRITE(src) (((uint32_t)(src) << 4) & 0x00000010U)
#define ATLC_LC_IRQS__RFF_OF__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | (((uint32_t)(src) <<\
                    4) & 0x00000010U)
#define ATLC_LC_IRQS__RFF_OF__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 4) & ~0x00000010U)))
#define ATLC_LC_IRQS__RFF_OF__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | ((uint32_t)(1) << 4)
#define ATLC_LC_IRQS__RFF_OF__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | ((uint32_t)(0) << 4)
#define ATLC_LC_IRQS__RFF_OF__RESET_VALUE                           0x00000000U
/** @} */

/* macros for field tff_uf */
/**
 * @defgroup at_lc_regs_core_tff_uf_field tff_uf_field
 * @brief macros for field tff_uf
 * @details interrupt for transmit fifo underflow, write 1 to set. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQS__TFF_UF__SHIFT                                           5
#define ATLC_LC_IRQS__TFF_UF__WIDTH                                           1
#define ATLC_LC_IRQS__TFF_UF__MASK                                  0x00000020U
#define ATLC_LC_IRQS__TFF_UF__READ(src)  (((uint32_t)(src) & 0x00000020U) >> 5)
#define ATLC_LC_IRQS__TFF_UF__WRITE(src) (((uint32_t)(src) << 5) & 0x00000020U)
#define ATLC_LC_IRQS__TFF_UF__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | (((uint32_t)(src) <<\
                    5) & 0x00000020U)
#define ATLC_LC_IRQS__TFF_UF__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 5) & ~0x00000020U)))
#define ATLC_LC_IRQS__TFF_UF__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | ((uint32_t)(1) << 5)
#define ATLC_LC_IRQS__TFF_UF__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | ((uint32_t)(0) << 5)
#define ATLC_LC_IRQS__TFF_UF__RESET_VALUE                           0x00000000U
/** @} */

/* macros for field rmff_of */
/**
 * @defgroup at_lc_regs_core_rmff_of_field rmff_of_field
 * @brief macros for field rmff_of
 * @details interrupt for memory receive fifo overflow, write 1 to set. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQS__RMFF_OF__SHIFT                                          6
#define ATLC_LC_IRQS__RMFF_OF__WIDTH                                          1
#define ATLC_LC_IRQS__RMFF_OF__MASK                                 0x00000040U
#define ATLC_LC_IRQS__RMFF_OF__READ(src) (((uint32_t)(src) & 0x00000040U) >> 6)
#define ATLC_LC_IRQS__RMFF_OF__WRITE(src) \
                    (((uint32_t)(src)\
                    << 6) & 0x00000040U)
#define ATLC_LC_IRQS__RMFF_OF__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | (((uint32_t)(src) <<\
                    6) & 0x00000040U)
#define ATLC_LC_IRQS__RMFF_OF__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 6) & ~0x00000040U)))
#define ATLC_LC_IRQS__RMFF_OF__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | ((uint32_t)(1) << 6)
#define ATLC_LC_IRQS__RMFF_OF__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | ((uint32_t)(0) << 6)
#define ATLC_LC_IRQS__RMFF_OF__RESET_VALUE                          0x00000000U
/** @} */

/* macros for field tmff_uf */
/**
 * @defgroup at_lc_regs_core_tmff_uf_field tmff_uf_field
 * @brief macros for field tmff_uf
 * @details interrupt for memory transmit fifo underflow, write 1 to set. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQS__TMFF_UF__SHIFT                                          7
#define ATLC_LC_IRQS__TMFF_UF__WIDTH                                          1
#define ATLC_LC_IRQS__TMFF_UF__MASK                                 0x00000080U
#define ATLC_LC_IRQS__TMFF_UF__READ(src) (((uint32_t)(src) & 0x00000080U) >> 7)
#define ATLC_LC_IRQS__TMFF_UF__WRITE(src) \
                    (((uint32_t)(src)\
                    << 7) & 0x00000080U)
#define ATLC_LC_IRQS__TMFF_UF__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | (((uint32_t)(src) <<\
                    7) & 0x00000080U)
#define ATLC_LC_IRQS__TMFF_UF__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 7) & ~0x00000080U)))
#define ATLC_LC_IRQS__TMFF_UF__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(1) << 7)
#define ATLC_LC_IRQS__TMFF_UF__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(0) << 7)
#define ATLC_LC_IRQS__TMFF_UF__RESET_VALUE                          0x00000000U
/** @} */

/* macros for field tm_stmp_pst */
/**
 * @defgroup at_lc_regs_core_tm_stmp_pst_field tm_stmp_pst_field
 * @brief macros for field tm_stmp_pst
 * @details interrupt for time stamp in the past, write 1 to set. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQS__TM_STMP_PST__SHIFT                                      8
#define ATLC_LC_IRQS__TM_STMP_PST__WIDTH                                      1
#define ATLC_LC_IRQS__TM_STMP_PST__MASK                             0x00000100U
#define ATLC_LC_IRQS__TM_STMP_PST__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000100U) >> 8)
#define ATLC_LC_IRQS__TM_STMP_PST__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00000100U)
#define ATLC_LC_IRQS__TM_STMP_PST__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | (((uint32_t)(src) <<\
                    8) & 0x00000100U)
#define ATLC_LC_IRQS__TM_STMP_PST__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00000100U)))
#define ATLC_LC_IRQS__TM_STMP_PST__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | ((uint32_t)(1) << 8)
#define ATLC_LC_IRQS__TM_STMP_PST__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | ((uint32_t)(0) << 8)
#define ATLC_LC_IRQS__TM_STMP_PST__RESET_VALUE                      0x00000000U
/** @} */

/* macros for field rx_sync_pls_n */
/**
 * @defgroup at_lc_regs_core_rx_sync_pls_n_field rx_sync_pls_n_field
 * @brief macros for field rx_sync_pls_n
 * @details interrupt for bytes after sync words are received, write 1 to set. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQS__RX_SYNC_PLS_N__SHIFT                                    9
#define ATLC_LC_IRQS__RX_SYNC_PLS_N__WIDTH                                    1
#define ATLC_LC_IRQS__RX_SYNC_PLS_N__MASK                           0x00000200U
#define ATLC_LC_IRQS__RX_SYNC_PLS_N__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000200U) >> 9)
#define ATLC_LC_IRQS__RX_SYNC_PLS_N__WRITE(src) \
                    (((uint32_t)(src)\
                    << 9) & 0x00000200U)
#define ATLC_LC_IRQS__RX_SYNC_PLS_N__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000200U) | (((uint32_t)(src) <<\
                    9) & 0x00000200U)
#define ATLC_LC_IRQS__RX_SYNC_PLS_N__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 9) & ~0x00000200U)))
#define ATLC_LC_IRQS__RX_SYNC_PLS_N__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000200U) | ((uint32_t)(1) << 9)
#define ATLC_LC_IRQS__RX_SYNC_PLS_N__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000200U) | ((uint32_t)(0) << 9)
#define ATLC_LC_IRQS__RX_SYNC_PLS_N__RESET_VALUE                    0x00000000U
/** @} */

/* macros for field wu_slp */
/**
 * @defgroup at_lc_regs_core_wu_slp_field wu_slp_field
 * @brief macros for field wu_slp
 * @details interrupt for waking up from sleep, write 1 to set. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQS__WU_SLP__SHIFT                                          10
#define ATLC_LC_IRQS__WU_SLP__WIDTH                                           1
#define ATLC_LC_IRQS__WU_SLP__MASK                                  0x00000400U
#define ATLC_LC_IRQS__WU_SLP__READ(src) (((uint32_t)(src) & 0x00000400U) >> 10)
#define ATLC_LC_IRQS__WU_SLP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 10) & 0x00000400U)
#define ATLC_LC_IRQS__WU_SLP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000400U) | (((uint32_t)(src) <<\
                    10) & 0x00000400U)
#define ATLC_LC_IRQS__WU_SLP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 10) & ~0x00000400U)))
#define ATLC_LC_IRQS__WU_SLP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000400U) | ((uint32_t)(1) << 10)
#define ATLC_LC_IRQS__WU_SLP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000400U) | ((uint32_t)(0) << 10)
#define ATLC_LC_IRQS__WU_SLP__RESET_VALUE                           0x00000000U
/** @} */

/* macros for field cmd_err */
/**
 * @defgroup at_lc_regs_core_cmd_err_field cmd_err_field
 * @brief macros for field cmd_err
 * @details interrupt for command error, write 1 to set. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQS__CMD_ERR__SHIFT                                         11
#define ATLC_LC_IRQS__CMD_ERR__WIDTH                                          1
#define ATLC_LC_IRQS__CMD_ERR__MASK                                 0x00000800U
#define ATLC_LC_IRQS__CMD_ERR__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000800U) >> 11)
#define ATLC_LC_IRQS__CMD_ERR__WRITE(src) \
                    (((uint32_t)(src)\
                    << 11) & 0x00000800U)
#define ATLC_LC_IRQS__CMD_ERR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000800U) | (((uint32_t)(src) <<\
                    11) & 0x00000800U)
#define ATLC_LC_IRQS__CMD_ERR__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 11) & ~0x00000800U)))
#define ATLC_LC_IRQS__CMD_ERR__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000800U) | ((uint32_t)(1) << 11)
#define ATLC_LC_IRQS__CMD_ERR__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000800U) | ((uint32_t)(0) << 11)
#define ATLC_LC_IRQS__CMD_ERR__RESET_VALUE                          0x00000000U
/** @} */

/* macros for field chnl_bsy */
/**
 * @defgroup at_lc_regs_core_chnl_bsy_field chnl_bsy_field
 * @brief macros for field chnl_bsy
 * @details interrupt for tx with cca rx detect channel busy, write 1 to set. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQS__CHNL_BSY__SHIFT                                        12
#define ATLC_LC_IRQS__CHNL_BSY__WIDTH                                         1
#define ATLC_LC_IRQS__CHNL_BSY__MASK                                0x00001000U
#define ATLC_LC_IRQS__CHNL_BSY__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00001000U) >> 12)
#define ATLC_LC_IRQS__CHNL_BSY__WRITE(src) \
                    (((uint32_t)(src)\
                    << 12) & 0x00001000U)
#define ATLC_LC_IRQS__CHNL_BSY__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00001000U) | (((uint32_t)(src) <<\
                    12) & 0x00001000U)
#define ATLC_LC_IRQS__CHNL_BSY__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 12) & ~0x00001000U)))
#define ATLC_LC_IRQS__CHNL_BSY__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00001000U) | ((uint32_t)(1) << 12)
#define ATLC_LC_IRQS__CHNL_BSY__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00001000U) | ((uint32_t)(0) << 12)
#define ATLC_LC_IRQS__CHNL_BSY__RESET_VALUE                         0x00000000U
/** @} */

/* macros for field secure_done */
/**
 * @defgroup at_lc_regs_core_secure_done_field secure_done_field
 * @brief macros for field secure_done
 * @details interrupt for cmd=0x11 finish, write 1 to set. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQS__SECURE_DONE__SHIFT                                     13
#define ATLC_LC_IRQS__SECURE_DONE__WIDTH                                      1
#define ATLC_LC_IRQS__SECURE_DONE__MASK                             0x00002000U
#define ATLC_LC_IRQS__SECURE_DONE__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00002000U) >> 13)
#define ATLC_LC_IRQS__SECURE_DONE__WRITE(src) \
                    (((uint32_t)(src)\
                    << 13) & 0x00002000U)
#define ATLC_LC_IRQS__SECURE_DONE__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00002000U) | (((uint32_t)(src) <<\
                    13) & 0x00002000U)
#define ATLC_LC_IRQS__SECURE_DONE__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 13) & ~0x00002000U)))
#define ATLC_LC_IRQS__SECURE_DONE__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00002000U) | ((uint32_t)(1) << 13)
#define ATLC_LC_IRQS__SECURE_DONE__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00002000U) | ((uint32_t)(0) << 13)
#define ATLC_LC_IRQS__SECURE_DONE__RESET_VALUE                      0x00000000U
/** @} */

/* macros for field desecure_done */
/**
 * @defgroup at_lc_regs_core_desecure_done_field desecure_done_field
 * @brief macros for field desecure_done
 * @details interrupt for cmd=0x13 finish, write 1 to set. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQS__DESECURE_DONE__SHIFT                                   14
#define ATLC_LC_IRQS__DESECURE_DONE__WIDTH                                    1
#define ATLC_LC_IRQS__DESECURE_DONE__MASK                           0x00004000U
#define ATLC_LC_IRQS__DESECURE_DONE__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00004000U) >> 14)
#define ATLC_LC_IRQS__DESECURE_DONE__WRITE(src) \
                    (((uint32_t)(src)\
                    << 14) & 0x00004000U)
#define ATLC_LC_IRQS__DESECURE_DONE__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00004000U) | (((uint32_t)(src) <<\
                    14) & 0x00004000U)
#define ATLC_LC_IRQS__DESECURE_DONE__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 14) & ~0x00004000U)))
#define ATLC_LC_IRQS__DESECURE_DONE__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00004000U) | ((uint32_t)(1) << 14)
#define ATLC_LC_IRQS__DESECURE_DONE__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00004000U) | ((uint32_t)(0) << 14)
#define ATLC_LC_IRQS__DESECURE_DONE__RESET_VALUE                    0x00000000U
/** @} */

/* macros for field rx_pyld_len_err */
/**
 * @defgroup at_lc_regs_core_rx_pyld_len_err_field rx_pyld_len_err_field
 * @brief macros for field rx_pyld_len_err
 * @details interrupt for rx payload length exceeds maximal allowed value, write 1 to set. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQS__RX_PYLD_LEN_ERR__SHIFT                                 15
#define ATLC_LC_IRQS__RX_PYLD_LEN_ERR__WIDTH                                  1
#define ATLC_LC_IRQS__RX_PYLD_LEN_ERR__MASK                         0x00008000U
#define ATLC_LC_IRQS__RX_PYLD_LEN_ERR__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00008000U) >> 15)
#define ATLC_LC_IRQS__RX_PYLD_LEN_ERR__WRITE(src) \
                    (((uint32_t)(src)\
                    << 15) & 0x00008000U)
#define ATLC_LC_IRQS__RX_PYLD_LEN_ERR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | (((uint32_t)(src) <<\
                    15) & 0x00008000U)
#define ATLC_LC_IRQS__RX_PYLD_LEN_ERR__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 15) & ~0x00008000U)))
#define ATLC_LC_IRQS__RX_PYLD_LEN_ERR__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | ((uint32_t)(1) << 15)
#define ATLC_LC_IRQS__RX_PYLD_LEN_ERR__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | ((uint32_t)(0) << 15)
#define ATLC_LC_IRQS__RX_PYLD_LEN_ERR__RESET_VALUE                  0x00000000U
/** @} */

/* macros for field rxsec_done */
/**
 * @defgroup at_lc_regs_core_rxsec_done_field rxsec_done_field
 * @brief macros for field rxsec_done
 * @details interrupt for cmd=0x12 finish, write 1 to set. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQS__RXSEC_DONE__SHIFT                                      16
#define ATLC_LC_IRQS__RXSEC_DONE__WIDTH                                       1
#define ATLC_LC_IRQS__RXSEC_DONE__MASK                              0x00010000U
#define ATLC_LC_IRQS__RXSEC_DONE__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_LC_IRQS__RXSEC_DONE__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00010000U)
#define ATLC_LC_IRQS__RXSEC_DONE__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | (((uint32_t)(src) <<\
                    16) & 0x00010000U)
#define ATLC_LC_IRQS__RXSEC_DONE__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00010000U)))
#define ATLC_LC_IRQS__RXSEC_DONE__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_LC_IRQS__RXSEC_DONE__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_LC_IRQS__RXSEC_DONE__RESET_VALUE                       0x00000000U
/** @} */

/* macros for field phr_err */
/**
 * @defgroup at_lc_regs_core_phr_err_field phr_err_field
 * @brief macros for field phr_err
 * @details The reserved bit in 15.4 PHR is not zero (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQS__PHR_ERR__SHIFT                                         17
#define ATLC_LC_IRQS__PHR_ERR__WIDTH                                          1
#define ATLC_LC_IRQS__PHR_ERR__MASK                                 0x00020000U
#define ATLC_LC_IRQS__PHR_ERR__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00020000U) >> 17)
#define ATLC_LC_IRQS__PHR_ERR__WRITE(src) \
                    (((uint32_t)(src)\
                    << 17) & 0x00020000U)
#define ATLC_LC_IRQS__PHR_ERR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00020000U) | (((uint32_t)(src) <<\
                    17) & 0x00020000U)
#define ATLC_LC_IRQS__PHR_ERR__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 17) & ~0x00020000U)))
#define ATLC_LC_IRQS__PHR_ERR__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00020000U) | ((uint32_t)(1) << 17)
#define ATLC_LC_IRQS__PHR_ERR__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00020000U) | ((uint32_t)(0) << 17)
#define ATLC_LC_IRQS__PHR_ERR__RESET_VALUE                          0x00000000U
/** @} */

/* macros for field rx_ed_mns_n */
/**
 * @defgroup at_lc_regs_core_rx_ed_mns_n_field rx_ed_mns_n_field
 * @brief macros for field rx_ed_mns_n
 * @details interrupt for n micro second before rx end (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQS__RX_ED_MNS_N__SHIFT                                     18
#define ATLC_LC_IRQS__RX_ED_MNS_N__WIDTH                                      1
#define ATLC_LC_IRQS__RX_ED_MNS_N__MASK                             0x00040000U
#define ATLC_LC_IRQS__RX_ED_MNS_N__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00040000U) >> 18)
#define ATLC_LC_IRQS__RX_ED_MNS_N__WRITE(src) \
                    (((uint32_t)(src)\
                    << 18) & 0x00040000U)
#define ATLC_LC_IRQS__RX_ED_MNS_N__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00040000U) | (((uint32_t)(src) <<\
                    18) & 0x00040000U)
#define ATLC_LC_IRQS__RX_ED_MNS_N__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 18) & ~0x00040000U)))
#define ATLC_LC_IRQS__RX_ED_MNS_N__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00040000U) | ((uint32_t)(1) << 18)
#define ATLC_LC_IRQS__RX_ED_MNS_N__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00040000U) | ((uint32_t)(0) << 18)
#define ATLC_LC_IRQS__RX_ED_MNS_N__RESET_VALUE                      0x00000000U
/** @} */

/* macros for field tx_ed_mns_n */
/**
 * @defgroup at_lc_regs_core_tx_ed_mns_n_field tx_ed_mns_n_field
 * @brief macros for field tx_ed_mns_n
 * @details interrupt for n micro second before tx end (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQS__TX_ED_MNS_N__SHIFT                                     19
#define ATLC_LC_IRQS__TX_ED_MNS_N__WIDTH                                      1
#define ATLC_LC_IRQS__TX_ED_MNS_N__MASK                             0x00080000U
#define ATLC_LC_IRQS__TX_ED_MNS_N__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00080000U) >> 19)
#define ATLC_LC_IRQS__TX_ED_MNS_N__WRITE(src) \
                    (((uint32_t)(src)\
                    << 19) & 0x00080000U)
#define ATLC_LC_IRQS__TX_ED_MNS_N__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00080000U) | (((uint32_t)(src) <<\
                    19) & 0x00080000U)
#define ATLC_LC_IRQS__TX_ED_MNS_N__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 19) & ~0x00080000U)))
#define ATLC_LC_IRQS__TX_ED_MNS_N__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00080000U) | ((uint32_t)(1) << 19)
#define ATLC_LC_IRQS__TX_ED_MNS_N__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00080000U) | ((uint32_t)(0) << 19)
#define ATLC_LC_IRQS__TX_ED_MNS_N__RESET_VALUE                      0x00000000U
/** @} */

/* macros for field rx_pyld_mic_len_err */
/**
 * @defgroup at_lc_regs_core_rx_pyld_mic_len_err_field rx_pyld_mic_len_err_field
 * @brief macros for field rx_pyld_mic_len_err
 * @details interrupt for rx payload length less than MIC byte length, write 1 to set. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQS__RX_PYLD_MIC_LEN_ERR__SHIFT                             20
#define ATLC_LC_IRQS__RX_PYLD_MIC_LEN_ERR__WIDTH                              1
#define ATLC_LC_IRQS__RX_PYLD_MIC_LEN_ERR__MASK                     0x00100000U
#define ATLC_LC_IRQS__RX_PYLD_MIC_LEN_ERR__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00100000U) >> 20)
#define ATLC_LC_IRQS__RX_PYLD_MIC_LEN_ERR__WRITE(src) \
                    (((uint32_t)(src)\
                    << 20) & 0x00100000U)
#define ATLC_LC_IRQS__RX_PYLD_MIC_LEN_ERR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00100000U) | (((uint32_t)(src) <<\
                    20) & 0x00100000U)
#define ATLC_LC_IRQS__RX_PYLD_MIC_LEN_ERR__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 20) & ~0x00100000U)))
#define ATLC_LC_IRQS__RX_PYLD_MIC_LEN_ERR__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00100000U) | ((uint32_t)(1) << 20)
#define ATLC_LC_IRQS__RX_PYLD_MIC_LEN_ERR__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00100000U) | ((uint32_t)(0) << 20)
#define ATLC_LC_IRQS__RX_PYLD_MIC_LEN_ERR__RESET_VALUE              0x00000000U
/** @} */

/* macros for field rx_addr_no_mtch */
/**
 * @defgroup at_lc_regs_core_rx_addr_no_mtch_field rx_addr_no_mtch_field
 * @brief macros for field rx_addr_no_mtch
 * @details no address matches the address in the received packet, applicable only for FMAC. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQS__RX_ADDR_NO_MTCH__SHIFT                                 21
#define ATLC_LC_IRQS__RX_ADDR_NO_MTCH__WIDTH                                  1
#define ATLC_LC_IRQS__RX_ADDR_NO_MTCH__MASK                         0x00200000U
#define ATLC_LC_IRQS__RX_ADDR_NO_MTCH__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00200000U) >> 21)
#define ATLC_LC_IRQS__RX_ADDR_NO_MTCH__WRITE(src) \
                    (((uint32_t)(src)\
                    << 21) & 0x00200000U)
#define ATLC_LC_IRQS__RX_ADDR_NO_MTCH__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00200000U) | (((uint32_t)(src) <<\
                    21) & 0x00200000U)
#define ATLC_LC_IRQS__RX_ADDR_NO_MTCH__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 21) & ~0x00200000U)))
#define ATLC_LC_IRQS__RX_ADDR_NO_MTCH__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00200000U) | ((uint32_t)(1) << 21)
#define ATLC_LC_IRQS__RX_ADDR_NO_MTCH__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00200000U) | ((uint32_t)(0) << 21)
#define ATLC_LC_IRQS__RX_ADDR_NO_MTCH__RESET_VALUE                  0x00000000U
/** @} */

/* macros for field artd_no_rx_to */
/**
 * @defgroup at_lc_regs_core_artd_no_rx_to_field artd_no_rx_to_field
 * @brief macros for field artd_no_rx_to
 * @details auto retransmit delay hit but no rx to, applicable only for FMAC. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQS__ARTD_NO_RX_TO__SHIFT                                   22
#define ATLC_LC_IRQS__ARTD_NO_RX_TO__WIDTH                                    1
#define ATLC_LC_IRQS__ARTD_NO_RX_TO__MASK                           0x00400000U
#define ATLC_LC_IRQS__ARTD_NO_RX_TO__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00400000U) >> 22)
#define ATLC_LC_IRQS__ARTD_NO_RX_TO__WRITE(src) \
                    (((uint32_t)(src)\
                    << 22) & 0x00400000U)
#define ATLC_LC_IRQS__ARTD_NO_RX_TO__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00400000U) | (((uint32_t)(src) <<\
                    22) & 0x00400000U)
#define ATLC_LC_IRQS__ARTD_NO_RX_TO__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 22) & ~0x00400000U)))
#define ATLC_LC_IRQS__ARTD_NO_RX_TO__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00400000U) | ((uint32_t)(1) << 22)
#define ATLC_LC_IRQS__ARTD_NO_RX_TO__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00400000U) | ((uint32_t)(0) << 22)
#define ATLC_LC_IRQS__ARTD_NO_RX_TO__RESET_VALUE                    0x00000000U
/** @} */

/* macros for field tcm_acc_err */
/**
 * @defgroup at_lc_regs_core_tcm_acc_err_field tcm_acc_err_field
 * @brief macros for field tcm_acc_err
 * @details tcm access error. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQS__TCM_ACC_ERR__SHIFT                                     23
#define ATLC_LC_IRQS__TCM_ACC_ERR__WIDTH                                      1
#define ATLC_LC_IRQS__TCM_ACC_ERR__MASK                             0x00800000U
#define ATLC_LC_IRQS__TCM_ACC_ERR__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00800000U) >> 23)
#define ATLC_LC_IRQS__TCM_ACC_ERR__WRITE(src) \
                    (((uint32_t)(src)\
                    << 23) & 0x00800000U)
#define ATLC_LC_IRQS__TCM_ACC_ERR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00800000U) | (((uint32_t)(src) <<\
                    23) & 0x00800000U)
#define ATLC_LC_IRQS__TCM_ACC_ERR__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 23) & ~0x00800000U)))
#define ATLC_LC_IRQS__TCM_ACC_ERR__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00800000U) | ((uint32_t)(1) << 23)
#define ATLC_LC_IRQS__TCM_ACC_ERR__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00800000U) | ((uint32_t)(0) << 23)
#define ATLC_LC_IRQS__TCM_ACC_ERR__RESET_VALUE                      0x00000000U
/** @} */
#define ATLC_LC_IRQS__TYPE                                             uint32_t
#define ATLC_LC_IRQS__READ                                          0x00ffffffU
#define ATLC_LC_IRQS__WRITE                                         0x00ffffffU
#define ATLC_LC_IRQS__PRESERVED                                     0x00000000U
#define ATLC_LC_IRQS__RESET_VALUE                                   0x00000000U

#endif /* __ATLC_LC_IRQS_MACRO__ */

/** @} end of lc_irqs */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_irqc */
/**
 * @defgroup at_lc_regs_core_lc_irqc lc_irqc
 * @brief Contains register fields associated with lc_irqc. definitions.
 * @{
 */
#ifndef __ATLC_LC_IRQC_MACRO__
#define __ATLC_LC_IRQC_MACRO__

/* macros for field tx_dsnt */
/**
 * @defgroup at_lc_regs_core_tx_dsnt_field tx_dsnt_field
 * @brief macros for field tx_dsnt
 * @details interrupt for transmit data sent, write 1 to clear. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQC__TX_DSNT__SHIFT                                          0
#define ATLC_LC_IRQC__TX_DSNT__WIDTH                                          1
#define ATLC_LC_IRQC__TX_DSNT__MASK                                 0x00000001U
#define ATLC_LC_IRQC__TX_DSNT__READ(src)        ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_IRQC__TX_DSNT__WRITE(src)       ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_IRQC__TX_DSNT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_LC_IRQC__TX_DSNT__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_LC_IRQC__TX_DSNT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_IRQC__TX_DSNT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_IRQC__TX_DSNT__RESET_VALUE                          0x00000000U
/** @} */

/* macros for field rx_drdy */
/**
 * @defgroup at_lc_regs_core_rx_drdy_field rx_drdy_field
 * @brief macros for field rx_drdy
 * @details interrupt for receive data ready, write 1 to clear. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQC__RX_DRDY__SHIFT                                          1
#define ATLC_LC_IRQC__RX_DRDY__WIDTH                                          1
#define ATLC_LC_IRQC__RX_DRDY__MASK                                 0x00000002U
#define ATLC_LC_IRQC__RX_DRDY__READ(src) (((uint32_t)(src) & 0x00000002U) >> 1)
#define ATLC_LC_IRQC__RX_DRDY__WRITE(src) \
                    (((uint32_t)(src)\
                    << 1) & 0x00000002U)
#define ATLC_LC_IRQC__RX_DRDY__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | (((uint32_t)(src) <<\
                    1) & 0x00000002U)
#define ATLC_LC_IRQC__RX_DRDY__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 1) & ~0x00000002U)))
#define ATLC_LC_IRQC__RX_DRDY__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(1) << 1)
#define ATLC_LC_IRQC__RX_DRDY__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(0) << 1)
#define ATLC_LC_IRQC__RX_DRDY__RESET_VALUE                          0x00000000U
/** @} */

/* macros for field max_rt */
/**
 * @defgroup at_lc_regs_core_max_rt_field max_rt_field
 * @brief macros for field max_rt
 * @details interrupt for maximum number of retransmission, write 1 to clear. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQC__MAX_RT__SHIFT                                           2
#define ATLC_LC_IRQC__MAX_RT__WIDTH                                           1
#define ATLC_LC_IRQC__MAX_RT__MASK                                  0x00000004U
#define ATLC_LC_IRQC__MAX_RT__READ(src)  (((uint32_t)(src) & 0x00000004U) >> 2)
#define ATLC_LC_IRQC__MAX_RT__WRITE(src) (((uint32_t)(src) << 2) & 0x00000004U)
#define ATLC_LC_IRQC__MAX_RT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | (((uint32_t)(src) <<\
                    2) & 0x00000004U)
#define ATLC_LC_IRQC__MAX_RT__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 2) & ~0x00000004U)))
#define ATLC_LC_IRQC__MAX_RT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(1) << 2)
#define ATLC_LC_IRQC__MAX_RT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(0) << 2)
#define ATLC_LC_IRQC__MAX_RT__RESET_VALUE                           0x00000000U
/** @} */

/* macros for field rx_to */
/**
 * @defgroup at_lc_regs_core_rx_to_field rx_to_field
 * @brief macros for field rx_to
 * @details interrupt for receive time out, write 1 to clear. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQC__RX_TO__SHIFT                                            3
#define ATLC_LC_IRQC__RX_TO__WIDTH                                            1
#define ATLC_LC_IRQC__RX_TO__MASK                                   0x00000008U
#define ATLC_LC_IRQC__RX_TO__READ(src)   (((uint32_t)(src) & 0x00000008U) >> 3)
#define ATLC_LC_IRQC__RX_TO__WRITE(src)  (((uint32_t)(src) << 3) & 0x00000008U)
#define ATLC_LC_IRQC__RX_TO__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | (((uint32_t)(src) <<\
                    3) & 0x00000008U)
#define ATLC_LC_IRQC__RX_TO__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 3) & ~0x00000008U)))
#define ATLC_LC_IRQC__RX_TO__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | ((uint32_t)(1) << 3)
#define ATLC_LC_IRQC__RX_TO__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | ((uint32_t)(0) << 3)
#define ATLC_LC_IRQC__RX_TO__RESET_VALUE                            0x00000000U
/** @} */

/* macros for field rff_of */
/**
 * @defgroup at_lc_regs_core_rff_of_field rff_of_field
 * @brief macros for field rff_of
 * @details interrupt for receive fifo overflow, write 1 to clear. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQC__RFF_OF__SHIFT                                           4
#define ATLC_LC_IRQC__RFF_OF__WIDTH                                           1
#define ATLC_LC_IRQC__RFF_OF__MASK                                  0x00000010U
#define ATLC_LC_IRQC__RFF_OF__READ(src)  (((uint32_t)(src) & 0x00000010U) >> 4)
#define ATLC_LC_IRQC__RFF_OF__WRITE(src) (((uint32_t)(src) << 4) & 0x00000010U)
#define ATLC_LC_IRQC__RFF_OF__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | (((uint32_t)(src) <<\
                    4) & 0x00000010U)
#define ATLC_LC_IRQC__RFF_OF__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 4) & ~0x00000010U)))
#define ATLC_LC_IRQC__RFF_OF__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | ((uint32_t)(1) << 4)
#define ATLC_LC_IRQC__RFF_OF__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | ((uint32_t)(0) << 4)
#define ATLC_LC_IRQC__RFF_OF__RESET_VALUE                           0x00000000U
/** @} */

/* macros for field tff_uf */
/**
 * @defgroup at_lc_regs_core_tff_uf_field tff_uf_field
 * @brief macros for field tff_uf
 * @details interrupt for transmit fifo underflow, write 1 to clear. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQC__TFF_UF__SHIFT                                           5
#define ATLC_LC_IRQC__TFF_UF__WIDTH                                           1
#define ATLC_LC_IRQC__TFF_UF__MASK                                  0x00000020U
#define ATLC_LC_IRQC__TFF_UF__READ(src)  (((uint32_t)(src) & 0x00000020U) >> 5)
#define ATLC_LC_IRQC__TFF_UF__WRITE(src) (((uint32_t)(src) << 5) & 0x00000020U)
#define ATLC_LC_IRQC__TFF_UF__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | (((uint32_t)(src) <<\
                    5) & 0x00000020U)
#define ATLC_LC_IRQC__TFF_UF__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 5) & ~0x00000020U)))
#define ATLC_LC_IRQC__TFF_UF__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | ((uint32_t)(1) << 5)
#define ATLC_LC_IRQC__TFF_UF__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000020U) | ((uint32_t)(0) << 5)
#define ATLC_LC_IRQC__TFF_UF__RESET_VALUE                           0x00000000U
/** @} */

/* macros for field rmff_of */
/**
 * @defgroup at_lc_regs_core_rmff_of_field rmff_of_field
 * @brief macros for field rmff_of
 * @details interrupt for memory receive fifo overflow, write 1 to clear. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQC__RMFF_OF__SHIFT                                          6
#define ATLC_LC_IRQC__RMFF_OF__WIDTH                                          1
#define ATLC_LC_IRQC__RMFF_OF__MASK                                 0x00000040U
#define ATLC_LC_IRQC__RMFF_OF__READ(src) (((uint32_t)(src) & 0x00000040U) >> 6)
#define ATLC_LC_IRQC__RMFF_OF__WRITE(src) \
                    (((uint32_t)(src)\
                    << 6) & 0x00000040U)
#define ATLC_LC_IRQC__RMFF_OF__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | (((uint32_t)(src) <<\
                    6) & 0x00000040U)
#define ATLC_LC_IRQC__RMFF_OF__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 6) & ~0x00000040U)))
#define ATLC_LC_IRQC__RMFF_OF__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | ((uint32_t)(1) << 6)
#define ATLC_LC_IRQC__RMFF_OF__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000040U) | ((uint32_t)(0) << 6)
#define ATLC_LC_IRQC__RMFF_OF__RESET_VALUE                          0x00000000U
/** @} */

/* macros for field tmff_uf */
/**
 * @defgroup at_lc_regs_core_tmff_uf_field tmff_uf_field
 * @brief macros for field tmff_uf
 * @details interrupt for memory transmit fifo underflow, write 1 to clear. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQC__TMFF_UF__SHIFT                                          7
#define ATLC_LC_IRQC__TMFF_UF__WIDTH                                          1
#define ATLC_LC_IRQC__TMFF_UF__MASK                                 0x00000080U
#define ATLC_LC_IRQC__TMFF_UF__READ(src) (((uint32_t)(src) & 0x00000080U) >> 7)
#define ATLC_LC_IRQC__TMFF_UF__WRITE(src) \
                    (((uint32_t)(src)\
                    << 7) & 0x00000080U)
#define ATLC_LC_IRQC__TMFF_UF__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | (((uint32_t)(src) <<\
                    7) & 0x00000080U)
#define ATLC_LC_IRQC__TMFF_UF__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 7) & ~0x00000080U)))
#define ATLC_LC_IRQC__TMFF_UF__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(1) << 7)
#define ATLC_LC_IRQC__TMFF_UF__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(0) << 7)
#define ATLC_LC_IRQC__TMFF_UF__RESET_VALUE                          0x00000000U
/** @} */

/* macros for field tm_stmp_pst */
/**
 * @defgroup at_lc_regs_core_tm_stmp_pst_field tm_stmp_pst_field
 * @brief macros for field tm_stmp_pst
 * @details interrupt for time stamp in the past, write 1 to clear. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQC__TM_STMP_PST__SHIFT                                      8
#define ATLC_LC_IRQC__TM_STMP_PST__WIDTH                                      1
#define ATLC_LC_IRQC__TM_STMP_PST__MASK                             0x00000100U
#define ATLC_LC_IRQC__TM_STMP_PST__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000100U) >> 8)
#define ATLC_LC_IRQC__TM_STMP_PST__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00000100U)
#define ATLC_LC_IRQC__TM_STMP_PST__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | (((uint32_t)(src) <<\
                    8) & 0x00000100U)
#define ATLC_LC_IRQC__TM_STMP_PST__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00000100U)))
#define ATLC_LC_IRQC__TM_STMP_PST__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | ((uint32_t)(1) << 8)
#define ATLC_LC_IRQC__TM_STMP_PST__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | ((uint32_t)(0) << 8)
#define ATLC_LC_IRQC__TM_STMP_PST__RESET_VALUE                      0x00000000U
/** @} */

/* macros for field rx_sync_pls_n */
/**
 * @defgroup at_lc_regs_core_rx_sync_pls_n_field rx_sync_pls_n_field
 * @brief macros for field rx_sync_pls_n
 * @details interrupt for bytes after sync words are received, write 1 to clear. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQC__RX_SYNC_PLS_N__SHIFT                                    9
#define ATLC_LC_IRQC__RX_SYNC_PLS_N__WIDTH                                    1
#define ATLC_LC_IRQC__RX_SYNC_PLS_N__MASK                           0x00000200U
#define ATLC_LC_IRQC__RX_SYNC_PLS_N__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000200U) >> 9)
#define ATLC_LC_IRQC__RX_SYNC_PLS_N__WRITE(src) \
                    (((uint32_t)(src)\
                    << 9) & 0x00000200U)
#define ATLC_LC_IRQC__RX_SYNC_PLS_N__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000200U) | (((uint32_t)(src) <<\
                    9) & 0x00000200U)
#define ATLC_LC_IRQC__RX_SYNC_PLS_N__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 9) & ~0x00000200U)))
#define ATLC_LC_IRQC__RX_SYNC_PLS_N__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000200U) | ((uint32_t)(1) << 9)
#define ATLC_LC_IRQC__RX_SYNC_PLS_N__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000200U) | ((uint32_t)(0) << 9)
#define ATLC_LC_IRQC__RX_SYNC_PLS_N__RESET_VALUE                    0x00000000U
/** @} */

/* macros for field wu_slp */
/**
 * @defgroup at_lc_regs_core_wu_slp_field wu_slp_field
 * @brief macros for field wu_slp
 * @details interrupt mask for waking up from sleep, write 1 to clear. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQC__WU_SLP__SHIFT                                          10
#define ATLC_LC_IRQC__WU_SLP__WIDTH                                           1
#define ATLC_LC_IRQC__WU_SLP__MASK                                  0x00000400U
#define ATLC_LC_IRQC__WU_SLP__READ(src) (((uint32_t)(src) & 0x00000400U) >> 10)
#define ATLC_LC_IRQC__WU_SLP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 10) & 0x00000400U)
#define ATLC_LC_IRQC__WU_SLP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000400U) | (((uint32_t)(src) <<\
                    10) & 0x00000400U)
#define ATLC_LC_IRQC__WU_SLP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 10) & ~0x00000400U)))
#define ATLC_LC_IRQC__WU_SLP__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000400U) | ((uint32_t)(1) << 10)
#define ATLC_LC_IRQC__WU_SLP__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000400U) | ((uint32_t)(0) << 10)
#define ATLC_LC_IRQC__WU_SLP__RESET_VALUE                           0x00000000U
/** @} */

/* macros for field cmd_err */
/**
 * @defgroup at_lc_regs_core_cmd_err_field cmd_err_field
 * @brief macros for field cmd_err
 * @details interrupt mask for command error, write 1 to clear. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQC__CMD_ERR__SHIFT                                         11
#define ATLC_LC_IRQC__CMD_ERR__WIDTH                                          1
#define ATLC_LC_IRQC__CMD_ERR__MASK                                 0x00000800U
#define ATLC_LC_IRQC__CMD_ERR__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000800U) >> 11)
#define ATLC_LC_IRQC__CMD_ERR__WRITE(src) \
                    (((uint32_t)(src)\
                    << 11) & 0x00000800U)
#define ATLC_LC_IRQC__CMD_ERR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000800U) | (((uint32_t)(src) <<\
                    11) & 0x00000800U)
#define ATLC_LC_IRQC__CMD_ERR__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 11) & ~0x00000800U)))
#define ATLC_LC_IRQC__CMD_ERR__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000800U) | ((uint32_t)(1) << 11)
#define ATLC_LC_IRQC__CMD_ERR__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000800U) | ((uint32_t)(0) << 11)
#define ATLC_LC_IRQC__CMD_ERR__RESET_VALUE                          0x00000000U
/** @} */

/* macros for field chnl_bsy */
/**
 * @defgroup at_lc_regs_core_chnl_bsy_field chnl_bsy_field
 * @brief macros for field chnl_bsy
 * @details interrupt for tx with cca rx detect channel busy, write 1 to clear. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQC__CHNL_BSY__SHIFT                                        12
#define ATLC_LC_IRQC__CHNL_BSY__WIDTH                                         1
#define ATLC_LC_IRQC__CHNL_BSY__MASK                                0x00001000U
#define ATLC_LC_IRQC__CHNL_BSY__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00001000U) >> 12)
#define ATLC_LC_IRQC__CHNL_BSY__WRITE(src) \
                    (((uint32_t)(src)\
                    << 12) & 0x00001000U)
#define ATLC_LC_IRQC__CHNL_BSY__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00001000U) | (((uint32_t)(src) <<\
                    12) & 0x00001000U)
#define ATLC_LC_IRQC__CHNL_BSY__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 12) & ~0x00001000U)))
#define ATLC_LC_IRQC__CHNL_BSY__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00001000U) | ((uint32_t)(1) << 12)
#define ATLC_LC_IRQC__CHNL_BSY__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00001000U) | ((uint32_t)(0) << 12)
#define ATLC_LC_IRQC__CHNL_BSY__RESET_VALUE                         0x00000000U
/** @} */

/* macros for field secure_done */
/**
 * @defgroup at_lc_regs_core_secure_done_field secure_done_field
 * @brief macros for field secure_done
 * @details interrupt for cmd=0x11 finish, write 1 to clear. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQC__SECURE_DONE__SHIFT                                     13
#define ATLC_LC_IRQC__SECURE_DONE__WIDTH                                      1
#define ATLC_LC_IRQC__SECURE_DONE__MASK                             0x00002000U
#define ATLC_LC_IRQC__SECURE_DONE__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00002000U) >> 13)
#define ATLC_LC_IRQC__SECURE_DONE__WRITE(src) \
                    (((uint32_t)(src)\
                    << 13) & 0x00002000U)
#define ATLC_LC_IRQC__SECURE_DONE__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00002000U) | (((uint32_t)(src) <<\
                    13) & 0x00002000U)
#define ATLC_LC_IRQC__SECURE_DONE__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 13) & ~0x00002000U)))
#define ATLC_LC_IRQC__SECURE_DONE__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00002000U) | ((uint32_t)(1) << 13)
#define ATLC_LC_IRQC__SECURE_DONE__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00002000U) | ((uint32_t)(0) << 13)
#define ATLC_LC_IRQC__SECURE_DONE__RESET_VALUE                      0x00000000U
/** @} */

/* macros for field desecure_done */
/**
 * @defgroup at_lc_regs_core_desecure_done_field desecure_done_field
 * @brief macros for field desecure_done
 * @details interrupt for cmd=0x13 finish, write 1 to clear. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQC__DESECURE_DONE__SHIFT                                   14
#define ATLC_LC_IRQC__DESECURE_DONE__WIDTH                                    1
#define ATLC_LC_IRQC__DESECURE_DONE__MASK                           0x00004000U
#define ATLC_LC_IRQC__DESECURE_DONE__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00004000U) >> 14)
#define ATLC_LC_IRQC__DESECURE_DONE__WRITE(src) \
                    (((uint32_t)(src)\
                    << 14) & 0x00004000U)
#define ATLC_LC_IRQC__DESECURE_DONE__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00004000U) | (((uint32_t)(src) <<\
                    14) & 0x00004000U)
#define ATLC_LC_IRQC__DESECURE_DONE__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 14) & ~0x00004000U)))
#define ATLC_LC_IRQC__DESECURE_DONE__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00004000U) | ((uint32_t)(1) << 14)
#define ATLC_LC_IRQC__DESECURE_DONE__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00004000U) | ((uint32_t)(0) << 14)
#define ATLC_LC_IRQC__DESECURE_DONE__RESET_VALUE                    0x00000000U
/** @} */

/* macros for field rx_pyld_len_err */
/**
 * @defgroup at_lc_regs_core_rx_pyld_len_err_field rx_pyld_len_err_field
 * @brief macros for field rx_pyld_len_err
 * @details interrupt for rx payload length exceeds maximal allowed value, write 1 to clear. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQC__RX_PYLD_LEN_ERR__SHIFT                                 15
#define ATLC_LC_IRQC__RX_PYLD_LEN_ERR__WIDTH                                  1
#define ATLC_LC_IRQC__RX_PYLD_LEN_ERR__MASK                         0x00008000U
#define ATLC_LC_IRQC__RX_PYLD_LEN_ERR__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00008000U) >> 15)
#define ATLC_LC_IRQC__RX_PYLD_LEN_ERR__WRITE(src) \
                    (((uint32_t)(src)\
                    << 15) & 0x00008000U)
#define ATLC_LC_IRQC__RX_PYLD_LEN_ERR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | (((uint32_t)(src) <<\
                    15) & 0x00008000U)
#define ATLC_LC_IRQC__RX_PYLD_LEN_ERR__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 15) & ~0x00008000U)))
#define ATLC_LC_IRQC__RX_PYLD_LEN_ERR__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | ((uint32_t)(1) << 15)
#define ATLC_LC_IRQC__RX_PYLD_LEN_ERR__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00008000U) | ((uint32_t)(0) << 15)
#define ATLC_LC_IRQC__RX_PYLD_LEN_ERR__RESET_VALUE                  0x00000000U
/** @} */

/* macros for field rxsec_done */
/**
 * @defgroup at_lc_regs_core_rxsec_done_field rxsec_done_field
 * @brief macros for field rxsec_done
 * @details interrupt for cmd=0x12 finish, write 1 to clear. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQC__RXSEC_DONE__SHIFT                                      16
#define ATLC_LC_IRQC__RXSEC_DONE__WIDTH                                       1
#define ATLC_LC_IRQC__RXSEC_DONE__MASK                              0x00010000U
#define ATLC_LC_IRQC__RXSEC_DONE__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00010000U) >> 16)
#define ATLC_LC_IRQC__RXSEC_DONE__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00010000U)
#define ATLC_LC_IRQC__RXSEC_DONE__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | (((uint32_t)(src) <<\
                    16) & 0x00010000U)
#define ATLC_LC_IRQC__RXSEC_DONE__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00010000U)))
#define ATLC_LC_IRQC__RXSEC_DONE__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(1) << 16)
#define ATLC_LC_IRQC__RXSEC_DONE__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00010000U) | ((uint32_t)(0) << 16)
#define ATLC_LC_IRQC__RXSEC_DONE__RESET_VALUE                       0x00000000U
/** @} */

/* macros for field phr_err */
/**
 * @defgroup at_lc_regs_core_phr_err_field phr_err_field
 * @brief macros for field phr_err
 * @details The reserved bit in 15.4 PHR is not zero. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQC__PHR_ERR__SHIFT                                         17
#define ATLC_LC_IRQC__PHR_ERR__WIDTH                                          1
#define ATLC_LC_IRQC__PHR_ERR__MASK                                 0x00020000U
#define ATLC_LC_IRQC__PHR_ERR__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00020000U) >> 17)
#define ATLC_LC_IRQC__PHR_ERR__WRITE(src) \
                    (((uint32_t)(src)\
                    << 17) & 0x00020000U)
#define ATLC_LC_IRQC__PHR_ERR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00020000U) | (((uint32_t)(src) <<\
                    17) & 0x00020000U)
#define ATLC_LC_IRQC__PHR_ERR__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 17) & ~0x00020000U)))
#define ATLC_LC_IRQC__PHR_ERR__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00020000U) | ((uint32_t)(1) << 17)
#define ATLC_LC_IRQC__PHR_ERR__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00020000U) | ((uint32_t)(0) << 17)
#define ATLC_LC_IRQC__PHR_ERR__RESET_VALUE                          0x00000000U
/** @} */

/* macros for field rx_ed_mns_n */
/**
 * @defgroup at_lc_regs_core_rx_ed_mns_n_field rx_ed_mns_n_field
 * @brief macros for field rx_ed_mns_n
 * @details interrupt for n micro second before rx end (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQC__RX_ED_MNS_N__SHIFT                                     18
#define ATLC_LC_IRQC__RX_ED_MNS_N__WIDTH                                      1
#define ATLC_LC_IRQC__RX_ED_MNS_N__MASK                             0x00040000U
#define ATLC_LC_IRQC__RX_ED_MNS_N__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00040000U) >> 18)
#define ATLC_LC_IRQC__RX_ED_MNS_N__WRITE(src) \
                    (((uint32_t)(src)\
                    << 18) & 0x00040000U)
#define ATLC_LC_IRQC__RX_ED_MNS_N__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00040000U) | (((uint32_t)(src) <<\
                    18) & 0x00040000U)
#define ATLC_LC_IRQC__RX_ED_MNS_N__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 18) & ~0x00040000U)))
#define ATLC_LC_IRQC__RX_ED_MNS_N__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00040000U) | ((uint32_t)(1) << 18)
#define ATLC_LC_IRQC__RX_ED_MNS_N__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00040000U) | ((uint32_t)(0) << 18)
#define ATLC_LC_IRQC__RX_ED_MNS_N__RESET_VALUE                      0x00000000U
/** @} */

/* macros for field tx_ed_mns_n */
/**
 * @defgroup at_lc_regs_core_tx_ed_mns_n_field tx_ed_mns_n_field
 * @brief macros for field tx_ed_mns_n
 * @details interrupt for n micro second before tx end (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQC__TX_ED_MNS_N__SHIFT                                     19
#define ATLC_LC_IRQC__TX_ED_MNS_N__WIDTH                                      1
#define ATLC_LC_IRQC__TX_ED_MNS_N__MASK                             0x00080000U
#define ATLC_LC_IRQC__TX_ED_MNS_N__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00080000U) >> 19)
#define ATLC_LC_IRQC__TX_ED_MNS_N__WRITE(src) \
                    (((uint32_t)(src)\
                    << 19) & 0x00080000U)
#define ATLC_LC_IRQC__TX_ED_MNS_N__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00080000U) | (((uint32_t)(src) <<\
                    19) & 0x00080000U)
#define ATLC_LC_IRQC__TX_ED_MNS_N__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 19) & ~0x00080000U)))
#define ATLC_LC_IRQC__TX_ED_MNS_N__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00080000U) | ((uint32_t)(1) << 19)
#define ATLC_LC_IRQC__TX_ED_MNS_N__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00080000U) | ((uint32_t)(0) << 19)
#define ATLC_LC_IRQC__TX_ED_MNS_N__RESET_VALUE                      0x00000000U
/** @} */

/* macros for field rx_pyld_mic_len_err */
/**
 * @defgroup at_lc_regs_core_rx_pyld_mic_len_err_field rx_pyld_mic_len_err_field
 * @brief macros for field rx_pyld_mic_len_err
 * @details interrupt for rx payload length less than MIC byte length, write 1 to clear. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQC__RX_PYLD_MIC_LEN_ERR__SHIFT                             20
#define ATLC_LC_IRQC__RX_PYLD_MIC_LEN_ERR__WIDTH                              1
#define ATLC_LC_IRQC__RX_PYLD_MIC_LEN_ERR__MASK                     0x00100000U
#define ATLC_LC_IRQC__RX_PYLD_MIC_LEN_ERR__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00100000U) >> 20)
#define ATLC_LC_IRQC__RX_PYLD_MIC_LEN_ERR__WRITE(src) \
                    (((uint32_t)(src)\
                    << 20) & 0x00100000U)
#define ATLC_LC_IRQC__RX_PYLD_MIC_LEN_ERR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00100000U) | (((uint32_t)(src) <<\
                    20) & 0x00100000U)
#define ATLC_LC_IRQC__RX_PYLD_MIC_LEN_ERR__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 20) & ~0x00100000U)))
#define ATLC_LC_IRQC__RX_PYLD_MIC_LEN_ERR__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00100000U) | ((uint32_t)(1) << 20)
#define ATLC_LC_IRQC__RX_PYLD_MIC_LEN_ERR__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00100000U) | ((uint32_t)(0) << 20)
#define ATLC_LC_IRQC__RX_PYLD_MIC_LEN_ERR__RESET_VALUE              0x00000000U
/** @} */

/* macros for field rx_addr_no_mtch */
/**
 * @defgroup at_lc_regs_core_rx_addr_no_mtch_field rx_addr_no_mtch_field
 * @brief macros for field rx_addr_no_mtch
 * @details no address matches the address in the received packet, applicable only for FMAC. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQC__RX_ADDR_NO_MTCH__SHIFT                                 21
#define ATLC_LC_IRQC__RX_ADDR_NO_MTCH__WIDTH                                  1
#define ATLC_LC_IRQC__RX_ADDR_NO_MTCH__MASK                         0x00200000U
#define ATLC_LC_IRQC__RX_ADDR_NO_MTCH__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00200000U) >> 21)
#define ATLC_LC_IRQC__RX_ADDR_NO_MTCH__WRITE(src) \
                    (((uint32_t)(src)\
                    << 21) & 0x00200000U)
#define ATLC_LC_IRQC__RX_ADDR_NO_MTCH__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00200000U) | (((uint32_t)(src) <<\
                    21) & 0x00200000U)
#define ATLC_LC_IRQC__RX_ADDR_NO_MTCH__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 21) & ~0x00200000U)))
#define ATLC_LC_IRQC__RX_ADDR_NO_MTCH__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00200000U) | ((uint32_t)(1) << 21)
#define ATLC_LC_IRQC__RX_ADDR_NO_MTCH__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00200000U) | ((uint32_t)(0) << 21)
#define ATLC_LC_IRQC__RX_ADDR_NO_MTCH__RESET_VALUE                  0x00000000U
/** @} */

/* macros for field artd_no_rx_to */
/**
 * @defgroup at_lc_regs_core_artd_no_rx_to_field artd_no_rx_to_field
 * @brief macros for field artd_no_rx_to
 * @details auto retransmit delay hit but no rx to, applicable only for FMAC. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQC__ARTD_NO_RX_TO__SHIFT                                   22
#define ATLC_LC_IRQC__ARTD_NO_RX_TO__WIDTH                                    1
#define ATLC_LC_IRQC__ARTD_NO_RX_TO__MASK                           0x00400000U
#define ATLC_LC_IRQC__ARTD_NO_RX_TO__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00400000U) >> 22)
#define ATLC_LC_IRQC__ARTD_NO_RX_TO__WRITE(src) \
                    (((uint32_t)(src)\
                    << 22) & 0x00400000U)
#define ATLC_LC_IRQC__ARTD_NO_RX_TO__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00400000U) | (((uint32_t)(src) <<\
                    22) & 0x00400000U)
#define ATLC_LC_IRQC__ARTD_NO_RX_TO__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 22) & ~0x00400000U)))
#define ATLC_LC_IRQC__ARTD_NO_RX_TO__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00400000U) | ((uint32_t)(1) << 22)
#define ATLC_LC_IRQC__ARTD_NO_RX_TO__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00400000U) | ((uint32_t)(0) << 22)
#define ATLC_LC_IRQC__ARTD_NO_RX_TO__RESET_VALUE                    0x00000000U
/** @} */

/* macros for field tcm_acc_err */
/**
 * @defgroup at_lc_regs_core_tcm_acc_err_field tcm_acc_err_field
 * @brief macros for field tcm_acc_err
 * @details tcm access error. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_IRQC__TCM_ACC_ERR__SHIFT                                     23
#define ATLC_LC_IRQC__TCM_ACC_ERR__WIDTH                                      1
#define ATLC_LC_IRQC__TCM_ACC_ERR__MASK                             0x00800000U
#define ATLC_LC_IRQC__TCM_ACC_ERR__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00800000U) >> 23)
#define ATLC_LC_IRQC__TCM_ACC_ERR__WRITE(src) \
                    (((uint32_t)(src)\
                    << 23) & 0x00800000U)
#define ATLC_LC_IRQC__TCM_ACC_ERR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00800000U) | (((uint32_t)(src) <<\
                    23) & 0x00800000U)
#define ATLC_LC_IRQC__TCM_ACC_ERR__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 23) & ~0x00800000U)))
#define ATLC_LC_IRQC__TCM_ACC_ERR__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00800000U) | ((uint32_t)(1) << 23)
#define ATLC_LC_IRQC__TCM_ACC_ERR__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00800000U) | ((uint32_t)(0) << 23)
#define ATLC_LC_IRQC__TCM_ACC_ERR__RESET_VALUE                      0x00000000U
/** @} */
#define ATLC_LC_IRQC__TYPE                                             uint32_t
#define ATLC_LC_IRQC__READ                                          0x00ffffffU
#define ATLC_LC_IRQC__WRITE                                         0x00ffffffU
#define ATLC_LC_IRQC__PRESERVED                                     0x00000000U
#define ATLC_LC_IRQC__RESET_VALUE                                   0x00000000U

#endif /* __ATLC_LC_IRQC_MACRO__ */

/** @} end of lc_irqc */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_frc_irq */
/**
 * @defgroup at_lc_regs_core_lc_frc_irq lc_frc_irq
 * @brief Contains register fields associated with lc_frc_irq. definitions.
 * @{
 */
#ifndef __ATLC_LC_FRC_IRQ_MACRO__
#define __ATLC_LC_FRC_IRQ_MACRO__

/* macros for field to0 */
/**
 * @defgroup at_lc_regs_core_to0_field to0_field
 * @brief macros for field to0
 * @details time out 0 for free running micro second counter fr_us_cntr.
 * @{
 */
#define ATLC_LC_FRC_IRQ__TO0__SHIFT                                           0
#define ATLC_LC_FRC_IRQ__TO0__WIDTH                                           1
#define ATLC_LC_FRC_IRQ__TO0__MASK                                  0x00000001U
#define ATLC_LC_FRC_IRQ__TO0__READ(src)         ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_FRC_IRQ__TO0__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_FRC_IRQ__TO0__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_FRC_IRQ__TO0__RESET_VALUE                           0x00000000U
/** @} */

/* macros for field to1 */
/**
 * @defgroup at_lc_regs_core_to1_field to1_field
 * @brief macros for field to1
 * @details time out 1 for free running micro second counter fr_us_cntr.
 * @{
 */
#define ATLC_LC_FRC_IRQ__TO1__SHIFT                                           1
#define ATLC_LC_FRC_IRQ__TO1__WIDTH                                           1
#define ATLC_LC_FRC_IRQ__TO1__MASK                                  0x00000002U
#define ATLC_LC_FRC_IRQ__TO1__READ(src)  (((uint32_t)(src) & 0x00000002U) >> 1)
#define ATLC_LC_FRC_IRQ__TO1__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(1) << 1)
#define ATLC_LC_FRC_IRQ__TO1__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(0) << 1)
#define ATLC_LC_FRC_IRQ__TO1__RESET_VALUE                           0x00000000U
/** @} */

/* macros for field to2 */
/**
 * @defgroup at_lc_regs_core_to2_field to2_field
 * @brief macros for field to2
 * @details time out 2 for free running micro second counter fr_us_cntr.
 * @{
 */
#define ATLC_LC_FRC_IRQ__TO2__SHIFT                                           2
#define ATLC_LC_FRC_IRQ__TO2__WIDTH                                           1
#define ATLC_LC_FRC_IRQ__TO2__MASK                                  0x00000004U
#define ATLC_LC_FRC_IRQ__TO2__READ(src)  (((uint32_t)(src) & 0x00000004U) >> 2)
#define ATLC_LC_FRC_IRQ__TO2__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(1) << 2)
#define ATLC_LC_FRC_IRQ__TO2__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(0) << 2)
#define ATLC_LC_FRC_IRQ__TO2__RESET_VALUE                           0x00000000U
/** @} */
#define ATLC_LC_FRC_IRQ__TYPE                                          uint32_t
#define ATLC_LC_FRC_IRQ__READ                                       0x00000007U
#define ATLC_LC_FRC_IRQ__PRESERVED                                  0x00000000U
#define ATLC_LC_FRC_IRQ__RESET_VALUE                                0x00000000U

#endif /* __ATLC_LC_FRC_IRQ_MACRO__ */

/** @} end of lc_frc_irq */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_frc_irqm */
/**
 * @defgroup at_lc_regs_core_lc_frc_irqm lc_frc_irqm
 * @brief _RETENTION_ definitions.
 * @{
 */
#ifndef __ATLC_LC_FRC_IRQM_MACRO__
#define __ATLC_LC_FRC_IRQM_MACRO__

/* macros for field to0 */
/**
 * @defgroup at_lc_regs_core_to0_field to0_field
 * @brief macros for field to0
 * @details interrupt mask for time out 0 for free running micro second counter fr_us_cntr.
 * @{
 */
#define ATLC_LC_FRC_IRQM__TO0__SHIFT                                          0
#define ATLC_LC_FRC_IRQM__TO0__WIDTH                                          1
#define ATLC_LC_FRC_IRQM__TO0__MASK                                 0x00000001U
#define ATLC_LC_FRC_IRQM__TO0__READ(src)        ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_FRC_IRQM__TO0__WRITE(src)       ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_FRC_IRQM__TO0__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_LC_FRC_IRQM__TO0__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_LC_FRC_IRQM__TO0__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_FRC_IRQM__TO0__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_FRC_IRQM__TO0__RESET_VALUE                          0x00000000U
/** @} */

/* macros for field to1 */
/**
 * @defgroup at_lc_regs_core_to1_field to1_field
 * @brief macros for field to1
 * @details interrupt mask for time out 1 for free running micro second counter fr_us_cntr.
 * @{
 */
#define ATLC_LC_FRC_IRQM__TO1__SHIFT                                          1
#define ATLC_LC_FRC_IRQM__TO1__WIDTH                                          1
#define ATLC_LC_FRC_IRQM__TO1__MASK                                 0x00000002U
#define ATLC_LC_FRC_IRQM__TO1__READ(src) (((uint32_t)(src) & 0x00000002U) >> 1)
#define ATLC_LC_FRC_IRQM__TO1__WRITE(src) \
                    (((uint32_t)(src)\
                    << 1) & 0x00000002U)
#define ATLC_LC_FRC_IRQM__TO1__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | (((uint32_t)(src) <<\
                    1) & 0x00000002U)
#define ATLC_LC_FRC_IRQM__TO1__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 1) & ~0x00000002U)))
#define ATLC_LC_FRC_IRQM__TO1__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(1) << 1)
#define ATLC_LC_FRC_IRQM__TO1__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(0) << 1)
#define ATLC_LC_FRC_IRQM__TO1__RESET_VALUE                          0x00000000U
/** @} */

/* macros for field to2 */
/**
 * @defgroup at_lc_regs_core_to2_field to2_field
 * @brief macros for field to2
 * @details interrupt mask for time out 2 for free running micro second counter fr_us_cntr.
 * @{
 */
#define ATLC_LC_FRC_IRQM__TO2__SHIFT                                          2
#define ATLC_LC_FRC_IRQM__TO2__WIDTH                                          1
#define ATLC_LC_FRC_IRQM__TO2__MASK                                 0x00000004U
#define ATLC_LC_FRC_IRQM__TO2__READ(src) (((uint32_t)(src) & 0x00000004U) >> 2)
#define ATLC_LC_FRC_IRQM__TO2__WRITE(src) \
                    (((uint32_t)(src)\
                    << 2) & 0x00000004U)
#define ATLC_LC_FRC_IRQM__TO2__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | (((uint32_t)(src) <<\
                    2) & 0x00000004U)
#define ATLC_LC_FRC_IRQM__TO2__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 2) & ~0x00000004U)))
#define ATLC_LC_FRC_IRQM__TO2__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(1) << 2)
#define ATLC_LC_FRC_IRQM__TO2__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(0) << 2)
#define ATLC_LC_FRC_IRQM__TO2__RESET_VALUE                          0x00000000U
/** @} */
#define ATLC_LC_FRC_IRQM__TYPE                                         uint32_t
#define ATLC_LC_FRC_IRQM__READ                                      0x00000007U
#define ATLC_LC_FRC_IRQM__WRITE                                     0x00000007U
#define ATLC_LC_FRC_IRQM__PRESERVED                                 0x00000000U
#define ATLC_LC_FRC_IRQM__RESET_VALUE                               0x00000000U

#endif /* __ATLC_LC_FRC_IRQM_MACRO__ */

/** @} end of lc_frc_irqm */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_frc_irqs */
/**
 * @defgroup at_lc_regs_core_lc_frc_irqs lc_frc_irqs
 * @brief Contains register fields associated with lc_frc_irqs. definitions.
 * @{
 */
#ifndef __ATLC_LC_FRC_IRQS_MACRO__
#define __ATLC_LC_FRC_IRQS_MACRO__

/* macros for field to0 */
/**
 * @defgroup at_lc_regs_core_to0_field to0_field
 * @brief macros for field to0
 * @details interrupt for time out 0 for free running micro second counter fr_us_cntr, write 1 to set. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_FRC_IRQS__TO0__SHIFT                                          0
#define ATLC_LC_FRC_IRQS__TO0__WIDTH                                          1
#define ATLC_LC_FRC_IRQS__TO0__MASK                                 0x00000001U
#define ATLC_LC_FRC_IRQS__TO0__READ(src)        ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_FRC_IRQS__TO0__WRITE(src)       ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_FRC_IRQS__TO0__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_LC_FRC_IRQS__TO0__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_LC_FRC_IRQS__TO0__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_FRC_IRQS__TO0__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_FRC_IRQS__TO0__RESET_VALUE                          0x00000000U
/** @} */

/* macros for field to1 */
/**
 * @defgroup at_lc_regs_core_to1_field to1_field
 * @brief macros for field to1
 * @details interrupt for time out 1 for free running micro second counter fr_us_cntr, write 1 to set. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_FRC_IRQS__TO1__SHIFT                                          1
#define ATLC_LC_FRC_IRQS__TO1__WIDTH                                          1
#define ATLC_LC_FRC_IRQS__TO1__MASK                                 0x00000002U
#define ATLC_LC_FRC_IRQS__TO1__READ(src) (((uint32_t)(src) & 0x00000002U) >> 1)
#define ATLC_LC_FRC_IRQS__TO1__WRITE(src) \
                    (((uint32_t)(src)\
                    << 1) & 0x00000002U)
#define ATLC_LC_FRC_IRQS__TO1__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | (((uint32_t)(src) <<\
                    1) & 0x00000002U)
#define ATLC_LC_FRC_IRQS__TO1__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 1) & ~0x00000002U)))
#define ATLC_LC_FRC_IRQS__TO1__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(1) << 1)
#define ATLC_LC_FRC_IRQS__TO1__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(0) << 1)
#define ATLC_LC_FRC_IRQS__TO1__RESET_VALUE                          0x00000000U
/** @} */

/* macros for field to2 */
/**
 * @defgroup at_lc_regs_core_to2_field to2_field
 * @brief macros for field to2
 * @details interrupt for time out 2 for free running micro second counter fr_us_cntr, write 1 to set. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_FRC_IRQS__TO2__SHIFT                                          2
#define ATLC_LC_FRC_IRQS__TO2__WIDTH                                          1
#define ATLC_LC_FRC_IRQS__TO2__MASK                                 0x00000004U
#define ATLC_LC_FRC_IRQS__TO2__READ(src) (((uint32_t)(src) & 0x00000004U) >> 2)
#define ATLC_LC_FRC_IRQS__TO2__WRITE(src) \
                    (((uint32_t)(src)\
                    << 2) & 0x00000004U)
#define ATLC_LC_FRC_IRQS__TO2__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | (((uint32_t)(src) <<\
                    2) & 0x00000004U)
#define ATLC_LC_FRC_IRQS__TO2__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 2) & ~0x00000004U)))
#define ATLC_LC_FRC_IRQS__TO2__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(1) << 2)
#define ATLC_LC_FRC_IRQS__TO2__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(0) << 2)
#define ATLC_LC_FRC_IRQS__TO2__RESET_VALUE                          0x00000000U
/** @} */
#define ATLC_LC_FRC_IRQS__TYPE                                         uint32_t
#define ATLC_LC_FRC_IRQS__READ                                      0x00000007U
#define ATLC_LC_FRC_IRQS__WRITE                                     0x00000007U
#define ATLC_LC_FRC_IRQS__PRESERVED                                 0x00000000U
#define ATLC_LC_FRC_IRQS__RESET_VALUE                               0x00000000U

#endif /* __ATLC_LC_FRC_IRQS_MACRO__ */

/** @} end of lc_frc_irqs */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_frc_irqc */
/**
 * @defgroup at_lc_regs_core_lc_frc_irqc lc_frc_irqc
 * @brief Contains register fields associated with lc_frc_irqc. definitions.
 * @{
 */
#ifndef __ATLC_LC_FRC_IRQC_MACRO__
#define __ATLC_LC_FRC_IRQC_MACRO__

/* macros for field to0 */
/**
 * @defgroup at_lc_regs_core_to0_field to0_field
 * @brief macros for field to0
 * @details interrupt for time out 0 for free running micro second counter fr_us_cntr, write 1 to clear. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_FRC_IRQC__TO0__SHIFT                                          0
#define ATLC_LC_FRC_IRQC__TO0__WIDTH                                          1
#define ATLC_LC_FRC_IRQC__TO0__MASK                                 0x00000001U
#define ATLC_LC_FRC_IRQC__TO0__READ(src)        ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_FRC_IRQC__TO0__WRITE(src)       ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_FRC_IRQC__TO0__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_LC_FRC_IRQC__TO0__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_LC_FRC_IRQC__TO0__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_FRC_IRQC__TO0__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_FRC_IRQC__TO0__RESET_VALUE                          0x00000000U
/** @} */

/* macros for field to1 */
/**
 * @defgroup at_lc_regs_core_to1_field to1_field
 * @brief macros for field to1
 * @details interrupt for time out 1 for free running micro second counter fr_us_cntr, write 1 to clear. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_FRC_IRQC__TO1__SHIFT                                          1
#define ATLC_LC_FRC_IRQC__TO1__WIDTH                                          1
#define ATLC_LC_FRC_IRQC__TO1__MASK                                 0x00000002U
#define ATLC_LC_FRC_IRQC__TO1__READ(src) (((uint32_t)(src) & 0x00000002U) >> 1)
#define ATLC_LC_FRC_IRQC__TO1__WRITE(src) \
                    (((uint32_t)(src)\
                    << 1) & 0x00000002U)
#define ATLC_LC_FRC_IRQC__TO1__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | (((uint32_t)(src) <<\
                    1) & 0x00000002U)
#define ATLC_LC_FRC_IRQC__TO1__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 1) & ~0x00000002U)))
#define ATLC_LC_FRC_IRQC__TO1__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(1) << 1)
#define ATLC_LC_FRC_IRQC__TO1__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(0) << 1)
#define ATLC_LC_FRC_IRQC__TO1__RESET_VALUE                          0x00000000U
/** @} */

/* macros for field to2 */
/**
 * @defgroup at_lc_regs_core_to2_field to2_field
 * @brief macros for field to2
 * @details interrupt for time out 2 for free running micro second counter fr_us_cntr, write 1 to clear. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_FRC_IRQC__TO2__SHIFT                                          2
#define ATLC_LC_FRC_IRQC__TO2__WIDTH                                          1
#define ATLC_LC_FRC_IRQC__TO2__MASK                                 0x00000004U
#define ATLC_LC_FRC_IRQC__TO2__READ(src) (((uint32_t)(src) & 0x00000004U) >> 2)
#define ATLC_LC_FRC_IRQC__TO2__WRITE(src) \
                    (((uint32_t)(src)\
                    << 2) & 0x00000004U)
#define ATLC_LC_FRC_IRQC__TO2__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | (((uint32_t)(src) <<\
                    2) & 0x00000004U)
#define ATLC_LC_FRC_IRQC__TO2__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 2) & ~0x00000004U)))
#define ATLC_LC_FRC_IRQC__TO2__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(1) << 2)
#define ATLC_LC_FRC_IRQC__TO2__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(0) << 2)
#define ATLC_LC_FRC_IRQC__TO2__RESET_VALUE                          0x00000000U
/** @} */
#define ATLC_LC_FRC_IRQC__TYPE                                         uint32_t
#define ATLC_LC_FRC_IRQC__READ                                      0x00000007U
#define ATLC_LC_FRC_IRQC__WRITE                                     0x00000007U
#define ATLC_LC_FRC_IRQC__PRESERVED                                 0x00000000U
#define ATLC_LC_FRC_IRQC__RESET_VALUE                               0x00000000U

#endif /* __ATLC_LC_FRC_IRQC_MACRO__ */

/** @} end of lc_frc_irqc */

/* macros for BlueprintGlobalNameSpace::ATLC_aesctrl */
/**
 * @defgroup at_lc_regs_core_aesctrl aesctrl
 * @brief Contains register fields associated with aesctrl. definitions.
 * @{
 */
#ifndef __ATLC_AESCTRL_MACRO__
#define __ATLC_AESCTRL_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES control
 * @{
 */
#define ATLC_AESCTRL__VL__SHIFT                                               0
#define ATLC_AESCTRL__VL__WIDTH                                              32
#define ATLC_AESCTRL__VL__MASK                                      0xffffffffU
#define ATLC_AESCTRL__VL__READ(src)             ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESCTRL__VL__WRITE(src)            ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESCTRL__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESCTRL__VL__VERIFY(src)     (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_AESCTRL__VL__RESET_VALUE                               0x000000c0U
/** @} */
#define ATLC_AESCTRL__TYPE                                             uint32_t
#define ATLC_AESCTRL__READ                                          0xffffffffU
#define ATLC_AESCTRL__WRITE                                         0xffffffffU
#define ATLC_AESCTRL__PRESERVED                                     0x00000000U
#define ATLC_AESCTRL__RESET_VALUE                                   0x000000c0U

#endif /* __ATLC_AESCTRL_MACRO__ */

/** @} end of aesctrl */

/* macros for BlueprintGlobalNameSpace::ATLC_aestrig */
/**
 * @defgroup at_lc_regs_core_aestrig aestrig
 * @brief Contains register fields associated with aestrig. definitions.
 * @{
 */
#ifndef __ATLC_AESTRIG_MACRO__
#define __ATLC_AESTRIG_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES trigger
 * @{
 */
#define ATLC_AESTRIG__VL__SHIFT                                               0
#define ATLC_AESTRIG__VL__WIDTH                                               4
#define ATLC_AESTRIG__VL__MASK                                      0x0000000fU
#define ATLC_AESTRIG__VL__WRITE(src)            ((uint32_t)(src) & 0x0000000fU)
#define ATLC_AESTRIG__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000000fU) | ((uint32_t)(src) &\
                    0x0000000fU)
#define ATLC_AESTRIG__VL__VERIFY(src)     (!(((uint32_t)(src) & ~0x0000000fU)))
#define ATLC_AESTRIG__VL__RESET_VALUE                               0x0000000eU
/** @} */
#define ATLC_AESTRIG__TYPE                                             uint32_t
#define ATLC_AESTRIG__WRITE                                         0x00000000U
#define ATLC_AESTRIG__PRESERVED                                     0x00000000U
#define ATLC_AESTRIG__RESET_VALUE                                   0x0000000eU

#endif /* __ATLC_AESTRIG_MACRO__ */

/** @} end of aestrig */

/* macros for BlueprintGlobalNameSpace::ATLC_aes_status */
/**
 * @defgroup at_lc_regs_core_aes_status aes_status
 * @brief Contains register fields associated with aes_status. definitions.
 * @{
 */
#ifndef __ATLC_AES_STATUS_MACRO__
#define __ATLC_AES_STATUS_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES Status
 * @{
 */
#define ATLC_AES_STATUS__VL__SHIFT                                            0
#define ATLC_AES_STATUS__VL__WIDTH                                            7
#define ATLC_AES_STATUS__VL__MASK                                   0x0000007fU
#define ATLC_AES_STATUS__VL__READ(src)          ((uint32_t)(src) & 0x0000007fU)
#define ATLC_AES_STATUS__VL__RESET_VALUE                            0x00000011U
/** @} */
#define ATLC_AES_STATUS__TYPE                                          uint32_t
#define ATLC_AES_STATUS__READ                                       0x0000007fU
#define ATLC_AES_STATUS__PRESERVED                                  0x00000000U
#define ATLC_AES_STATUS__RESET_VALUE                                0x00000011U

#endif /* __ATLC_AES_STATUS_MACRO__ */

/** @} end of aes_status */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskey_s0_0 */
/**
 * @defgroup at_lc_regs_core_aeskey_s0_0 aeskey_s0_0
 * @brief Contains register fields associated with aeskey_s0_0. definitions.
 * @{
 */
#ifndef __ATLC_AESKEY_S0_0_MACRO__
#define __ATLC_AESKEY_S0_0_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share0 key [31:0]
 * @{
 */
#define ATLC_AESKEY_S0_0__VL__SHIFT                                           0
#define ATLC_AESKEY_S0_0__VL__WIDTH                                          32
#define ATLC_AESKEY_S0_0__VL__MASK                                  0xffffffffU
#define ATLC_AESKEY_S0_0__VL__READ(src)         ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S0_0__VL__WRITE(src)        ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S0_0__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEY_S0_0__VL__VERIFY(src) (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_AESKEY_S0_0__VL__RESET_VALUE                           0x00000000U
/** @} */
#define ATLC_AESKEY_S0_0__TYPE                                         uint32_t
#define ATLC_AESKEY_S0_0__READ                                      0xffffffffU
#define ATLC_AESKEY_S0_0__WRITE                                     0xffffffffU
#define ATLC_AESKEY_S0_0__PRESERVED                                 0x00000000U
#define ATLC_AESKEY_S0_0__RESET_VALUE                               0x00000000U

#endif /* __ATLC_AESKEY_S0_0_MACRO__ */

/** @} end of aeskey_s0_0 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskey_s0_1 */
/**
 * @defgroup at_lc_regs_core_aeskey_s0_1 aeskey_s0_1
 * @brief Contains register fields associated with aeskey_s0_1. definitions.
 * @{
 */
#ifndef __ATLC_AESKEY_S0_1_MACRO__
#define __ATLC_AESKEY_S0_1_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share0 key [63:32]
 * @{
 */
#define ATLC_AESKEY_S0_1__VL__SHIFT                                           0
#define ATLC_AESKEY_S0_1__VL__WIDTH                                          32
#define ATLC_AESKEY_S0_1__VL__MASK                                  0xffffffffU
#define ATLC_AESKEY_S0_1__VL__READ(src)         ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S0_1__VL__WRITE(src)        ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S0_1__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEY_S0_1__VL__VERIFY(src) (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_AESKEY_S0_1__VL__RESET_VALUE                           0x00000000U
/** @} */
#define ATLC_AESKEY_S0_1__TYPE                                         uint32_t
#define ATLC_AESKEY_S0_1__READ                                      0xffffffffU
#define ATLC_AESKEY_S0_1__WRITE                                     0xffffffffU
#define ATLC_AESKEY_S0_1__PRESERVED                                 0x00000000U
#define ATLC_AESKEY_S0_1__RESET_VALUE                               0x00000000U

#endif /* __ATLC_AESKEY_S0_1_MACRO__ */

/** @} end of aeskey_s0_1 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskey_s0_2 */
/**
 * @defgroup at_lc_regs_core_aeskey_s0_2 aeskey_s0_2
 * @brief Contains register fields associated with aeskey_s0_2. definitions.
 * @{
 */
#ifndef __ATLC_AESKEY_S0_2_MACRO__
#define __ATLC_AESKEY_S0_2_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share0 key [95:64]
 * @{
 */
#define ATLC_AESKEY_S0_2__VL__SHIFT                                           0
#define ATLC_AESKEY_S0_2__VL__WIDTH                                          32
#define ATLC_AESKEY_S0_2__VL__MASK                                  0xffffffffU
#define ATLC_AESKEY_S0_2__VL__READ(src)         ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S0_2__VL__WRITE(src)        ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S0_2__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEY_S0_2__VL__VERIFY(src) (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_AESKEY_S0_2__VL__RESET_VALUE                           0x00000000U
/** @} */
#define ATLC_AESKEY_S0_2__TYPE                                         uint32_t
#define ATLC_AESKEY_S0_2__READ                                      0xffffffffU
#define ATLC_AESKEY_S0_2__WRITE                                     0xffffffffU
#define ATLC_AESKEY_S0_2__PRESERVED                                 0x00000000U
#define ATLC_AESKEY_S0_2__RESET_VALUE                               0x00000000U

#endif /* __ATLC_AESKEY_S0_2_MACRO__ */

/** @} end of aeskey_s0_2 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskey_s0_3 */
/**
 * @defgroup at_lc_regs_core_aeskey_s0_3 aeskey_s0_3
 * @brief Contains register fields associated with aeskey_s0_3. definitions.
 * @{
 */
#ifndef __ATLC_AESKEY_S0_3_MACRO__
#define __ATLC_AESKEY_S0_3_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share0 key [127:96]
 * @{
 */
#define ATLC_AESKEY_S0_3__VL__SHIFT                                           0
#define ATLC_AESKEY_S0_3__VL__WIDTH                                          32
#define ATLC_AESKEY_S0_3__VL__MASK                                  0xffffffffU
#define ATLC_AESKEY_S0_3__VL__READ(src)         ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S0_3__VL__WRITE(src)        ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S0_3__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEY_S0_3__VL__VERIFY(src) (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_AESKEY_S0_3__VL__RESET_VALUE                           0x00000000U
/** @} */
#define ATLC_AESKEY_S0_3__TYPE                                         uint32_t
#define ATLC_AESKEY_S0_3__READ                                      0xffffffffU
#define ATLC_AESKEY_S0_3__WRITE                                     0xffffffffU
#define ATLC_AESKEY_S0_3__PRESERVED                                 0x00000000U
#define ATLC_AESKEY_S0_3__RESET_VALUE                               0x00000000U

#endif /* __ATLC_AESKEY_S0_3_MACRO__ */

/** @} end of aeskey_s0_3 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskey_s0_4 */
/**
 * @defgroup at_lc_regs_core_aeskey_s0_4 aeskey_s0_4
 * @brief Contains register fields associated with aeskey_s0_4. definitions.
 * @{
 */
#ifndef __ATLC_AESKEY_S0_4_MACRO__
#define __ATLC_AESKEY_S0_4_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share0 key [159:128]
 * @{
 */
#define ATLC_AESKEY_S0_4__VL__SHIFT                                           0
#define ATLC_AESKEY_S0_4__VL__WIDTH                                          32
#define ATLC_AESKEY_S0_4__VL__MASK                                  0xffffffffU
#define ATLC_AESKEY_S0_4__VL__READ(src)         ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S0_4__VL__WRITE(src)        ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S0_4__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEY_S0_4__VL__VERIFY(src) (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_AESKEY_S0_4__VL__RESET_VALUE                           0x00000000U
/** @} */
#define ATLC_AESKEY_S0_4__TYPE                                         uint32_t
#define ATLC_AESKEY_S0_4__READ                                      0xffffffffU
#define ATLC_AESKEY_S0_4__WRITE                                     0xffffffffU
#define ATLC_AESKEY_S0_4__PRESERVED                                 0x00000000U
#define ATLC_AESKEY_S0_4__RESET_VALUE                               0x00000000U

#endif /* __ATLC_AESKEY_S0_4_MACRO__ */

/** @} end of aeskey_s0_4 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskey_s0_5 */
/**
 * @defgroup at_lc_regs_core_aeskey_s0_5 aeskey_s0_5
 * @brief Contains register fields associated with aeskey_s0_5. definitions.
 * @{
 */
#ifndef __ATLC_AESKEY_S0_5_MACRO__
#define __ATLC_AESKEY_S0_5_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share0 key [191:160]
 * @{
 */
#define ATLC_AESKEY_S0_5__VL__SHIFT                                           0
#define ATLC_AESKEY_S0_5__VL__WIDTH                                          32
#define ATLC_AESKEY_S0_5__VL__MASK                                  0xffffffffU
#define ATLC_AESKEY_S0_5__VL__READ(src)         ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S0_5__VL__WRITE(src)        ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S0_5__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEY_S0_5__VL__VERIFY(src) (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_AESKEY_S0_5__VL__RESET_VALUE                           0x00000000U
/** @} */
#define ATLC_AESKEY_S0_5__TYPE                                         uint32_t
#define ATLC_AESKEY_S0_5__READ                                      0xffffffffU
#define ATLC_AESKEY_S0_5__WRITE                                     0xffffffffU
#define ATLC_AESKEY_S0_5__PRESERVED                                 0x00000000U
#define ATLC_AESKEY_S0_5__RESET_VALUE                               0x00000000U

#endif /* __ATLC_AESKEY_S0_5_MACRO__ */

/** @} end of aeskey_s0_5 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskey_s0_6 */
/**
 * @defgroup at_lc_regs_core_aeskey_s0_6 aeskey_s0_6
 * @brief Contains register fields associated with aeskey_s0_6. definitions.
 * @{
 */
#ifndef __ATLC_AESKEY_S0_6_MACRO__
#define __ATLC_AESKEY_S0_6_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share0 key [223:192]
 * @{
 */
#define ATLC_AESKEY_S0_6__VL__SHIFT                                           0
#define ATLC_AESKEY_S0_6__VL__WIDTH                                          32
#define ATLC_AESKEY_S0_6__VL__MASK                                  0xffffffffU
#define ATLC_AESKEY_S0_6__VL__READ(src)         ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S0_6__VL__WRITE(src)        ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S0_6__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEY_S0_6__VL__VERIFY(src) (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_AESKEY_S0_6__VL__RESET_VALUE                           0x00000000U
/** @} */
#define ATLC_AESKEY_S0_6__TYPE                                         uint32_t
#define ATLC_AESKEY_S0_6__READ                                      0xffffffffU
#define ATLC_AESKEY_S0_6__WRITE                                     0xffffffffU
#define ATLC_AESKEY_S0_6__PRESERVED                                 0x00000000U
#define ATLC_AESKEY_S0_6__RESET_VALUE                               0x00000000U

#endif /* __ATLC_AESKEY_S0_6_MACRO__ */

/** @} end of aeskey_s0_6 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskey_s0_7 */
/**
 * @defgroup at_lc_regs_core_aeskey_s0_7 aeskey_s0_7
 * @brief Contains register fields associated with aeskey_s0_7. definitions.
 * @{
 */
#ifndef __ATLC_AESKEY_S0_7_MACRO__
#define __ATLC_AESKEY_S0_7_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share0 key [255:224]
 * @{
 */
#define ATLC_AESKEY_S0_7__VL__SHIFT                                           0
#define ATLC_AESKEY_S0_7__VL__WIDTH                                          32
#define ATLC_AESKEY_S0_7__VL__MASK                                  0xffffffffU
#define ATLC_AESKEY_S0_7__VL__READ(src)         ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S0_7__VL__WRITE(src)        ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S0_7__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEY_S0_7__VL__VERIFY(src) (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_AESKEY_S0_7__VL__RESET_VALUE                           0x00000000U
/** @} */
#define ATLC_AESKEY_S0_7__TYPE                                         uint32_t
#define ATLC_AESKEY_S0_7__READ                                      0xffffffffU
#define ATLC_AESKEY_S0_7__WRITE                                     0xffffffffU
#define ATLC_AESKEY_S0_7__PRESERVED                                 0x00000000U
#define ATLC_AESKEY_S0_7__RESET_VALUE                               0x00000000U

#endif /* __ATLC_AESKEY_S0_7_MACRO__ */

/** @} end of aeskey_s0_7 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskey_s1_0 */
/**
 * @defgroup at_lc_regs_core_aeskey_s1_0 aeskey_s1_0
 * @brief Contains register fields associated with aeskey_s1_0. definitions.
 * @{
 */
#ifndef __ATLC_AESKEY_S1_0_MACRO__
#define __ATLC_AESKEY_S1_0_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share1 key [31:0]
 * @{
 */
#define ATLC_AESKEY_S1_0__VL__SHIFT                                           0
#define ATLC_AESKEY_S1_0__VL__WIDTH                                          32
#define ATLC_AESKEY_S1_0__VL__MASK                                  0xffffffffU
#define ATLC_AESKEY_S1_0__VL__READ(src)         ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S1_0__VL__WRITE(src)        ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S1_0__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEY_S1_0__VL__VERIFY(src) (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_AESKEY_S1_0__VL__RESET_VALUE                           0x00000000U
/** @} */
#define ATLC_AESKEY_S1_0__TYPE                                         uint32_t
#define ATLC_AESKEY_S1_0__READ                                      0xffffffffU
#define ATLC_AESKEY_S1_0__WRITE                                     0xffffffffU
#define ATLC_AESKEY_S1_0__PRESERVED                                 0x00000000U
#define ATLC_AESKEY_S1_0__RESET_VALUE                               0x00000000U

#endif /* __ATLC_AESKEY_S1_0_MACRO__ */

/** @} end of aeskey_s1_0 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskey_s1_1 */
/**
 * @defgroup at_lc_regs_core_aeskey_s1_1 aeskey_s1_1
 * @brief Contains register fields associated with aeskey_s1_1. definitions.
 * @{
 */
#ifndef __ATLC_AESKEY_S1_1_MACRO__
#define __ATLC_AESKEY_S1_1_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share1 key [63:32]
 * @{
 */
#define ATLC_AESKEY_S1_1__VL__SHIFT                                           0
#define ATLC_AESKEY_S1_1__VL__WIDTH                                          32
#define ATLC_AESKEY_S1_1__VL__MASK                                  0xffffffffU
#define ATLC_AESKEY_S1_1__VL__READ(src)         ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S1_1__VL__WRITE(src)        ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S1_1__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEY_S1_1__VL__VERIFY(src) (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_AESKEY_S1_1__VL__RESET_VALUE                           0x00000000U
/** @} */
#define ATLC_AESKEY_S1_1__TYPE                                         uint32_t
#define ATLC_AESKEY_S1_1__READ                                      0xffffffffU
#define ATLC_AESKEY_S1_1__WRITE                                     0xffffffffU
#define ATLC_AESKEY_S1_1__PRESERVED                                 0x00000000U
#define ATLC_AESKEY_S1_1__RESET_VALUE                               0x00000000U

#endif /* __ATLC_AESKEY_S1_1_MACRO__ */

/** @} end of aeskey_s1_1 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskey_s1_2 */
/**
 * @defgroup at_lc_regs_core_aeskey_s1_2 aeskey_s1_2
 * @brief Contains register fields associated with aeskey_s1_2. definitions.
 * @{
 */
#ifndef __ATLC_AESKEY_S1_2_MACRO__
#define __ATLC_AESKEY_S1_2_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share1 key [95:64]
 * @{
 */
#define ATLC_AESKEY_S1_2__VL__SHIFT                                           0
#define ATLC_AESKEY_S1_2__VL__WIDTH                                          32
#define ATLC_AESKEY_S1_2__VL__MASK                                  0xffffffffU
#define ATLC_AESKEY_S1_2__VL__READ(src)         ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S1_2__VL__WRITE(src)        ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S1_2__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEY_S1_2__VL__VERIFY(src) (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_AESKEY_S1_2__VL__RESET_VALUE                           0x00000000U
/** @} */
#define ATLC_AESKEY_S1_2__TYPE                                         uint32_t
#define ATLC_AESKEY_S1_2__READ                                      0xffffffffU
#define ATLC_AESKEY_S1_2__WRITE                                     0xffffffffU
#define ATLC_AESKEY_S1_2__PRESERVED                                 0x00000000U
#define ATLC_AESKEY_S1_2__RESET_VALUE                               0x00000000U

#endif /* __ATLC_AESKEY_S1_2_MACRO__ */

/** @} end of aeskey_s1_2 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskey_s1_3 */
/**
 * @defgroup at_lc_regs_core_aeskey_s1_3 aeskey_s1_3
 * @brief Contains register fields associated with aeskey_s1_3. definitions.
 * @{
 */
#ifndef __ATLC_AESKEY_S1_3_MACRO__
#define __ATLC_AESKEY_S1_3_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share1 key [127:96]
 * @{
 */
#define ATLC_AESKEY_S1_3__VL__SHIFT                                           0
#define ATLC_AESKEY_S1_3__VL__WIDTH                                          32
#define ATLC_AESKEY_S1_3__VL__MASK                                  0xffffffffU
#define ATLC_AESKEY_S1_3__VL__READ(src)         ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S1_3__VL__WRITE(src)        ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S1_3__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEY_S1_3__VL__VERIFY(src) (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_AESKEY_S1_3__VL__RESET_VALUE                           0x00000000U
/** @} */
#define ATLC_AESKEY_S1_3__TYPE                                         uint32_t
#define ATLC_AESKEY_S1_3__READ                                      0xffffffffU
#define ATLC_AESKEY_S1_3__WRITE                                     0xffffffffU
#define ATLC_AESKEY_S1_3__PRESERVED                                 0x00000000U
#define ATLC_AESKEY_S1_3__RESET_VALUE                               0x00000000U

#endif /* __ATLC_AESKEY_S1_3_MACRO__ */

/** @} end of aeskey_s1_3 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskey_s1_4 */
/**
 * @defgroup at_lc_regs_core_aeskey_s1_4 aeskey_s1_4
 * @brief Contains register fields associated with aeskey_s1_4. definitions.
 * @{
 */
#ifndef __ATLC_AESKEY_S1_4_MACRO__
#define __ATLC_AESKEY_S1_4_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share1 key [159:128]
 * @{
 */
#define ATLC_AESKEY_S1_4__VL__SHIFT                                           0
#define ATLC_AESKEY_S1_4__VL__WIDTH                                          32
#define ATLC_AESKEY_S1_4__VL__MASK                                  0xffffffffU
#define ATLC_AESKEY_S1_4__VL__READ(src)         ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S1_4__VL__WRITE(src)        ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S1_4__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEY_S1_4__VL__VERIFY(src) (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_AESKEY_S1_4__VL__RESET_VALUE                           0x00000000U
/** @} */
#define ATLC_AESKEY_S1_4__TYPE                                         uint32_t
#define ATLC_AESKEY_S1_4__READ                                      0xffffffffU
#define ATLC_AESKEY_S1_4__WRITE                                     0xffffffffU
#define ATLC_AESKEY_S1_4__PRESERVED                                 0x00000000U
#define ATLC_AESKEY_S1_4__RESET_VALUE                               0x00000000U

#endif /* __ATLC_AESKEY_S1_4_MACRO__ */

/** @} end of aeskey_s1_4 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskey_s1_5 */
/**
 * @defgroup at_lc_regs_core_aeskey_s1_5 aeskey_s1_5
 * @brief Contains register fields associated with aeskey_s1_5. definitions.
 * @{
 */
#ifndef __ATLC_AESKEY_S1_5_MACRO__
#define __ATLC_AESKEY_S1_5_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share1 key [191:160]
 * @{
 */
#define ATLC_AESKEY_S1_5__VL__SHIFT                                           0
#define ATLC_AESKEY_S1_5__VL__WIDTH                                          32
#define ATLC_AESKEY_S1_5__VL__MASK                                  0xffffffffU
#define ATLC_AESKEY_S1_5__VL__READ(src)         ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S1_5__VL__WRITE(src)        ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S1_5__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEY_S1_5__VL__VERIFY(src) (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_AESKEY_S1_5__VL__RESET_VALUE                           0x00000000U
/** @} */
#define ATLC_AESKEY_S1_5__TYPE                                         uint32_t
#define ATLC_AESKEY_S1_5__READ                                      0xffffffffU
#define ATLC_AESKEY_S1_5__WRITE                                     0xffffffffU
#define ATLC_AESKEY_S1_5__PRESERVED                                 0x00000000U
#define ATLC_AESKEY_S1_5__RESET_VALUE                               0x00000000U

#endif /* __ATLC_AESKEY_S1_5_MACRO__ */

/** @} end of aeskey_s1_5 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskey_s1_6 */
/**
 * @defgroup at_lc_regs_core_aeskey_s1_6 aeskey_s1_6
 * @brief Contains register fields associated with aeskey_s1_6. definitions.
 * @{
 */
#ifndef __ATLC_AESKEY_S1_6_MACRO__
#define __ATLC_AESKEY_S1_6_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share1 key [223:192]
 * @{
 */
#define ATLC_AESKEY_S1_6__VL__SHIFT                                           0
#define ATLC_AESKEY_S1_6__VL__WIDTH                                          32
#define ATLC_AESKEY_S1_6__VL__MASK                                  0xffffffffU
#define ATLC_AESKEY_S1_6__VL__READ(src)         ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S1_6__VL__WRITE(src)        ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S1_6__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEY_S1_6__VL__VERIFY(src) (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_AESKEY_S1_6__VL__RESET_VALUE                           0x00000000U
/** @} */
#define ATLC_AESKEY_S1_6__TYPE                                         uint32_t
#define ATLC_AESKEY_S1_6__READ                                      0xffffffffU
#define ATLC_AESKEY_S1_6__WRITE                                     0xffffffffU
#define ATLC_AESKEY_S1_6__PRESERVED                                 0x00000000U
#define ATLC_AESKEY_S1_6__RESET_VALUE                               0x00000000U

#endif /* __ATLC_AESKEY_S1_6_MACRO__ */

/** @} end of aeskey_s1_6 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskey_s1_7 */
/**
 * @defgroup at_lc_regs_core_aeskey_s1_7 aeskey_s1_7
 * @brief Contains register fields associated with aeskey_s1_7. definitions.
 * @{
 */
#ifndef __ATLC_AESKEY_S1_7_MACRO__
#define __ATLC_AESKEY_S1_7_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share1 key [255:224]
 * @{
 */
#define ATLC_AESKEY_S1_7__VL__SHIFT                                           0
#define ATLC_AESKEY_S1_7__VL__WIDTH                                          32
#define ATLC_AESKEY_S1_7__VL__MASK                                  0xffffffffU
#define ATLC_AESKEY_S1_7__VL__READ(src)         ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S1_7__VL__WRITE(src)        ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEY_S1_7__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEY_S1_7__VL__VERIFY(src) (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_AESKEY_S1_7__VL__RESET_VALUE                           0x00000000U
/** @} */
#define ATLC_AESKEY_S1_7__TYPE                                         uint32_t
#define ATLC_AESKEY_S1_7__READ                                      0xffffffffU
#define ATLC_AESKEY_S1_7__WRITE                                     0xffffffffU
#define ATLC_AESKEY_S1_7__PRESERVED                                 0x00000000U
#define ATLC_AESKEY_S1_7__RESET_VALUE                               0x00000000U

#endif /* __ATLC_AESKEY_S1_7_MACRO__ */

/** @} end of aeskey_s1_7 */

/* macros for BlueprintGlobalNameSpace::ATLC_iv0 */
/**
 * @defgroup at_lc_regs_core_iv0 iv0
 * @brief Contains register fields associated with iv0. definitions.
 * @{
 */
#ifndef __ATLC_IV0_MACRO__
#define __ATLC_IV0_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details initial vector [31:0]
 * @{
 */
#define ATLC_IV0__VL__SHIFT                                                   0
#define ATLC_IV0__VL__WIDTH                                                  32
#define ATLC_IV0__VL__MASK                                          0xffffffffU
#define ATLC_IV0__VL__READ(src)                 ((uint32_t)(src) & 0xffffffffU)
#define ATLC_IV0__VL__WRITE(src)                ((uint32_t)(src) & 0xffffffffU)
#define ATLC_IV0__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_IV0__VL__VERIFY(src)         (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_IV0__VL__RESET_VALUE                                   0x00000000U
/** @} */
#define ATLC_IV0__TYPE                                                 uint32_t
#define ATLC_IV0__READ                                              0xffffffffU
#define ATLC_IV0__WRITE                                             0xffffffffU
#define ATLC_IV0__PRESERVED                                         0x00000000U
#define ATLC_IV0__RESET_VALUE                                       0x00000000U

#endif /* __ATLC_IV0_MACRO__ */

/** @} end of iv0 */

/* macros for BlueprintGlobalNameSpace::ATLC_iv1 */
/**
 * @defgroup at_lc_regs_core_iv1 iv1
 * @brief Contains register fields associated with iv1. definitions.
 * @{
 */
#ifndef __ATLC_IV1_MACRO__
#define __ATLC_IV1_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details initial vector [63:32]
 * @{
 */
#define ATLC_IV1__VL__SHIFT                                                   0
#define ATLC_IV1__VL__WIDTH                                                  32
#define ATLC_IV1__VL__MASK                                          0xffffffffU
#define ATLC_IV1__VL__READ(src)                 ((uint32_t)(src) & 0xffffffffU)
#define ATLC_IV1__VL__WRITE(src)                ((uint32_t)(src) & 0xffffffffU)
#define ATLC_IV1__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_IV1__VL__VERIFY(src)         (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_IV1__VL__RESET_VALUE                                   0x00000000U
/** @} */
#define ATLC_IV1__TYPE                                                 uint32_t
#define ATLC_IV1__READ                                              0xffffffffU
#define ATLC_IV1__WRITE                                             0xffffffffU
#define ATLC_IV1__PRESERVED                                         0x00000000U
#define ATLC_IV1__RESET_VALUE                                       0x00000000U

#endif /* __ATLC_IV1_MACRO__ */

/** @} end of iv1 */

/* macros for BlueprintGlobalNameSpace::ATLC_iv2 */
/**
 * @defgroup at_lc_regs_core_iv2 iv2
 * @brief Contains register fields associated with iv2. definitions.
 * @{
 */
#ifndef __ATLC_IV2_MACRO__
#define __ATLC_IV2_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details initial vector [95:64]
 * @{
 */
#define ATLC_IV2__VL__SHIFT                                                   0
#define ATLC_IV2__VL__WIDTH                                                  32
#define ATLC_IV2__VL__MASK                                          0xffffffffU
#define ATLC_IV2__VL__READ(src)                 ((uint32_t)(src) & 0xffffffffU)
#define ATLC_IV2__VL__WRITE(src)                ((uint32_t)(src) & 0xffffffffU)
#define ATLC_IV2__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_IV2__VL__VERIFY(src)         (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_IV2__VL__RESET_VALUE                                   0x00000000U
/** @} */
#define ATLC_IV2__TYPE                                                 uint32_t
#define ATLC_IV2__READ                                              0xffffffffU
#define ATLC_IV2__WRITE                                             0xffffffffU
#define ATLC_IV2__PRESERVED                                         0x00000000U
#define ATLC_IV2__RESET_VALUE                                       0x00000000U

#endif /* __ATLC_IV2_MACRO__ */

/** @} end of iv2 */

/* macros for BlueprintGlobalNameSpace::ATLC_iv3 */
/**
 * @defgroup at_lc_regs_core_iv3 iv3
 * @brief Contains register fields associated with iv3. definitions.
 * @{
 */
#ifndef __ATLC_IV3_MACRO__
#define __ATLC_IV3_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details initial vector [127:96]
 * @{
 */
#define ATLC_IV3__VL__SHIFT                                                   0
#define ATLC_IV3__VL__WIDTH                                                  32
#define ATLC_IV3__VL__MASK                                          0xffffffffU
#define ATLC_IV3__VL__READ(src)                 ((uint32_t)(src) & 0xffffffffU)
#define ATLC_IV3__VL__WRITE(src)                ((uint32_t)(src) & 0xffffffffU)
#define ATLC_IV3__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_IV3__VL__VERIFY(src)         (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_IV3__VL__RESET_VALUE                                   0x00000000U
/** @} */
#define ATLC_IV3__TYPE                                                 uint32_t
#define ATLC_IV3__READ                                              0xffffffffU
#define ATLC_IV3__WRITE                                             0xffffffffU
#define ATLC_IV3__PRESERVED                                         0x00000000U
#define ATLC_IV3__RESET_VALUE                                       0x00000000U

#endif /* __ATLC_IV3_MACRO__ */

/** @} end of iv3 */

/* macros for BlueprintGlobalNameSpace::ATLC_IData0 */
/**
 * @defgroup at_lc_regs_core_IData0 IData0
 * @brief Contains register fields associated with IData0. definitions.
 * @{
 */
#ifndef __ATLC_IDATA0_MACRO__
#define __ATLC_IDATA0_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details Input Data[31:0]
 * @{
 */
#define ATLC_IDATA0__VL__SHIFT                                                0
#define ATLC_IDATA0__VL__WIDTH                                               32
#define ATLC_IDATA0__VL__MASK                                       0xffffffffU
#define ATLC_IDATA0__VL__WRITE(src)             ((uint32_t)(src) & 0xffffffffU)
#define ATLC_IDATA0__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_IDATA0__VL__VERIFY(src)      (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_IDATA0__VL__RESET_VALUE                                0x00000000U
/** @} */
#define ATLC_IDATA0__TYPE                                              uint32_t
#define ATLC_IDATA0__WRITE                                          0x00000000U
#define ATLC_IDATA0__PRESERVED                                      0x00000000U
#define ATLC_IDATA0__RESET_VALUE                                    0x00000000U

#endif /* __ATLC_IDATA0_MACRO__ */

/** @} end of IData0 */

/* macros for BlueprintGlobalNameSpace::ATLC_IData1 */
/**
 * @defgroup at_lc_regs_core_IData1 IData1
 * @brief Contains register fields associated with IData1. definitions.
 * @{
 */
#ifndef __ATLC_IDATA1_MACRO__
#define __ATLC_IDATA1_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details Input Data[63:32]
 * @{
 */
#define ATLC_IDATA1__VL__SHIFT                                                0
#define ATLC_IDATA1__VL__WIDTH                                               32
#define ATLC_IDATA1__VL__MASK                                       0xffffffffU
#define ATLC_IDATA1__VL__WRITE(src)             ((uint32_t)(src) & 0xffffffffU)
#define ATLC_IDATA1__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_IDATA1__VL__VERIFY(src)      (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_IDATA1__VL__RESET_VALUE                                0x00000000U
/** @} */
#define ATLC_IDATA1__TYPE                                              uint32_t
#define ATLC_IDATA1__WRITE                                          0x00000000U
#define ATLC_IDATA1__PRESERVED                                      0x00000000U
#define ATLC_IDATA1__RESET_VALUE                                    0x00000000U

#endif /* __ATLC_IDATA1_MACRO__ */

/** @} end of IData1 */

/* macros for BlueprintGlobalNameSpace::ATLC_IData2 */
/**
 * @defgroup at_lc_regs_core_IData2 IData2
 * @brief Contains register fields associated with IData2. definitions.
 * @{
 */
#ifndef __ATLC_IDATA2_MACRO__
#define __ATLC_IDATA2_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details Input Data[95:64]
 * @{
 */
#define ATLC_IDATA2__VL__SHIFT                                                0
#define ATLC_IDATA2__VL__WIDTH                                               32
#define ATLC_IDATA2__VL__MASK                                       0xffffffffU
#define ATLC_IDATA2__VL__WRITE(src)             ((uint32_t)(src) & 0xffffffffU)
#define ATLC_IDATA2__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_IDATA2__VL__VERIFY(src)      (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_IDATA2__VL__RESET_VALUE                                0x00000000U
/** @} */
#define ATLC_IDATA2__TYPE                                              uint32_t
#define ATLC_IDATA2__WRITE                                          0x00000000U
#define ATLC_IDATA2__PRESERVED                                      0x00000000U
#define ATLC_IDATA2__RESET_VALUE                                    0x00000000U

#endif /* __ATLC_IDATA2_MACRO__ */

/** @} end of IData2 */

/* macros for BlueprintGlobalNameSpace::ATLC_IData3 */
/**
 * @defgroup at_lc_regs_core_IData3 IData3
 * @brief Contains register fields associated with IData3. definitions.
 * @{
 */
#ifndef __ATLC_IDATA3_MACRO__
#define __ATLC_IDATA3_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details Input Data[127:96]
 * @{
 */
#define ATLC_IDATA3__VL__SHIFT                                                0
#define ATLC_IDATA3__VL__WIDTH                                               32
#define ATLC_IDATA3__VL__MASK                                       0xffffffffU
#define ATLC_IDATA3__VL__WRITE(src)             ((uint32_t)(src) & 0xffffffffU)
#define ATLC_IDATA3__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_IDATA3__VL__VERIFY(src)      (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_IDATA3__VL__RESET_VALUE                                0x00000000U
/** @} */
#define ATLC_IDATA3__TYPE                                              uint32_t
#define ATLC_IDATA3__WRITE                                          0x00000000U
#define ATLC_IDATA3__PRESERVED                                      0x00000000U
#define ATLC_IDATA3__RESET_VALUE                                    0x00000000U

#endif /* __ATLC_IDATA3_MACRO__ */

/** @} end of IData3 */

/* macros for BlueprintGlobalNameSpace::ATLC_OData0 */
/**
 * @defgroup at_lc_regs_core_OData0 OData0
 * @brief Contains register fields associated with OData0. definitions.
 * @{
 */
#ifndef __ATLC_ODATA0_MACRO__
#define __ATLC_ODATA0_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details Output Data[31:0]
 * @{
 */
#define ATLC_ODATA0__VL__SHIFT                                                0
#define ATLC_ODATA0__VL__WIDTH                                               32
#define ATLC_ODATA0__VL__MASK                                       0xffffffffU
#define ATLC_ODATA0__VL__READ(src)              ((uint32_t)(src) & 0xffffffffU)
#define ATLC_ODATA0__VL__RESET_VALUE                                0x05260526U
/** @} */
#define ATLC_ODATA0__TYPE                                              uint32_t
#define ATLC_ODATA0__READ                                           0xffffffffU
#define ATLC_ODATA0__PRESERVED                                      0x00000000U
#define ATLC_ODATA0__RESET_VALUE                                    0x05260526U

#endif /* __ATLC_ODATA0_MACRO__ */

/** @} end of OData0 */

/* macros for BlueprintGlobalNameSpace::ATLC_OData1 */
/**
 * @defgroup at_lc_regs_core_OData1 OData1
 * @brief Contains register fields associated with OData1. definitions.
 * @{
 */
#ifndef __ATLC_ODATA1_MACRO__
#define __ATLC_ODATA1_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details Output Data[63:32]
 * @{
 */
#define ATLC_ODATA1__VL__SHIFT                                                0
#define ATLC_ODATA1__VL__WIDTH                                               32
#define ATLC_ODATA1__VL__MASK                                       0xffffffffU
#define ATLC_ODATA1__VL__READ(src)              ((uint32_t)(src) & 0xffffffffU)
#define ATLC_ODATA1__VL__RESET_VALUE                                0xc427c427U
/** @} */
#define ATLC_ODATA1__TYPE                                              uint32_t
#define ATLC_ODATA1__READ                                           0xffffffffU
#define ATLC_ODATA1__PRESERVED                                      0x00000000U
#define ATLC_ODATA1__RESET_VALUE                                    0xc427c427U

#endif /* __ATLC_ODATA1_MACRO__ */

/** @} end of OData1 */

/* macros for BlueprintGlobalNameSpace::ATLC_OData2 */
/**
 * @defgroup at_lc_regs_core_OData2 OData2
 * @brief Contains register fields associated with OData2. definitions.
 * @{
 */
#ifndef __ATLC_ODATA2_MACRO__
#define __ATLC_ODATA2_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details Output Data[95:64]
 * @{
 */
#define ATLC_ODATA2__VL__SHIFT                                                0
#define ATLC_ODATA2__VL__WIDTH                                               32
#define ATLC_ODATA2__VL__MASK                                       0xffffffffU
#define ATLC_ODATA2__VL__READ(src)              ((uint32_t)(src) & 0xffffffffU)
#define ATLC_ODATA2__VL__RESET_VALUE                                0x3b0a3b0aU
/** @} */
#define ATLC_ODATA2__TYPE                                              uint32_t
#define ATLC_ODATA2__READ                                           0xffffffffU
#define ATLC_ODATA2__PRESERVED                                      0x00000000U
#define ATLC_ODATA2__RESET_VALUE                                    0x3b0a3b0aU

#endif /* __ATLC_ODATA2_MACRO__ */

/** @} end of OData2 */

/* macros for BlueprintGlobalNameSpace::ATLC_OData3 */
/**
 * @defgroup at_lc_regs_core_OData3 OData3
 * @brief Contains register fields associated with OData3. definitions.
 * @{
 */
#ifndef __ATLC_ODATA3_MACRO__
#define __ATLC_ODATA3_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details Output Data[127:96]
 * @{
 */
#define ATLC_ODATA3__VL__SHIFT                                                0
#define ATLC_ODATA3__VL__WIDTH                                               32
#define ATLC_ODATA3__VL__MASK                                       0xffffffffU
#define ATLC_ODATA3__VL__READ(src)              ((uint32_t)(src) & 0xffffffffU)
#define ATLC_ODATA3__VL__RESET_VALUE                                0xe0cae0caU
/** @} */
#define ATLC_ODATA3__TYPE                                              uint32_t
#define ATLC_ODATA3__READ                                           0xffffffffU
#define ATLC_ODATA3__PRESERVED                                      0x00000000U
#define ATLC_ODATA3__RESET_VALUE                                    0xe0cae0caU

#endif /* __ATLC_ODATA3_MACRO__ */

/** @} end of OData3 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_ble_s0_0 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_ble_s0_0 aeskeysl_ble_s0_0
 * @brief Contains register fields associated with aeskeysl_ble_s0_0. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_BLE_S0_0_MACRO__
#define __ATLC_AESKEYSL_BLE_S0_0_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share0 key [31:0]
 * @{
 */
#define ATLC_AESKEYSL_BLE_S0_0__VL__SHIFT                                     0
#define ATLC_AESKEYSL_BLE_S0_0__VL__WIDTH                                    32
#define ATLC_AESKEYSL_BLE_S0_0__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_BLE_S0_0__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_BLE_S0_0__VL__WRITE(src)  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_BLE_S0_0__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEYSL_BLE_S0_0__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_AESKEYSL_BLE_S0_0__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_BLE_S0_0__TYPE                                   uint32_t
#define ATLC_AESKEYSL_BLE_S0_0__READ                                0xffffffffU
#define ATLC_AESKEYSL_BLE_S0_0__WRITE                               0xffffffffU
#define ATLC_AESKEYSL_BLE_S0_0__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_BLE_S0_0__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_BLE_S0_0_MACRO__ */

/** @} end of aeskeysl_ble_s0_0 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_ble_s0_1 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_ble_s0_1 aeskeysl_ble_s0_1
 * @brief Contains register fields associated with aeskeysl_ble_s0_1. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_BLE_S0_1_MACRO__
#define __ATLC_AESKEYSL_BLE_S0_1_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share0 key [63:32]
 * @{
 */
#define ATLC_AESKEYSL_BLE_S0_1__VL__SHIFT                                     0
#define ATLC_AESKEYSL_BLE_S0_1__VL__WIDTH                                    32
#define ATLC_AESKEYSL_BLE_S0_1__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_BLE_S0_1__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_BLE_S0_1__VL__WRITE(src)  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_BLE_S0_1__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEYSL_BLE_S0_1__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_AESKEYSL_BLE_S0_1__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_BLE_S0_1__TYPE                                   uint32_t
#define ATLC_AESKEYSL_BLE_S0_1__READ                                0xffffffffU
#define ATLC_AESKEYSL_BLE_S0_1__WRITE                               0xffffffffU
#define ATLC_AESKEYSL_BLE_S0_1__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_BLE_S0_1__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_BLE_S0_1_MACRO__ */

/** @} end of aeskeysl_ble_s0_1 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_ble_s0_2 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_ble_s0_2 aeskeysl_ble_s0_2
 * @brief Contains register fields associated with aeskeysl_ble_s0_2. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_BLE_S0_2_MACRO__
#define __ATLC_AESKEYSL_BLE_S0_2_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share0 key [95:64]
 * @{
 */
#define ATLC_AESKEYSL_BLE_S0_2__VL__SHIFT                                     0
#define ATLC_AESKEYSL_BLE_S0_2__VL__WIDTH                                    32
#define ATLC_AESKEYSL_BLE_S0_2__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_BLE_S0_2__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_BLE_S0_2__VL__WRITE(src)  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_BLE_S0_2__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEYSL_BLE_S0_2__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_AESKEYSL_BLE_S0_2__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_BLE_S0_2__TYPE                                   uint32_t
#define ATLC_AESKEYSL_BLE_S0_2__READ                                0xffffffffU
#define ATLC_AESKEYSL_BLE_S0_2__WRITE                               0xffffffffU
#define ATLC_AESKEYSL_BLE_S0_2__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_BLE_S0_2__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_BLE_S0_2_MACRO__ */

/** @} end of aeskeysl_ble_s0_2 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_ble_s0_3 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_ble_s0_3 aeskeysl_ble_s0_3
 * @brief Contains register fields associated with aeskeysl_ble_s0_3. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_BLE_S0_3_MACRO__
#define __ATLC_AESKEYSL_BLE_S0_3_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share0 key [127:96]
 * @{
 */
#define ATLC_AESKEYSL_BLE_S0_3__VL__SHIFT                                     0
#define ATLC_AESKEYSL_BLE_S0_3__VL__WIDTH                                    32
#define ATLC_AESKEYSL_BLE_S0_3__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_BLE_S0_3__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_BLE_S0_3__VL__WRITE(src)  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_BLE_S0_3__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEYSL_BLE_S0_3__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_AESKEYSL_BLE_S0_3__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_BLE_S0_3__TYPE                                   uint32_t
#define ATLC_AESKEYSL_BLE_S0_3__READ                                0xffffffffU
#define ATLC_AESKEYSL_BLE_S0_3__WRITE                               0xffffffffU
#define ATLC_AESKEYSL_BLE_S0_3__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_BLE_S0_3__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_BLE_S0_3_MACRO__ */

/** @} end of aeskeysl_ble_s0_3 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_ble_s0_4 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_ble_s0_4 aeskeysl_ble_s0_4
 * @brief Contains register fields associated with aeskeysl_ble_s0_4. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_BLE_S0_4_MACRO__
#define __ATLC_AESKEYSL_BLE_S0_4_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share0 key [159:128]
 * @{
 */
#define ATLC_AESKEYSL_BLE_S0_4__VL__SHIFT                                     0
#define ATLC_AESKEYSL_BLE_S0_4__VL__WIDTH                                    32
#define ATLC_AESKEYSL_BLE_S0_4__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_BLE_S0_4__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_BLE_S0_4__VL__WRITE(src)  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_BLE_S0_4__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEYSL_BLE_S0_4__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_AESKEYSL_BLE_S0_4__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_BLE_S0_4__TYPE                                   uint32_t
#define ATLC_AESKEYSL_BLE_S0_4__READ                                0xffffffffU
#define ATLC_AESKEYSL_BLE_S0_4__WRITE                               0xffffffffU
#define ATLC_AESKEYSL_BLE_S0_4__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_BLE_S0_4__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_BLE_S0_4_MACRO__ */

/** @} end of aeskeysl_ble_s0_4 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_ble_s0_5 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_ble_s0_5 aeskeysl_ble_s0_5
 * @brief Contains register fields associated with aeskeysl_ble_s0_5. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_BLE_S0_5_MACRO__
#define __ATLC_AESKEYSL_BLE_S0_5_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share0 key [191:160]
 * @{
 */
#define ATLC_AESKEYSL_BLE_S0_5__VL__SHIFT                                     0
#define ATLC_AESKEYSL_BLE_S0_5__VL__WIDTH                                    32
#define ATLC_AESKEYSL_BLE_S0_5__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_BLE_S0_5__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_BLE_S0_5__VL__WRITE(src)  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_BLE_S0_5__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEYSL_BLE_S0_5__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_AESKEYSL_BLE_S0_5__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_BLE_S0_5__TYPE                                   uint32_t
#define ATLC_AESKEYSL_BLE_S0_5__READ                                0xffffffffU
#define ATLC_AESKEYSL_BLE_S0_5__WRITE                               0xffffffffU
#define ATLC_AESKEYSL_BLE_S0_5__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_BLE_S0_5__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_BLE_S0_5_MACRO__ */

/** @} end of aeskeysl_ble_s0_5 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_ble_s0_6 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_ble_s0_6 aeskeysl_ble_s0_6
 * @brief Contains register fields associated with aeskeysl_ble_s0_6. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_BLE_S0_6_MACRO__
#define __ATLC_AESKEYSL_BLE_S0_6_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share0 key [223:192]
 * @{
 */
#define ATLC_AESKEYSL_BLE_S0_6__VL__SHIFT                                     0
#define ATLC_AESKEYSL_BLE_S0_6__VL__WIDTH                                    32
#define ATLC_AESKEYSL_BLE_S0_6__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_BLE_S0_6__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_BLE_S0_6__VL__WRITE(src)  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_BLE_S0_6__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEYSL_BLE_S0_6__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_AESKEYSL_BLE_S0_6__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_BLE_S0_6__TYPE                                   uint32_t
#define ATLC_AESKEYSL_BLE_S0_6__READ                                0xffffffffU
#define ATLC_AESKEYSL_BLE_S0_6__WRITE                               0xffffffffU
#define ATLC_AESKEYSL_BLE_S0_6__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_BLE_S0_6__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_BLE_S0_6_MACRO__ */

/** @} end of aeskeysl_ble_s0_6 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_ble_s0_7 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_ble_s0_7 aeskeysl_ble_s0_7
 * @brief Contains register fields associated with aeskeysl_ble_s0_7. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_BLE_S0_7_MACRO__
#define __ATLC_AESKEYSL_BLE_S0_7_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share0 key [255:224]
 * @{
 */
#define ATLC_AESKEYSL_BLE_S0_7__VL__SHIFT                                     0
#define ATLC_AESKEYSL_BLE_S0_7__VL__WIDTH                                    32
#define ATLC_AESKEYSL_BLE_S0_7__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_BLE_S0_7__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_BLE_S0_7__VL__WRITE(src)  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_BLE_S0_7__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEYSL_BLE_S0_7__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_AESKEYSL_BLE_S0_7__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_BLE_S0_7__TYPE                                   uint32_t
#define ATLC_AESKEYSL_BLE_S0_7__READ                                0xffffffffU
#define ATLC_AESKEYSL_BLE_S0_7__WRITE                               0xffffffffU
#define ATLC_AESKEYSL_BLE_S0_7__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_BLE_S0_7__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_BLE_S0_7_MACRO__ */

/** @} end of aeskeysl_ble_s0_7 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_ble_s1_0 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_ble_s1_0 aeskeysl_ble_s1_0
 * @brief Contains register fields associated with aeskeysl_ble_s1_0. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_BLE_S1_0_MACRO__
#define __ATLC_AESKEYSL_BLE_S1_0_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share1 key [31:0]
 * @{
 */
#define ATLC_AESKEYSL_BLE_S1_0__VL__SHIFT                                     0
#define ATLC_AESKEYSL_BLE_S1_0__VL__WIDTH                                    32
#define ATLC_AESKEYSL_BLE_S1_0__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_BLE_S1_0__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_BLE_S1_0__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_BLE_S1_0__TYPE                                   uint32_t
#define ATLC_AESKEYSL_BLE_S1_0__READ                                0xffffffffU
#define ATLC_AESKEYSL_BLE_S1_0__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_BLE_S1_0__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_BLE_S1_0_MACRO__ */

/** @} end of aeskeysl_ble_s1_0 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_ble_s1_1 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_ble_s1_1 aeskeysl_ble_s1_1
 * @brief Contains register fields associated with aeskeysl_ble_s1_1. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_BLE_S1_1_MACRO__
#define __ATLC_AESKEYSL_BLE_S1_1_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share1 key [63:32]
 * @{
 */
#define ATLC_AESKEYSL_BLE_S1_1__VL__SHIFT                                     0
#define ATLC_AESKEYSL_BLE_S1_1__VL__WIDTH                                    32
#define ATLC_AESKEYSL_BLE_S1_1__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_BLE_S1_1__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_BLE_S1_1__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_BLE_S1_1__TYPE                                   uint32_t
#define ATLC_AESKEYSL_BLE_S1_1__READ                                0xffffffffU
#define ATLC_AESKEYSL_BLE_S1_1__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_BLE_S1_1__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_BLE_S1_1_MACRO__ */

/** @} end of aeskeysl_ble_s1_1 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_ble_s1_2 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_ble_s1_2 aeskeysl_ble_s1_2
 * @brief Contains register fields associated with aeskeysl_ble_s1_2. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_BLE_S1_2_MACRO__
#define __ATLC_AESKEYSL_BLE_S1_2_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share1 key [95:64]
 * @{
 */
#define ATLC_AESKEYSL_BLE_S1_2__VL__SHIFT                                     0
#define ATLC_AESKEYSL_BLE_S1_2__VL__WIDTH                                    32
#define ATLC_AESKEYSL_BLE_S1_2__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_BLE_S1_2__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_BLE_S1_2__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_BLE_S1_2__TYPE                                   uint32_t
#define ATLC_AESKEYSL_BLE_S1_2__READ                                0xffffffffU
#define ATLC_AESKEYSL_BLE_S1_2__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_BLE_S1_2__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_BLE_S1_2_MACRO__ */

/** @} end of aeskeysl_ble_s1_2 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_ble_s1_3 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_ble_s1_3 aeskeysl_ble_s1_3
 * @brief Contains register fields associated with aeskeysl_ble_s1_3. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_BLE_S1_3_MACRO__
#define __ATLC_AESKEYSL_BLE_S1_3_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share1 key [127:96]
 * @{
 */
#define ATLC_AESKEYSL_BLE_S1_3__VL__SHIFT                                     0
#define ATLC_AESKEYSL_BLE_S1_3__VL__WIDTH                                    32
#define ATLC_AESKEYSL_BLE_S1_3__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_BLE_S1_3__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_BLE_S1_3__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_BLE_S1_3__TYPE                                   uint32_t
#define ATLC_AESKEYSL_BLE_S1_3__READ                                0xffffffffU
#define ATLC_AESKEYSL_BLE_S1_3__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_BLE_S1_3__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_BLE_S1_3_MACRO__ */

/** @} end of aeskeysl_ble_s1_3 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_ble_s1_4 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_ble_s1_4 aeskeysl_ble_s1_4
 * @brief Contains register fields associated with aeskeysl_ble_s1_4. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_BLE_S1_4_MACRO__
#define __ATLC_AESKEYSL_BLE_S1_4_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share1 key [159:128]
 * @{
 */
#define ATLC_AESKEYSL_BLE_S1_4__VL__SHIFT                                     0
#define ATLC_AESKEYSL_BLE_S1_4__VL__WIDTH                                    32
#define ATLC_AESKEYSL_BLE_S1_4__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_BLE_S1_4__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_BLE_S1_4__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_BLE_S1_4__TYPE                                   uint32_t
#define ATLC_AESKEYSL_BLE_S1_4__READ                                0xffffffffU
#define ATLC_AESKEYSL_BLE_S1_4__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_BLE_S1_4__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_BLE_S1_4_MACRO__ */

/** @} end of aeskeysl_ble_s1_4 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_ble_s1_5 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_ble_s1_5 aeskeysl_ble_s1_5
 * @brief Contains register fields associated with aeskeysl_ble_s1_5. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_BLE_S1_5_MACRO__
#define __ATLC_AESKEYSL_BLE_S1_5_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share1 key [191:160]
 * @{
 */
#define ATLC_AESKEYSL_BLE_S1_5__VL__SHIFT                                     0
#define ATLC_AESKEYSL_BLE_S1_5__VL__WIDTH                                    32
#define ATLC_AESKEYSL_BLE_S1_5__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_BLE_S1_5__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_BLE_S1_5__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_BLE_S1_5__TYPE                                   uint32_t
#define ATLC_AESKEYSL_BLE_S1_5__READ                                0xffffffffU
#define ATLC_AESKEYSL_BLE_S1_5__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_BLE_S1_5__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_BLE_S1_5_MACRO__ */

/** @} end of aeskeysl_ble_s1_5 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_ble_s1_6 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_ble_s1_6 aeskeysl_ble_s1_6
 * @brief Contains register fields associated with aeskeysl_ble_s1_6. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_BLE_S1_6_MACRO__
#define __ATLC_AESKEYSL_BLE_S1_6_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share1 key [223:192]
 * @{
 */
#define ATLC_AESKEYSL_BLE_S1_6__VL__SHIFT                                     0
#define ATLC_AESKEYSL_BLE_S1_6__VL__WIDTH                                    32
#define ATLC_AESKEYSL_BLE_S1_6__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_BLE_S1_6__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_BLE_S1_6__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_BLE_S1_6__TYPE                                   uint32_t
#define ATLC_AESKEYSL_BLE_S1_6__READ                                0xffffffffU
#define ATLC_AESKEYSL_BLE_S1_6__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_BLE_S1_6__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_BLE_S1_6_MACRO__ */

/** @} end of aeskeysl_ble_s1_6 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_ble_s1_7 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_ble_s1_7 aeskeysl_ble_s1_7
 * @brief Contains register fields associated with aeskeysl_ble_s1_7. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_BLE_S1_7_MACRO__
#define __ATLC_AESKEYSL_BLE_S1_7_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share1 key [255:224]
 * @{
 */
#define ATLC_AESKEYSL_BLE_S1_7__VL__SHIFT                                     0
#define ATLC_AESKEYSL_BLE_S1_7__VL__WIDTH                                    32
#define ATLC_AESKEYSL_BLE_S1_7__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_BLE_S1_7__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_BLE_S1_7__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_BLE_S1_7__TYPE                                   uint32_t
#define ATLC_AESKEYSL_BLE_S1_7__READ                                0xffffffffU
#define ATLC_AESKEYSL_BLE_S1_7__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_BLE_S1_7__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_BLE_S1_7_MACRO__ */

/** @} end of aeskeysl_ble_s1_7 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_154_s0_0 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_154_s0_0 aeskeysl_154_s0_0
 * @brief Contains register fields associated with aeskeysl_154_s0_0. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_154_S0_0_MACRO__
#define __ATLC_AESKEYSL_154_S0_0_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share0 key [31:0]
 * @{
 */
#define ATLC_AESKEYSL_154_S0_0__VL__SHIFT                                     0
#define ATLC_AESKEYSL_154_S0_0__VL__WIDTH                                    32
#define ATLC_AESKEYSL_154_S0_0__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_154_S0_0__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_154_S0_0__VL__WRITE(src)  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_154_S0_0__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEYSL_154_S0_0__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_AESKEYSL_154_S0_0__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_154_S0_0__TYPE                                   uint32_t
#define ATLC_AESKEYSL_154_S0_0__READ                                0xffffffffU
#define ATLC_AESKEYSL_154_S0_0__WRITE                               0xffffffffU
#define ATLC_AESKEYSL_154_S0_0__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_154_S0_0__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_154_S0_0_MACRO__ */

/** @} end of aeskeysl_154_s0_0 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_154_s0_1 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_154_s0_1 aeskeysl_154_s0_1
 * @brief Contains register fields associated with aeskeysl_154_s0_1. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_154_S0_1_MACRO__
#define __ATLC_AESKEYSL_154_S0_1_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share0 key [63:32]
 * @{
 */
#define ATLC_AESKEYSL_154_S0_1__VL__SHIFT                                     0
#define ATLC_AESKEYSL_154_S0_1__VL__WIDTH                                    32
#define ATLC_AESKEYSL_154_S0_1__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_154_S0_1__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_154_S0_1__VL__WRITE(src)  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_154_S0_1__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEYSL_154_S0_1__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_AESKEYSL_154_S0_1__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_154_S0_1__TYPE                                   uint32_t
#define ATLC_AESKEYSL_154_S0_1__READ                                0xffffffffU
#define ATLC_AESKEYSL_154_S0_1__WRITE                               0xffffffffU
#define ATLC_AESKEYSL_154_S0_1__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_154_S0_1__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_154_S0_1_MACRO__ */

/** @} end of aeskeysl_154_s0_1 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_154_s0_2 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_154_s0_2 aeskeysl_154_s0_2
 * @brief Contains register fields associated with aeskeysl_154_s0_2. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_154_S0_2_MACRO__
#define __ATLC_AESKEYSL_154_S0_2_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share0 key [95:64]
 * @{
 */
#define ATLC_AESKEYSL_154_S0_2__VL__SHIFT                                     0
#define ATLC_AESKEYSL_154_S0_2__VL__WIDTH                                    32
#define ATLC_AESKEYSL_154_S0_2__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_154_S0_2__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_154_S0_2__VL__WRITE(src)  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_154_S0_2__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEYSL_154_S0_2__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_AESKEYSL_154_S0_2__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_154_S0_2__TYPE                                   uint32_t
#define ATLC_AESKEYSL_154_S0_2__READ                                0xffffffffU
#define ATLC_AESKEYSL_154_S0_2__WRITE                               0xffffffffU
#define ATLC_AESKEYSL_154_S0_2__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_154_S0_2__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_154_S0_2_MACRO__ */

/** @} end of aeskeysl_154_s0_2 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_154_s0_3 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_154_s0_3 aeskeysl_154_s0_3
 * @brief Contains register fields associated with aeskeysl_154_s0_3. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_154_S0_3_MACRO__
#define __ATLC_AESKEYSL_154_S0_3_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share0 key [127:96]
 * @{
 */
#define ATLC_AESKEYSL_154_S0_3__VL__SHIFT                                     0
#define ATLC_AESKEYSL_154_S0_3__VL__WIDTH                                    32
#define ATLC_AESKEYSL_154_S0_3__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_154_S0_3__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_154_S0_3__VL__WRITE(src)  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_154_S0_3__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEYSL_154_S0_3__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_AESKEYSL_154_S0_3__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_154_S0_3__TYPE                                   uint32_t
#define ATLC_AESKEYSL_154_S0_3__READ                                0xffffffffU
#define ATLC_AESKEYSL_154_S0_3__WRITE                               0xffffffffU
#define ATLC_AESKEYSL_154_S0_3__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_154_S0_3__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_154_S0_3_MACRO__ */

/** @} end of aeskeysl_154_s0_3 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_154_s0_4 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_154_s0_4 aeskeysl_154_s0_4
 * @brief Contains register fields associated with aeskeysl_154_s0_4. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_154_S0_4_MACRO__
#define __ATLC_AESKEYSL_154_S0_4_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share0 key [159:128]
 * @{
 */
#define ATLC_AESKEYSL_154_S0_4__VL__SHIFT                                     0
#define ATLC_AESKEYSL_154_S0_4__VL__WIDTH                                    32
#define ATLC_AESKEYSL_154_S0_4__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_154_S0_4__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_154_S0_4__VL__WRITE(src)  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_154_S0_4__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEYSL_154_S0_4__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_AESKEYSL_154_S0_4__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_154_S0_4__TYPE                                   uint32_t
#define ATLC_AESKEYSL_154_S0_4__READ                                0xffffffffU
#define ATLC_AESKEYSL_154_S0_4__WRITE                               0xffffffffU
#define ATLC_AESKEYSL_154_S0_4__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_154_S0_4__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_154_S0_4_MACRO__ */

/** @} end of aeskeysl_154_s0_4 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_154_s0_5 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_154_s0_5 aeskeysl_154_s0_5
 * @brief Contains register fields associated with aeskeysl_154_s0_5. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_154_S0_5_MACRO__
#define __ATLC_AESKEYSL_154_S0_5_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share0 key [191:160]
 * @{
 */
#define ATLC_AESKEYSL_154_S0_5__VL__SHIFT                                     0
#define ATLC_AESKEYSL_154_S0_5__VL__WIDTH                                    32
#define ATLC_AESKEYSL_154_S0_5__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_154_S0_5__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_154_S0_5__VL__WRITE(src)  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_154_S0_5__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEYSL_154_S0_5__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_AESKEYSL_154_S0_5__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_154_S0_5__TYPE                                   uint32_t
#define ATLC_AESKEYSL_154_S0_5__READ                                0xffffffffU
#define ATLC_AESKEYSL_154_S0_5__WRITE                               0xffffffffU
#define ATLC_AESKEYSL_154_S0_5__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_154_S0_5__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_154_S0_5_MACRO__ */

/** @} end of aeskeysl_154_s0_5 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_154_s0_6 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_154_s0_6 aeskeysl_154_s0_6
 * @brief Contains register fields associated with aeskeysl_154_s0_6. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_154_S0_6_MACRO__
#define __ATLC_AESKEYSL_154_S0_6_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share0 key [223:192]
 * @{
 */
#define ATLC_AESKEYSL_154_S0_6__VL__SHIFT                                     0
#define ATLC_AESKEYSL_154_S0_6__VL__WIDTH                                    32
#define ATLC_AESKEYSL_154_S0_6__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_154_S0_6__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_154_S0_6__VL__WRITE(src)  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_154_S0_6__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEYSL_154_S0_6__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_AESKEYSL_154_S0_6__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_154_S0_6__TYPE                                   uint32_t
#define ATLC_AESKEYSL_154_S0_6__READ                                0xffffffffU
#define ATLC_AESKEYSL_154_S0_6__WRITE                               0xffffffffU
#define ATLC_AESKEYSL_154_S0_6__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_154_S0_6__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_154_S0_6_MACRO__ */

/** @} end of aeskeysl_154_s0_6 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_154_s0_7 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_154_s0_7 aeskeysl_154_s0_7
 * @brief Contains register fields associated with aeskeysl_154_s0_7. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_154_S0_7_MACRO__
#define __ATLC_AESKEYSL_154_S0_7_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share0 key [255:224]
 * @{
 */
#define ATLC_AESKEYSL_154_S0_7__VL__SHIFT                                     0
#define ATLC_AESKEYSL_154_S0_7__VL__WIDTH                                    32
#define ATLC_AESKEYSL_154_S0_7__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_154_S0_7__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_154_S0_7__VL__WRITE(src)  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_154_S0_7__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_AESKEYSL_154_S0_7__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_AESKEYSL_154_S0_7__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_154_S0_7__TYPE                                   uint32_t
#define ATLC_AESKEYSL_154_S0_7__READ                                0xffffffffU
#define ATLC_AESKEYSL_154_S0_7__WRITE                               0xffffffffU
#define ATLC_AESKEYSL_154_S0_7__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_154_S0_7__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_154_S0_7_MACRO__ */

/** @} end of aeskeysl_154_s0_7 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_154_s1_0 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_154_s1_0 aeskeysl_154_s1_0
 * @brief Contains register fields associated with aeskeysl_154_s1_0. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_154_S1_0_MACRO__
#define __ATLC_AESKEYSL_154_S1_0_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share1 key [31:0]
 * @{
 */
#define ATLC_AESKEYSL_154_S1_0__VL__SHIFT                                     0
#define ATLC_AESKEYSL_154_S1_0__VL__WIDTH                                    32
#define ATLC_AESKEYSL_154_S1_0__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_154_S1_0__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_154_S1_0__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_154_S1_0__TYPE                                   uint32_t
#define ATLC_AESKEYSL_154_S1_0__READ                                0xffffffffU
#define ATLC_AESKEYSL_154_S1_0__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_154_S1_0__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_154_S1_0_MACRO__ */

/** @} end of aeskeysl_154_s1_0 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_154_s1_1 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_154_s1_1 aeskeysl_154_s1_1
 * @brief Contains register fields associated with aeskeysl_154_s1_1. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_154_S1_1_MACRO__
#define __ATLC_AESKEYSL_154_S1_1_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share1 key [63:32]
 * @{
 */
#define ATLC_AESKEYSL_154_S1_1__VL__SHIFT                                     0
#define ATLC_AESKEYSL_154_S1_1__VL__WIDTH                                    32
#define ATLC_AESKEYSL_154_S1_1__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_154_S1_1__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_154_S1_1__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_154_S1_1__TYPE                                   uint32_t
#define ATLC_AESKEYSL_154_S1_1__READ                                0xffffffffU
#define ATLC_AESKEYSL_154_S1_1__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_154_S1_1__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_154_S1_1_MACRO__ */

/** @} end of aeskeysl_154_s1_1 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_154_s1_2 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_154_s1_2 aeskeysl_154_s1_2
 * @brief Contains register fields associated with aeskeysl_154_s1_2. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_154_S1_2_MACRO__
#define __ATLC_AESKEYSL_154_S1_2_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share1 key [95:64]
 * @{
 */
#define ATLC_AESKEYSL_154_S1_2__VL__SHIFT                                     0
#define ATLC_AESKEYSL_154_S1_2__VL__WIDTH                                    32
#define ATLC_AESKEYSL_154_S1_2__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_154_S1_2__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_154_S1_2__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_154_S1_2__TYPE                                   uint32_t
#define ATLC_AESKEYSL_154_S1_2__READ                                0xffffffffU
#define ATLC_AESKEYSL_154_S1_2__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_154_S1_2__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_154_S1_2_MACRO__ */

/** @} end of aeskeysl_154_s1_2 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_154_s1_3 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_154_s1_3 aeskeysl_154_s1_3
 * @brief Contains register fields associated with aeskeysl_154_s1_3. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_154_S1_3_MACRO__
#define __ATLC_AESKEYSL_154_S1_3_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share1 key [127:96]
 * @{
 */
#define ATLC_AESKEYSL_154_S1_3__VL__SHIFT                                     0
#define ATLC_AESKEYSL_154_S1_3__VL__WIDTH                                    32
#define ATLC_AESKEYSL_154_S1_3__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_154_S1_3__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_154_S1_3__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_154_S1_3__TYPE                                   uint32_t
#define ATLC_AESKEYSL_154_S1_3__READ                                0xffffffffU
#define ATLC_AESKEYSL_154_S1_3__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_154_S1_3__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_154_S1_3_MACRO__ */

/** @} end of aeskeysl_154_s1_3 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_154_s1_4 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_154_s1_4 aeskeysl_154_s1_4
 * @brief Contains register fields associated with aeskeysl_154_s1_4. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_154_S1_4_MACRO__
#define __ATLC_AESKEYSL_154_S1_4_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share1 key [159:128]
 * @{
 */
#define ATLC_AESKEYSL_154_S1_4__VL__SHIFT                                     0
#define ATLC_AESKEYSL_154_S1_4__VL__WIDTH                                    32
#define ATLC_AESKEYSL_154_S1_4__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_154_S1_4__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_154_S1_4__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_154_S1_4__TYPE                                   uint32_t
#define ATLC_AESKEYSL_154_S1_4__READ                                0xffffffffU
#define ATLC_AESKEYSL_154_S1_4__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_154_S1_4__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_154_S1_4_MACRO__ */

/** @} end of aeskeysl_154_s1_4 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_154_s1_5 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_154_s1_5 aeskeysl_154_s1_5
 * @brief Contains register fields associated with aeskeysl_154_s1_5. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_154_S1_5_MACRO__
#define __ATLC_AESKEYSL_154_S1_5_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share1 key [191:160]
 * @{
 */
#define ATLC_AESKEYSL_154_S1_5__VL__SHIFT                                     0
#define ATLC_AESKEYSL_154_S1_5__VL__WIDTH                                    32
#define ATLC_AESKEYSL_154_S1_5__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_154_S1_5__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_154_S1_5__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_154_S1_5__TYPE                                   uint32_t
#define ATLC_AESKEYSL_154_S1_5__READ                                0xffffffffU
#define ATLC_AESKEYSL_154_S1_5__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_154_S1_5__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_154_S1_5_MACRO__ */

/** @} end of aeskeysl_154_s1_5 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_154_s1_6 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_154_s1_6 aeskeysl_154_s1_6
 * @brief Contains register fields associated with aeskeysl_154_s1_6. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_154_S1_6_MACRO__
#define __ATLC_AESKEYSL_154_S1_6_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share1 key [223:192]
 * @{
 */
#define ATLC_AESKEYSL_154_S1_6__VL__SHIFT                                     0
#define ATLC_AESKEYSL_154_S1_6__VL__WIDTH                                    32
#define ATLC_AESKEYSL_154_S1_6__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_154_S1_6__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_154_S1_6__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_154_S1_6__TYPE                                   uint32_t
#define ATLC_AESKEYSL_154_S1_6__READ                                0xffffffffU
#define ATLC_AESKEYSL_154_S1_6__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_154_S1_6__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_154_S1_6_MACRO__ */

/** @} end of aeskeysl_154_s1_6 */

/* macros for BlueprintGlobalNameSpace::ATLC_aeskeysl_154_s1_7 */
/**
 * @defgroup at_lc_regs_core_aeskeysl_154_s1_7 aeskeysl_154_s1_7
 * @brief Contains register fields associated with aeskeysl_154_s1_7. definitions.
 * @{
 */
#ifndef __ATLC_AESKEYSL_154_S1_7_MACRO__
#define __ATLC_AESKEYSL_154_S1_7_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details AES share1 key [255:224]
 * @{
 */
#define ATLC_AESKEYSL_154_S1_7__VL__SHIFT                                     0
#define ATLC_AESKEYSL_154_S1_7__VL__WIDTH                                    32
#define ATLC_AESKEYSL_154_S1_7__VL__MASK                            0xffffffffU
#define ATLC_AESKEYSL_154_S1_7__VL__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_AESKEYSL_154_S1_7__VL__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_AESKEYSL_154_S1_7__TYPE                                   uint32_t
#define ATLC_AESKEYSL_154_S1_7__READ                                0xffffffffU
#define ATLC_AESKEYSL_154_S1_7__PRESERVED                           0x00000000U
#define ATLC_AESKEYSL_154_S1_7__RESET_VALUE                         0x00000000U

#endif /* __ATLC_AESKEYSL_154_S1_7_MACRO__ */

/** @} end of aeskeysl_154_s1_7 */

/* macros for BlueprintGlobalNameSpace::ATLC_crypt_ctrl0 */
/**
 * @defgroup at_lc_regs_core_crypt_ctrl0 crypt_ctrl0
 * @brief Contains register fields associated with crypt_ctrl0. definitions.
 * @{
 */
#ifndef __ATLC_CRYPT_CTRL0_MACRO__
#define __ATLC_CRYPT_CTRL0_MACRO__

/* macros for field wait_crypt_rdy_cnt */
/**
 * @defgroup at_lc_regs_core_wait_crypt_rdy_cnt_field wait_crypt_rdy_cnt_field
 * @brief macros for field wait_crypt_rdy_cnt
 * @details number of cycles needed by 128 bit crypto check ready status when set to 0.
 * @{
 */
#define ATLC_CRYPT_CTRL0__WAIT_CRYPT_RDY_CNT__SHIFT                           0
#define ATLC_CRYPT_CTRL0__WAIT_CRYPT_RDY_CNT__WIDTH                           8
#define ATLC_CRYPT_CTRL0__WAIT_CRYPT_RDY_CNT__MASK                  0x000000ffU
#define ATLC_CRYPT_CTRL0__WAIT_CRYPT_RDY_CNT__READ(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_CRYPT_CTRL0__WAIT_CRYPT_RDY_CNT__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_CRYPT_CTRL0__WAIT_CRYPT_RDY_CNT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_CRYPT_CTRL0__WAIT_CRYPT_RDY_CNT__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_CRYPT_CTRL0__WAIT_CRYPT_RDY_CNT__RESET_VALUE           0x00000000U
/** @} */

/* macros for field crypt_rdy_stts */
/**
 * @defgroup at_lc_regs_core_crypt_rdy_stts_field crypt_rdy_stts_field
 * @brief macros for field crypt_rdy_stts
 * @details crypto ready status to check against for encryption/descryption completion
 * @{
 */
#define ATLC_CRYPT_CTRL0__CRYPT_RDY_STTS__SHIFT                               8
#define ATLC_CRYPT_CTRL0__CRYPT_RDY_STTS__WIDTH                               8
#define ATLC_CRYPT_CTRL0__CRYPT_RDY_STTS__MASK                      0x0000ff00U
#define ATLC_CRYPT_CTRL0__CRYPT_RDY_STTS__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_CRYPT_CTRL0__CRYPT_RDY_STTS__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_CRYPT_CTRL0__CRYPT_RDY_STTS__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_CRYPT_CTRL0__CRYPT_RDY_STTS__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_CRYPT_CTRL0__CRYPT_RDY_STTS__RESET_VALUE               0x00000019U
/** @} */
#define ATLC_CRYPT_CTRL0__TYPE                                         uint32_t
#define ATLC_CRYPT_CTRL0__READ                                      0x0000ffffU
#define ATLC_CRYPT_CTRL0__WRITE                                     0x0000ffffU
#define ATLC_CRYPT_CTRL0__PRESERVED                                 0x00000000U
#define ATLC_CRYPT_CTRL0__RESET_VALUE                               0x00001900U

#endif /* __ATLC_CRYPT_CTRL0_MACRO__ */

/** @} end of crypt_ctrl0 */

/* macros for BlueprintGlobalNameSpace::ATLC_crypt_iv_ble_0 */
/**
 * @defgroup at_lc_regs_core_crypt_iv_ble_0 crypt_iv_ble_0
 * @brief Contains register fields associated with crypt_iv_ble_0. definitions.
 * @{
 */
#ifndef __ATLC_CRYPT_IV_BLE_0_MACRO__
#define __ATLC_CRYPT_IV_BLE_0_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details iv [31:0]
 * @{
 */
#define ATLC_CRYPT_IV_BLE_0__VL__SHIFT                                        0
#define ATLC_CRYPT_IV_BLE_0__VL__WIDTH                                       32
#define ATLC_CRYPT_IV_BLE_0__VL__MASK                               0xffffffffU
#define ATLC_CRYPT_IV_BLE_0__VL__READ(src)      ((uint32_t)(src) & 0xffffffffU)
#define ATLC_CRYPT_IV_BLE_0__VL__WRITE(src)     ((uint32_t)(src) & 0xffffffffU)
#define ATLC_CRYPT_IV_BLE_0__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_CRYPT_IV_BLE_0__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_CRYPT_IV_BLE_0__VL__RESET_VALUE                        0x00000000U
/** @} */
#define ATLC_CRYPT_IV_BLE_0__TYPE                                      uint32_t
#define ATLC_CRYPT_IV_BLE_0__READ                                   0xffffffffU
#define ATLC_CRYPT_IV_BLE_0__WRITE                                  0xffffffffU
#define ATLC_CRYPT_IV_BLE_0__PRESERVED                              0x00000000U
#define ATLC_CRYPT_IV_BLE_0__RESET_VALUE                            0x00000000U

#endif /* __ATLC_CRYPT_IV_BLE_0_MACRO__ */

/** @} end of crypt_iv_ble_0 */

/* macros for BlueprintGlobalNameSpace::ATLC_crypt_iv_ble_1 */
/**
 * @defgroup at_lc_regs_core_crypt_iv_ble_1 crypt_iv_ble_1
 * @brief Contains register fields associated with crypt_iv_ble_1. definitions.
 * @{
 */
#ifndef __ATLC_CRYPT_IV_BLE_1_MACRO__
#define __ATLC_CRYPT_IV_BLE_1_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details iv [63:32]
 * @{
 */
#define ATLC_CRYPT_IV_BLE_1__VL__SHIFT                                        0
#define ATLC_CRYPT_IV_BLE_1__VL__WIDTH                                       32
#define ATLC_CRYPT_IV_BLE_1__VL__MASK                               0xffffffffU
#define ATLC_CRYPT_IV_BLE_1__VL__READ(src)      ((uint32_t)(src) & 0xffffffffU)
#define ATLC_CRYPT_IV_BLE_1__VL__WRITE(src)     ((uint32_t)(src) & 0xffffffffU)
#define ATLC_CRYPT_IV_BLE_1__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_CRYPT_IV_BLE_1__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_CRYPT_IV_BLE_1__VL__RESET_VALUE                        0x00000000U
/** @} */
#define ATLC_CRYPT_IV_BLE_1__TYPE                                      uint32_t
#define ATLC_CRYPT_IV_BLE_1__READ                                   0xffffffffU
#define ATLC_CRYPT_IV_BLE_1__WRITE                                  0xffffffffU
#define ATLC_CRYPT_IV_BLE_1__PRESERVED                              0x00000000U
#define ATLC_CRYPT_IV_BLE_1__RESET_VALUE                            0x00000000U

#endif /* __ATLC_CRYPT_IV_BLE_1_MACRO__ */

/** @} end of crypt_iv_ble_1 */

/* macros for BlueprintGlobalNameSpace::ATLC_crypt_ctrl_ble */
/**
 * @defgroup at_lc_regs_core_crypt_ctrl_ble crypt_ctrl_ble
 * @brief Contains register fields associated with crypt_ctrl_ble. definitions.
 * @{
 */
#ifndef __ATLC_CRYPT_CTRL_BLE_MACRO__
#define __ATLC_CRYPT_CTRL_BLE_MACRO__

/* macros for field drctn_bt */
/**
 * @defgroup at_lc_regs_core_drctn_bt_field drctn_bt_field
 * @brief macros for field drctn_bt
 * @details directional bit
 * @{
 */
#define ATLC_CRYPT_CTRL_BLE__DRCTN_BT__SHIFT                                  0
#define ATLC_CRYPT_CTRL_BLE__DRCTN_BT__WIDTH                                  1
#define ATLC_CRYPT_CTRL_BLE__DRCTN_BT__MASK                         0x00000001U
#define ATLC_CRYPT_CTRL_BLE__DRCTN_BT__READ(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_CRYPT_CTRL_BLE__DRCTN_BT__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_CRYPT_CTRL_BLE__DRCTN_BT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_CRYPT_CTRL_BLE__DRCTN_BT__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_CRYPT_CTRL_BLE__DRCTN_BT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_CRYPT_CTRL_BLE__DRCTN_BT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_CRYPT_CTRL_BLE__DRCTN_BT__RESET_VALUE                  0x00000000U
/** @} */

/* macros for field xor_aa */
/**
 * @defgroup at_lc_regs_core_xor_aa_field xor_aa_field
 * @brief macros for field xor_aa
 * @details xor AA of CIS/BIS into IV
 * @{
 */
#define ATLC_CRYPT_CTRL_BLE__XOR_AA__SHIFT                                    1
#define ATLC_CRYPT_CTRL_BLE__XOR_AA__WIDTH                                    1
#define ATLC_CRYPT_CTRL_BLE__XOR_AA__MASK                           0x00000002U
#define ATLC_CRYPT_CTRL_BLE__XOR_AA__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000002U) >> 1)
#define ATLC_CRYPT_CTRL_BLE__XOR_AA__WRITE(src) \
                    (((uint32_t)(src)\
                    << 1) & 0x00000002U)
#define ATLC_CRYPT_CTRL_BLE__XOR_AA__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | (((uint32_t)(src) <<\
                    1) & 0x00000002U)
#define ATLC_CRYPT_CTRL_BLE__XOR_AA__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 1) & ~0x00000002U)))
#define ATLC_CRYPT_CTRL_BLE__XOR_AA__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(1) << 1)
#define ATLC_CRYPT_CTRL_BLE__XOR_AA__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(0) << 1)
#define ATLC_CRYPT_CTRL_BLE__XOR_AA__RESET_VALUE                    0x00000000U
/** @} */
#define ATLC_CRYPT_CTRL_BLE__TYPE                                      uint32_t
#define ATLC_CRYPT_CTRL_BLE__READ                                   0x00000003U
#define ATLC_CRYPT_CTRL_BLE__WRITE                                  0x00000003U
#define ATLC_CRYPT_CTRL_BLE__PRESERVED                              0x00000000U
#define ATLC_CRYPT_CTRL_BLE__RESET_VALUE                            0x00000000U

#endif /* __ATLC_CRYPT_CTRL_BLE_MACRO__ */

/** @} end of crypt_ctrl_ble */

/* macros for BlueprintGlobalNameSpace::ATLC_crypt_pktcntr_ble_0 */
/**
 * @defgroup at_lc_regs_core_crypt_pktcntr_ble_0 crypt_pktcntr_ble_0
 * @brief Contains register fields associated with crypt_pktcntr_ble_0. definitions.
 * @{
 */
#ifndef __ATLC_CRYPT_PKTCNTR_BLE_0_MACRO__
#define __ATLC_CRYPT_PKTCNTR_BLE_0_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details packet cntr [31:0]
 * @{
 */
#define ATLC_CRYPT_PKTCNTR_BLE_0__VL__SHIFT                                   0
#define ATLC_CRYPT_PKTCNTR_BLE_0__VL__WIDTH                                  32
#define ATLC_CRYPT_PKTCNTR_BLE_0__VL__MASK                          0xffffffffU
#define ATLC_CRYPT_PKTCNTR_BLE_0__VL__READ(src) ((uint32_t)(src) & 0xffffffffU)
#define ATLC_CRYPT_PKTCNTR_BLE_0__VL__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0xffffffffU)
#define ATLC_CRYPT_PKTCNTR_BLE_0__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_CRYPT_PKTCNTR_BLE_0__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_CRYPT_PKTCNTR_BLE_0__VL__RESET_VALUE                   0x00000000U
/** @} */
#define ATLC_CRYPT_PKTCNTR_BLE_0__TYPE                                 uint32_t
#define ATLC_CRYPT_PKTCNTR_BLE_0__READ                              0xffffffffU
#define ATLC_CRYPT_PKTCNTR_BLE_0__WRITE                             0xffffffffU
#define ATLC_CRYPT_PKTCNTR_BLE_0__PRESERVED                         0x00000000U
#define ATLC_CRYPT_PKTCNTR_BLE_0__RESET_VALUE                       0x00000000U

#endif /* __ATLC_CRYPT_PKTCNTR_BLE_0_MACRO__ */

/** @} end of crypt_pktcntr_ble_0 */

/* macros for BlueprintGlobalNameSpace::ATLC_crypt_pktcntr_ble_1 */
/**
 * @defgroup at_lc_regs_core_crypt_pktcntr_ble_1 crypt_pktcntr_ble_1
 * @brief Contains register fields associated with crypt_pktcntr_ble_1. definitions.
 * @{
 */
#ifndef __ATLC_CRYPT_PKTCNTR_BLE_1_MACRO__
#define __ATLC_CRYPT_PKTCNTR_BLE_1_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details packet cntr [38:32]
 * @{
 */
#define ATLC_CRYPT_PKTCNTR_BLE_1__VL__SHIFT                                   0
#define ATLC_CRYPT_PKTCNTR_BLE_1__VL__WIDTH                                   7
#define ATLC_CRYPT_PKTCNTR_BLE_1__VL__MASK                          0x0000007fU
#define ATLC_CRYPT_PKTCNTR_BLE_1__VL__READ(src) ((uint32_t)(src) & 0x0000007fU)
#define ATLC_CRYPT_PKTCNTR_BLE_1__VL__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x0000007fU)
#define ATLC_CRYPT_PKTCNTR_BLE_1__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000007fU) | ((uint32_t)(src) &\
                    0x0000007fU)
#define ATLC_CRYPT_PKTCNTR_BLE_1__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x0000007fU)))
#define ATLC_CRYPT_PKTCNTR_BLE_1__VL__RESET_VALUE                   0x00000000U
/** @} */
#define ATLC_CRYPT_PKTCNTR_BLE_1__TYPE                                 uint32_t
#define ATLC_CRYPT_PKTCNTR_BLE_1__READ                              0x0000007fU
#define ATLC_CRYPT_PKTCNTR_BLE_1__WRITE                             0x0000007fU
#define ATLC_CRYPT_PKTCNTR_BLE_1__PRESERVED                         0x00000000U
#define ATLC_CRYPT_PKTCNTR_BLE_1__RESET_VALUE                       0x00000000U

#endif /* __ATLC_CRYPT_PKTCNTR_BLE_1_MACRO__ */

/** @} end of crypt_pktcntr_ble_1 */

/* macros for BlueprintGlobalNameSpace::ATLC_zb_rf4ce_nonce_0 */
/**
 * @defgroup at_lc_regs_core_zb_rf4ce_nonce_0 zb_rf4ce_nonce_0
 * @brief Contains register fields associated with zb_rf4ce_nonce_0. definitions.
 * @{
 */
#ifndef __ATLC_ZB_RF4CE_NONCE_0_MACRO__
#define __ATLC_ZB_RF4CE_NONCE_0_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details 4th byte nonce, 3rd byte nonce, 2nd byte nonce, 1st byte nonce
 * @{
 */
#define ATLC_ZB_RF4CE_NONCE_0__VL__SHIFT                                      0
#define ATLC_ZB_RF4CE_NONCE_0__VL__WIDTH                                     32
#define ATLC_ZB_RF4CE_NONCE_0__VL__MASK                             0xffffffffU
#define ATLC_ZB_RF4CE_NONCE_0__VL__READ(src)    ((uint32_t)(src) & 0xffffffffU)
#define ATLC_ZB_RF4CE_NONCE_0__VL__WRITE(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_ZB_RF4CE_NONCE_0__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_ZB_RF4CE_NONCE_0__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_ZB_RF4CE_NONCE_0__VL__RESET_VALUE                      0x00000000U
/** @} */
#define ATLC_ZB_RF4CE_NONCE_0__TYPE                                    uint32_t
#define ATLC_ZB_RF4CE_NONCE_0__READ                                 0xffffffffU
#define ATLC_ZB_RF4CE_NONCE_0__WRITE                                0xffffffffU
#define ATLC_ZB_RF4CE_NONCE_0__PRESERVED                            0x00000000U
#define ATLC_ZB_RF4CE_NONCE_0__RESET_VALUE                          0x00000000U

#endif /* __ATLC_ZB_RF4CE_NONCE_0_MACRO__ */

/** @} end of zb_rf4ce_nonce_0 */

/* macros for BlueprintGlobalNameSpace::ATLC_zb_rf4ce_nonce_1 */
/**
 * @defgroup at_lc_regs_core_zb_rf4ce_nonce_1 zb_rf4ce_nonce_1
 * @brief Contains register fields associated with zb_rf4ce_nonce_1. definitions.
 * @{
 */
#ifndef __ATLC_ZB_RF4CE_NONCE_1_MACRO__
#define __ATLC_ZB_RF4CE_NONCE_1_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details 8th byte nonce, 7th byte nonce, 6th byte nonce, 5h byte nonce
 * @{
 */
#define ATLC_ZB_RF4CE_NONCE_1__VL__SHIFT                                      0
#define ATLC_ZB_RF4CE_NONCE_1__VL__WIDTH                                     32
#define ATLC_ZB_RF4CE_NONCE_1__VL__MASK                             0xffffffffU
#define ATLC_ZB_RF4CE_NONCE_1__VL__READ(src)    ((uint32_t)(src) & 0xffffffffU)
#define ATLC_ZB_RF4CE_NONCE_1__VL__WRITE(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_ZB_RF4CE_NONCE_1__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_ZB_RF4CE_NONCE_1__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_ZB_RF4CE_NONCE_1__VL__RESET_VALUE                      0x00000000U
/** @} */
#define ATLC_ZB_RF4CE_NONCE_1__TYPE                                    uint32_t
#define ATLC_ZB_RF4CE_NONCE_1__READ                                 0xffffffffU
#define ATLC_ZB_RF4CE_NONCE_1__WRITE                                0xffffffffU
#define ATLC_ZB_RF4CE_NONCE_1__PRESERVED                            0x00000000U
#define ATLC_ZB_RF4CE_NONCE_1__RESET_VALUE                          0x00000000U

#endif /* __ATLC_ZB_RF4CE_NONCE_1_MACRO__ */

/** @} end of zb_rf4ce_nonce_1 */

/* macros for BlueprintGlobalNameSpace::ATLC_zb_rf4ce_nonce_2 */
/**
 * @defgroup at_lc_regs_core_zb_rf4ce_nonce_2 zb_rf4ce_nonce_2
 * @brief Contains register fields associated with zb_rf4ce_nonce_2. definitions.
 * @{
 */
#ifndef __ATLC_ZB_RF4CE_NONCE_2_MACRO__
#define __ATLC_ZB_RF4CE_NONCE_2_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details 12th byte nonce, 11th byte nonce, 10th byte nonce, 9th byte nonce
 * @{
 */
#define ATLC_ZB_RF4CE_NONCE_2__VL__SHIFT                                      0
#define ATLC_ZB_RF4CE_NONCE_2__VL__WIDTH                                     32
#define ATLC_ZB_RF4CE_NONCE_2__VL__MASK                             0xffffffffU
#define ATLC_ZB_RF4CE_NONCE_2__VL__READ(src)    ((uint32_t)(src) & 0xffffffffU)
#define ATLC_ZB_RF4CE_NONCE_2__VL__WRITE(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_ZB_RF4CE_NONCE_2__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_ZB_RF4CE_NONCE_2__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_ZB_RF4CE_NONCE_2__VL__RESET_VALUE                      0x00000000U
/** @} */
#define ATLC_ZB_RF4CE_NONCE_2__TYPE                                    uint32_t
#define ATLC_ZB_RF4CE_NONCE_2__READ                                 0xffffffffU
#define ATLC_ZB_RF4CE_NONCE_2__WRITE                                0xffffffffU
#define ATLC_ZB_RF4CE_NONCE_2__PRESERVED                            0x00000000U
#define ATLC_ZB_RF4CE_NONCE_2__RESET_VALUE                          0x00000000U

#endif /* __ATLC_ZB_RF4CE_NONCE_2_MACRO__ */

/** @} end of zb_rf4ce_nonce_2 */

/* macros for BlueprintGlobalNameSpace::ATLC_zb_rf4ce_nonce_3 */
/**
 * @defgroup at_lc_regs_core_zb_rf4ce_nonce_3 zb_rf4ce_nonce_3
 * @brief Contains register fields associated with zb_rf4ce_nonce_3. definitions.
 * @{
 */
#ifndef __ATLC_ZB_RF4CE_NONCE_3_MACRO__
#define __ATLC_ZB_RF4CE_NONCE_3_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details flag byte, 13th byte nonce
 * @{
 */
#define ATLC_ZB_RF4CE_NONCE_3__VL__SHIFT                                      0
#define ATLC_ZB_RF4CE_NONCE_3__VL__WIDTH                                     16
#define ATLC_ZB_RF4CE_NONCE_3__VL__MASK                             0x0000ffffU
#define ATLC_ZB_RF4CE_NONCE_3__VL__READ(src)    ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_ZB_RF4CE_NONCE_3__VL__WRITE(src)   ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_ZB_RF4CE_NONCE_3__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_ZB_RF4CE_NONCE_3__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x0000ffffU)))
#define ATLC_ZB_RF4CE_NONCE_3__VL__RESET_VALUE                      0x00000000U
/** @} */
#define ATLC_ZB_RF4CE_NONCE_3__TYPE                                    uint32_t
#define ATLC_ZB_RF4CE_NONCE_3__READ                                 0x0000ffffU
#define ATLC_ZB_RF4CE_NONCE_3__WRITE                                0x0000ffffU
#define ATLC_ZB_RF4CE_NONCE_3__PRESERVED                            0x00000000U
#define ATLC_ZB_RF4CE_NONCE_3__RESET_VALUE                          0x00000000U

#endif /* __ATLC_ZB_RF4CE_NONCE_3_MACRO__ */

/** @} end of zb_rf4ce_nonce_3 */

/* macros for BlueprintGlobalNameSpace::ATLC_rf4ce_speB1_0 */
/**
 * @defgroup at_lc_regs_core_rf4ce_speB1_0 rf4ce_speB1_0
 * @brief Contains register fields associated with rf4ce_speB1_0. definitions.
 * @{
 */
#ifndef __ATLC_RF4CE_SPEB1_0_MACRO__
#define __ATLC_RF4CE_SPEB1_0_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details 9th byte of B1 block, 8th byte of B1 block, 7th byte of B1 block, 6th byte of B1 block
 * @{
 */
#define ATLC_RF4CE_SPEB1_0__VL__SHIFT                                         0
#define ATLC_RF4CE_SPEB1_0__VL__WIDTH                                        32
#define ATLC_RF4CE_SPEB1_0__VL__MASK                                0xffffffffU
#define ATLC_RF4CE_SPEB1_0__VL__READ(src)       ((uint32_t)(src) & 0xffffffffU)
#define ATLC_RF4CE_SPEB1_0__VL__WRITE(src)      ((uint32_t)(src) & 0xffffffffU)
#define ATLC_RF4CE_SPEB1_0__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_RF4CE_SPEB1_0__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_RF4CE_SPEB1_0__VL__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_RF4CE_SPEB1_0__TYPE                                       uint32_t
#define ATLC_RF4CE_SPEB1_0__READ                                    0xffffffffU
#define ATLC_RF4CE_SPEB1_0__WRITE                                   0xffffffffU
#define ATLC_RF4CE_SPEB1_0__PRESERVED                               0x00000000U
#define ATLC_RF4CE_SPEB1_0__RESET_VALUE                             0x00000000U

#endif /* __ATLC_RF4CE_SPEB1_0_MACRO__ */

/** @} end of rf4ce_speB1_0 */

/* macros for BlueprintGlobalNameSpace::ATLC_rf4ce_speB1_1 */
/**
 * @defgroup at_lc_regs_core_rf4ce_speB1_1 rf4ce_speB1_1
 * @brief Contains register fields associated with rf4ce_speB1_1. definitions.
 * @{
 */
#ifndef __ATLC_RF4CE_SPEB1_1_MACRO__
#define __ATLC_RF4CE_SPEB1_1_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details 13th byte of B1 block, 12th byte of B1 block, 11th byte of B1 block, 10th byte of B1 block
 * @{
 */
#define ATLC_RF4CE_SPEB1_1__VL__SHIFT                                         0
#define ATLC_RF4CE_SPEB1_1__VL__WIDTH                                        32
#define ATLC_RF4CE_SPEB1_1__VL__MASK                                0xffffffffU
#define ATLC_RF4CE_SPEB1_1__VL__READ(src)       ((uint32_t)(src) & 0xffffffffU)
#define ATLC_RF4CE_SPEB1_1__VL__WRITE(src)      ((uint32_t)(src) & 0xffffffffU)
#define ATLC_RF4CE_SPEB1_1__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_RF4CE_SPEB1_1__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_RF4CE_SPEB1_1__VL__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_RF4CE_SPEB1_1__TYPE                                       uint32_t
#define ATLC_RF4CE_SPEB1_1__READ                                    0xffffffffU
#define ATLC_RF4CE_SPEB1_1__WRITE                                   0xffffffffU
#define ATLC_RF4CE_SPEB1_1__PRESERVED                               0x00000000U
#define ATLC_RF4CE_SPEB1_1__RESET_VALUE                             0x00000000U

#endif /* __ATLC_RF4CE_SPEB1_1_MACRO__ */

/** @} end of rf4ce_speB1_1 */

/* macros for BlueprintGlobalNameSpace::ATLC_dft */
/**
 * @defgroup at_lc_regs_core_dft dft
 * @brief dft related controls definitions.
 * @{
 */
#ifndef __ATLC_DFT_MACRO__
#define __ATLC_DFT_MACRO__

/* macros for field frc_sample */
/**
 * @defgroup at_lc_regs_core_frc_sample_field frc_sample_field
 * @brief macros for field frc_sample
 * @details connect to at_sync_edet_frc_sample.a to give controllability
 * @{
 */
#define ATLC_DFT__FRC_SAMPLE__SHIFT                                           0
#define ATLC_DFT__FRC_SAMPLE__WIDTH                                           1
#define ATLC_DFT__FRC_SAMPLE__MASK                                  0x00000001U
#define ATLC_DFT__FRC_SAMPLE__READ(src)         ((uint32_t)(src) & 0x00000001U)
#define ATLC_DFT__FRC_SAMPLE__WRITE(src)        ((uint32_t)(src) & 0x00000001U)
#define ATLC_DFT__FRC_SAMPLE__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_DFT__FRC_SAMPLE__VERIFY(src) (!(((uint32_t)(src) & ~0x00000001U)))
#define ATLC_DFT__FRC_SAMPLE__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_DFT__FRC_SAMPLE__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_DFT__FRC_SAMPLE__RESET_VALUE                           0x00000000U
/** @} */
#define ATLC_DFT__TYPE                                                 uint32_t
#define ATLC_DFT__READ                                              0x00000001U
#define ATLC_DFT__WRITE                                             0x00000001U
#define ATLC_DFT__PRESERVED                                         0x00000000U
#define ATLC_DFT__RESET_VALUE                                       0x00000000U

#endif /* __ATLC_DFT_MACRO__ */

/** @} end of dft */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_ble_ctrl8 */
/**
 * @defgroup at_lc_regs_core_lc_ble_ctrl8 lc_ble_ctrl8
 * @brief Contains register fields associated with lc_ble_ctrl8. definitions.
 * @{
 */
#ifndef __ATLC_LC_BLE_CTRL8_MACRO__
#define __ATLC_LC_BLE_CTRL8_MACRO__

/* macros for field rx_ed_mns_n */
/**
 * @defgroup at_lc_regs_core_rx_ed_mns_n_field rx_ed_mns_n_field
 * @brief macros for field rx_ed_mns_n
 * @details generate an interrupt this number of us before rx end for cs tone
 * @{
 */
#define ATLC_LC_BLE_CTRL8__RX_ED_MNS_N__SHIFT                                 0
#define ATLC_LC_BLE_CTRL8__RX_ED_MNS_N__WIDTH                                 9
#define ATLC_LC_BLE_CTRL8__RX_ED_MNS_N__MASK                        0x000001ffU
#define ATLC_LC_BLE_CTRL8__RX_ED_MNS_N__READ(src) \
                    ((uint32_t)(src)\
                    & 0x000001ffU)
#define ATLC_LC_BLE_CTRL8__RX_ED_MNS_N__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x000001ffU)
#define ATLC_LC_BLE_CTRL8__RX_ED_MNS_N__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000001ffU) | ((uint32_t)(src) &\
                    0x000001ffU)
#define ATLC_LC_BLE_CTRL8__RX_ED_MNS_N__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000001ffU)))
#define ATLC_LC_BLE_CTRL8__RX_ED_MNS_N__RESET_VALUE                 0x00000010U
/** @} */

/* macros for field rx_ed_mns_n_en */
/**
 * @defgroup at_lc_regs_core_rx_ed_mns_n_en_field rx_ed_mns_n_en_field
 * @brief macros for field rx_ed_mns_n_en
 * @details enable bit of rx_ed_mns_n interrupt generation for cs tone
 * @{
 */
#define ATLC_LC_BLE_CTRL8__RX_ED_MNS_N_EN__SHIFT                              9
#define ATLC_LC_BLE_CTRL8__RX_ED_MNS_N_EN__WIDTH                              1
#define ATLC_LC_BLE_CTRL8__RX_ED_MNS_N_EN__MASK                     0x00000200U
#define ATLC_LC_BLE_CTRL8__RX_ED_MNS_N_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000200U) >> 9)
#define ATLC_LC_BLE_CTRL8__RX_ED_MNS_N_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 9) & 0x00000200U)
#define ATLC_LC_BLE_CTRL8__RX_ED_MNS_N_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000200U) | (((uint32_t)(src) <<\
                    9) & 0x00000200U)
#define ATLC_LC_BLE_CTRL8__RX_ED_MNS_N_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 9) & ~0x00000200U)))
#define ATLC_LC_BLE_CTRL8__RX_ED_MNS_N_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000200U) | ((uint32_t)(1) << 9)
#define ATLC_LC_BLE_CTRL8__RX_ED_MNS_N_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000200U) | ((uint32_t)(0) << 9)
#define ATLC_LC_BLE_CTRL8__RX_ED_MNS_N_EN__RESET_VALUE              0x00000000U
/** @} */

/* macros for field tx_ed_mns_n */
/**
 * @defgroup at_lc_regs_core_tx_ed_mns_n_field tx_ed_mns_n_field
 * @brief macros for field tx_ed_mns_n
 * @details generate an interrupt this number of us before tx end for cs tone
 * @{
 */
#define ATLC_LC_BLE_CTRL8__TX_ED_MNS_N__SHIFT                                10
#define ATLC_LC_BLE_CTRL8__TX_ED_MNS_N__WIDTH                                 9
#define ATLC_LC_BLE_CTRL8__TX_ED_MNS_N__MASK                        0x0007fc00U
#define ATLC_LC_BLE_CTRL8__TX_ED_MNS_N__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0007fc00U) >> 10)
#define ATLC_LC_BLE_CTRL8__TX_ED_MNS_N__WRITE(src) \
                    (((uint32_t)(src)\
                    << 10) & 0x0007fc00U)
#define ATLC_LC_BLE_CTRL8__TX_ED_MNS_N__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0007fc00U) | (((uint32_t)(src) <<\
                    10) & 0x0007fc00U)
#define ATLC_LC_BLE_CTRL8__TX_ED_MNS_N__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 10) & ~0x0007fc00U)))
#define ATLC_LC_BLE_CTRL8__TX_ED_MNS_N__RESET_VALUE                 0x0000000eU
/** @} */

/* macros for field tx_ed_mns_n_en */
/**
 * @defgroup at_lc_regs_core_tx_ed_mns_n_en_field tx_ed_mns_n_en_field
 * @brief macros for field tx_ed_mns_n_en
 * @details enable bit of tx_ed_mns_n interrupt generation for cs tone
 * @{
 */
#define ATLC_LC_BLE_CTRL8__TX_ED_MNS_N_EN__SHIFT                             19
#define ATLC_LC_BLE_CTRL8__TX_ED_MNS_N_EN__WIDTH                              1
#define ATLC_LC_BLE_CTRL8__TX_ED_MNS_N_EN__MASK                     0x00080000U
#define ATLC_LC_BLE_CTRL8__TX_ED_MNS_N_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00080000U) >> 19)
#define ATLC_LC_BLE_CTRL8__TX_ED_MNS_N_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 19) & 0x00080000U)
#define ATLC_LC_BLE_CTRL8__TX_ED_MNS_N_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00080000U) | (((uint32_t)(src) <<\
                    19) & 0x00080000U)
#define ATLC_LC_BLE_CTRL8__TX_ED_MNS_N_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 19) & ~0x00080000U)))
#define ATLC_LC_BLE_CTRL8__TX_ED_MNS_N_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00080000U) | ((uint32_t)(1) << 19)
#define ATLC_LC_BLE_CTRL8__TX_ED_MNS_N_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00080000U) | ((uint32_t)(0) << 19)
#define ATLC_LC_BLE_CTRL8__TX_ED_MNS_N_EN__RESET_VALUE              0x00000000U
/** @} */
#define ATLC_LC_BLE_CTRL8__TYPE                                        uint32_t
#define ATLC_LC_BLE_CTRL8__READ                                     0x000fffffU
#define ATLC_LC_BLE_CTRL8__WRITE                                    0x000fffffU
#define ATLC_LC_BLE_CTRL8__PRESERVED                                0x00000000U
#define ATLC_LC_BLE_CTRL8__RESET_VALUE                              0x00003810U

#endif /* __ATLC_LC_BLE_CTRL8_MACRO__ */

/** @} end of lc_ble_ctrl8 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_fmac_ctrl8 */
/**
 * @defgroup at_lc_regs_core_lc_fmac_ctrl8 lc_fmac_ctrl8
 * @brief Contains register fields associated with lc_fmac_ctrl8. definitions.
 * @{
 */
#ifndef __ATLC_LC_FMAC_CTRL8_MACRO__
#define __ATLC_LC_FMAC_CTRL8_MACRO__

/* macros for field addr_no_mtch_dscrd */
/**
 * @defgroup at_lc_regs_core_addr_no_mtch_dscrd_field addr_no_mtch_dscrd_field
 * @brief macros for field addr_no_mtch_dscrd
 * @details discard packets without address match
 * @{
 */
#define ATLC_LC_FMAC_CTRL8__ADDR_NO_MTCH_DSCRD__SHIFT                         0
#define ATLC_LC_FMAC_CTRL8__ADDR_NO_MTCH_DSCRD__WIDTH                         1
#define ATLC_LC_FMAC_CTRL8__ADDR_NO_MTCH_DSCRD__MASK                0x00000001U
#define ATLC_LC_FMAC_CTRL8__ADDR_NO_MTCH_DSCRD__READ(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_LC_FMAC_CTRL8__ADDR_NO_MTCH_DSCRD__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x00000001U)
#define ATLC_LC_FMAC_CTRL8__ADDR_NO_MTCH_DSCRD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_LC_FMAC_CTRL8__ADDR_NO_MTCH_DSCRD__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_LC_FMAC_CTRL8__ADDR_NO_MTCH_DSCRD__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_FMAC_CTRL8__ADDR_NO_MTCH_DSCRD__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_FMAC_CTRL8__ADDR_NO_MTCH_DSCRD__RESET_VALUE         0x00000001U
/** @} */

/* macros for field hdr2_b0_is_ack */
/**
 * @defgroup at_lc_regs_core_hdr2_b0_is_ack_field hdr2_b0_is_ack_field
 * @brief macros for field hdr2_b0_is_ack
 * @details 1 => header2[0] indicate ack, 0 => header2[1] indicates noack
 * @{
 */
#define ATLC_LC_FMAC_CTRL8__HDR2_B0_IS_ACK__SHIFT                             1
#define ATLC_LC_FMAC_CTRL8__HDR2_B0_IS_ACK__WIDTH                             1
#define ATLC_LC_FMAC_CTRL8__HDR2_B0_IS_ACK__MASK                    0x00000002U
#define ATLC_LC_FMAC_CTRL8__HDR2_B0_IS_ACK__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000002U) >> 1)
#define ATLC_LC_FMAC_CTRL8__HDR2_B0_IS_ACK__WRITE(src) \
                    (((uint32_t)(src)\
                    << 1) & 0x00000002U)
#define ATLC_LC_FMAC_CTRL8__HDR2_B0_IS_ACK__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | (((uint32_t)(src) <<\
                    1) & 0x00000002U)
#define ATLC_LC_FMAC_CTRL8__HDR2_B0_IS_ACK__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 1) & ~0x00000002U)))
#define ATLC_LC_FMAC_CTRL8__HDR2_B0_IS_ACK__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(1) << 1)
#define ATLC_LC_FMAC_CTRL8__HDR2_B0_IS_ACK__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(0) << 1)
#define ATLC_LC_FMAC_CTRL8__HDR2_B0_IS_ACK__RESET_VALUE             0x00000001U
/** @} */

/* macros for field sngl_nd */
/**
 * @defgroup at_lc_regs_core_sngl_nd_field sngl_nd_field
 * @brief macros for field sngl_nd
 * @details 1 => single node 0 is used for all node addresses
 * @{
 */
#define ATLC_LC_FMAC_CTRL8__SNGL_ND__SHIFT                                    2
#define ATLC_LC_FMAC_CTRL8__SNGL_ND__WIDTH                                    1
#define ATLC_LC_FMAC_CTRL8__SNGL_ND__MASK                           0x00000004U
#define ATLC_LC_FMAC_CTRL8__SNGL_ND__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000004U) >> 2)
#define ATLC_LC_FMAC_CTRL8__SNGL_ND__WRITE(src) \
                    (((uint32_t)(src)\
                    << 2) & 0x00000004U)
#define ATLC_LC_FMAC_CTRL8__SNGL_ND__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | (((uint32_t)(src) <<\
                    2) & 0x00000004U)
#define ATLC_LC_FMAC_CTRL8__SNGL_ND__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 2) & ~0x00000004U)))
#define ATLC_LC_FMAC_CTRL8__SNGL_ND__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(1) << 2)
#define ATLC_LC_FMAC_CTRL8__SNGL_ND__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000004U) | ((uint32_t)(0) << 2)
#define ATLC_LC_FMAC_CTRL8__SNGL_ND__RESET_VALUE                    0x00000000U
/** @} */

/* macros for field hdr2_wdth */
/**
 * @defgroup at_lc_regs_core_hdr2_wdth_field hdr2_wdth_field
 * @brief macros for field hdr2_wdth
 * @details width of header byte 2 field in bits [0-8], payload length is in header byte 1
 * @{
 */
#define ATLC_LC_FMAC_CTRL8__HDR2_WDTH__SHIFT                                  4
#define ATLC_LC_FMAC_CTRL8__HDR2_WDTH__WIDTH                                  4
#define ATLC_LC_FMAC_CTRL8__HDR2_WDTH__MASK                         0x000000f0U
#define ATLC_LC_FMAC_CTRL8__HDR2_WDTH__READ(src) \
                    (((uint32_t)(src)\
                    & 0x000000f0U) >> 4)
#define ATLC_LC_FMAC_CTRL8__HDR2_WDTH__WRITE(src) \
                    (((uint32_t)(src)\
                    << 4) & 0x000000f0U)
#define ATLC_LC_FMAC_CTRL8__HDR2_WDTH__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000f0U) | (((uint32_t)(src) <<\
                    4) & 0x000000f0U)
#define ATLC_LC_FMAC_CTRL8__HDR2_WDTH__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 4) & ~0x000000f0U)))
#define ATLC_LC_FMAC_CTRL8__HDR2_WDTH__RESET_VALUE                  0x00000003U
/** @} */

/* macros for field crc_err_no_ack */
/**
 * @defgroup at_lc_regs_core_crc_err_no_ack_field crc_err_no_ack_field
 * @brief macros for field crc_err_no_ack
 * @details do not ack if there is an crc err
 * @{
 */
#define ATLC_LC_FMAC_CTRL8__CRC_ERR_NO_ACK__SHIFT                             8
#define ATLC_LC_FMAC_CTRL8__CRC_ERR_NO_ACK__WIDTH                             1
#define ATLC_LC_FMAC_CTRL8__CRC_ERR_NO_ACK__MASK                    0x00000100U
#define ATLC_LC_FMAC_CTRL8__CRC_ERR_NO_ACK__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000100U) >> 8)
#define ATLC_LC_FMAC_CTRL8__CRC_ERR_NO_ACK__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00000100U)
#define ATLC_LC_FMAC_CTRL8__CRC_ERR_NO_ACK__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | (((uint32_t)(src) <<\
                    8) & 0x00000100U)
#define ATLC_LC_FMAC_CTRL8__CRC_ERR_NO_ACK__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00000100U)))
#define ATLC_LC_FMAC_CTRL8__CRC_ERR_NO_ACK__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | ((uint32_t)(1) << 8)
#define ATLC_LC_FMAC_CTRL8__CRC_ERR_NO_ACK__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | ((uint32_t)(0) << 8)
#define ATLC_LC_FMAC_CTRL8__CRC_ERR_NO_ACK__RESET_VALUE             0x00000001U
/** @} */
#define ATLC_LC_FMAC_CTRL8__TYPE                                       uint32_t
#define ATLC_LC_FMAC_CTRL8__READ                                    0x000001f7U
#define ATLC_LC_FMAC_CTRL8__WRITE                                   0x000001f7U
#define ATLC_LC_FMAC_CTRL8__PRESERVED                               0x00000000U
#define ATLC_LC_FMAC_CTRL8__RESET_VALUE                             0x00000133U

#endif /* __ATLC_LC_FMAC_CTRL8_MACRO__ */

/** @} end of lc_fmac_ctrl8 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_fmac_crc_ctrl2 */
/**
 * @defgroup at_lc_regs_core_lc_fmac_crc_ctrl2 lc_fmac_crc_ctrl2
 * @brief Contains register fields associated with lc_fmac_crc_ctrl2. definitions.
 * @{
 */
#ifndef __ATLC_LC_FMAC_CRC_CTRL2_MACRO__
#define __ATLC_LC_FMAC_CRC_CTRL2_MACRO__

/* macros for field sd */
/**
 * @defgroup at_lc_regs_core_sd_field sd_field
 * @brief macros for field sd
 * @details initial seed for crc
 * @{
 */
#define ATLC_LC_FMAC_CRC_CTRL2__SD__SHIFT                                     0
#define ATLC_LC_FMAC_CRC_CTRL2__SD__WIDTH                                    32
#define ATLC_LC_FMAC_CRC_CTRL2__SD__MASK                            0xffffffffU
#define ATLC_LC_FMAC_CRC_CTRL2__SD__READ(src)   ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_FMAC_CRC_CTRL2__SD__WRITE(src)  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_FMAC_CRC_CTRL2__SD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_LC_FMAC_CRC_CTRL2__SD__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_LC_FMAC_CRC_CTRL2__SD__RESET_VALUE                     0xffffffffU
/** @} */
#define ATLC_LC_FMAC_CRC_CTRL2__TYPE                                   uint32_t
#define ATLC_LC_FMAC_CRC_CTRL2__READ                                0xffffffffU
#define ATLC_LC_FMAC_CRC_CTRL2__WRITE                               0xffffffffU
#define ATLC_LC_FMAC_CRC_CTRL2__PRESERVED                           0x00000000U
#define ATLC_LC_FMAC_CRC_CTRL2__RESET_VALUE                         0xffffffffU

#endif /* __ATLC_LC_FMAC_CRC_CTRL2_MACRO__ */

/** @} end of lc_fmac_crc_ctrl2 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_df_ctrl0 */
/**
 * @defgroup at_lc_regs_core_lc_df_ctrl0 lc_df_ctrl0
 * @brief Contains register fields associated with lc_df_ctrl0. definitions.
 * @{
 */
#ifndef __ATLC_LC_DF_CTRL0_MACRO__
#define __ATLC_LC_DF_CTRL0_MACRO__

/* macros for field grd_tm */
/**
 * @defgroup at_lc_regs_core_grd_tm_field grd_tm_field
 * @brief macros for field grd_tm
 * @details guard period in micro seconds
 * @{
 */
#define ATLC_LC_DF_CTRL0__GRD_TM__SHIFT                                       0
#define ATLC_LC_DF_CTRL0__GRD_TM__WIDTH                                       3
#define ATLC_LC_DF_CTRL0__GRD_TM__MASK                              0x00000007U
#define ATLC_LC_DF_CTRL0__GRD_TM__READ(src)     ((uint32_t)(src) & 0x00000007U)
#define ATLC_LC_DF_CTRL0__GRD_TM__WRITE(src)    ((uint32_t)(src) & 0x00000007U)
#define ATLC_LC_DF_CTRL0__GRD_TM__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000007U) | ((uint32_t)(src) &\
                    0x00000007U)
#define ATLC_LC_DF_CTRL0__GRD_TM__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000007U)))
#define ATLC_LC_DF_CTRL0__GRD_TM__RESET_VALUE                       0x00000004U
/** @} */

/* macros for field rfr_tm */
/**
 * @defgroup at_lc_regs_core_rfr_tm_field rfr_tm_field
 * @brief macros for field rfr_tm
 * @details reference period in micro seconds
 * @{
 */
#define ATLC_LC_DF_CTRL0__RFR_TM__SHIFT                                       3
#define ATLC_LC_DF_CTRL0__RFR_TM__WIDTH                                       4
#define ATLC_LC_DF_CTRL0__RFR_TM__MASK                              0x00000078U
#define ATLC_LC_DF_CTRL0__RFR_TM__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000078U) >> 3)
#define ATLC_LC_DF_CTRL0__RFR_TM__WRITE(src) \
                    (((uint32_t)(src)\
                    << 3) & 0x00000078U)
#define ATLC_LC_DF_CTRL0__RFR_TM__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000078U) | (((uint32_t)(src) <<\
                    3) & 0x00000078U)
#define ATLC_LC_DF_CTRL0__RFR_TM__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 3) & ~0x00000078U)))
#define ATLC_LC_DF_CTRL0__RFR_TM__RESET_VALUE                       0x00000008U
/** @} */

/* macros for field cte_frm_hdr_tx */
/**
 * @defgroup at_lc_regs_core_cte_frm_hdr_tx_field cte_frm_hdr_tx_field
 * @brief macros for field cte_frm_hdr_tx
 * @details enable HW CTEInfo decode from header
 * @{
 */
#define ATLC_LC_DF_CTRL0__CTE_FRM_HDR_TX__SHIFT                               7
#define ATLC_LC_DF_CTRL0__CTE_FRM_HDR_TX__WIDTH                               1
#define ATLC_LC_DF_CTRL0__CTE_FRM_HDR_TX__MASK                      0x00000080U
#define ATLC_LC_DF_CTRL0__CTE_FRM_HDR_TX__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000080U) >> 7)
#define ATLC_LC_DF_CTRL0__CTE_FRM_HDR_TX__WRITE(src) \
                    (((uint32_t)(src)\
                    << 7) & 0x00000080U)
#define ATLC_LC_DF_CTRL0__CTE_FRM_HDR_TX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | (((uint32_t)(src) <<\
                    7) & 0x00000080U)
#define ATLC_LC_DF_CTRL0__CTE_FRM_HDR_TX__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 7) & ~0x00000080U)))
#define ATLC_LC_DF_CTRL0__CTE_FRM_HDR_TX__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(1) << 7)
#define ATLC_LC_DF_CTRL0__CTE_FRM_HDR_TX__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000080U) | ((uint32_t)(0) << 7)
#define ATLC_LC_DF_CTRL0__CTE_FRM_HDR_TX__RESET_VALUE               0x00000000U
/** @} */

/* macros for field cte_frm_hdr_rx */
/**
 * @defgroup at_lc_regs_core_cte_frm_hdr_rx_field cte_frm_hdr_rx_field
 * @brief macros for field cte_frm_hdr_rx
 * @details enable HW CTEInfo decode from header
 * @{
 */
#define ATLC_LC_DF_CTRL0__CTE_FRM_HDR_RX__SHIFT                               8
#define ATLC_LC_DF_CTRL0__CTE_FRM_HDR_RX__WIDTH                               1
#define ATLC_LC_DF_CTRL0__CTE_FRM_HDR_RX__MASK                      0x00000100U
#define ATLC_LC_DF_CTRL0__CTE_FRM_HDR_RX__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000100U) >> 8)
#define ATLC_LC_DF_CTRL0__CTE_FRM_HDR_RX__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00000100U)
#define ATLC_LC_DF_CTRL0__CTE_FRM_HDR_RX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | (((uint32_t)(src) <<\
                    8) & 0x00000100U)
#define ATLC_LC_DF_CTRL0__CTE_FRM_HDR_RX__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00000100U)))
#define ATLC_LC_DF_CTRL0__CTE_FRM_HDR_RX__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | ((uint32_t)(1) << 8)
#define ATLC_LC_DF_CTRL0__CTE_FRM_HDR_RX__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | ((uint32_t)(0) << 8)
#define ATLC_LC_DF_CTRL0__CTE_FRM_HDR_RX__RESET_VALUE               0x00000000U
/** @} */

/* macros for field cte_prsnt */
/**
 * @defgroup at_lc_regs_core_cte_prsnt_field cte_prsnt_field
 * @brief macros for field cte_prsnt
 * @details enable CTE
 * @{
 */
#define ATLC_LC_DF_CTRL0__CTE_PRSNT__SHIFT                                    9
#define ATLC_LC_DF_CTRL0__CTE_PRSNT__WIDTH                                    1
#define ATLC_LC_DF_CTRL0__CTE_PRSNT__MASK                           0x00000200U
#define ATLC_LC_DF_CTRL0__CTE_PRSNT__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000200U) >> 9)
#define ATLC_LC_DF_CTRL0__CTE_PRSNT__WRITE(src) \
                    (((uint32_t)(src)\
                    << 9) & 0x00000200U)
#define ATLC_LC_DF_CTRL0__CTE_PRSNT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000200U) | (((uint32_t)(src) <<\
                    9) & 0x00000200U)
#define ATLC_LC_DF_CTRL0__CTE_PRSNT__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 9) & ~0x00000200U)))
#define ATLC_LC_DF_CTRL0__CTE_PRSNT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000200U) | ((uint32_t)(1) << 9)
#define ATLC_LC_DF_CTRL0__CTE_PRSNT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000200U) | ((uint32_t)(0) << 9)
#define ATLC_LC_DF_CTRL0__CTE_PRSNT__RESET_VALUE                    0x00000000U
/** @} */

/* macros for field cte_vl */
/**
 * @defgroup at_lc_regs_core_cte_vl_field cte_vl_field
 * @brief macros for field cte_vl
 * @details data value for TX CTE tone
 * @{
 */
#define ATLC_LC_DF_CTRL0__CTE_VL__SHIFT                                      10
#define ATLC_LC_DF_CTRL0__CTE_VL__WIDTH                                       1
#define ATLC_LC_DF_CTRL0__CTE_VL__MASK                              0x00000400U
#define ATLC_LC_DF_CTRL0__CTE_VL__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000400U) >> 10)
#define ATLC_LC_DF_CTRL0__CTE_VL__WRITE(src) \
                    (((uint32_t)(src)\
                    << 10) & 0x00000400U)
#define ATLC_LC_DF_CTRL0__CTE_VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000400U) | (((uint32_t)(src) <<\
                    10) & 0x00000400U)
#define ATLC_LC_DF_CTRL0__CTE_VL__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 10) & ~0x00000400U)))
#define ATLC_LC_DF_CTRL0__CTE_VL__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000400U) | ((uint32_t)(1) << 10)
#define ATLC_LC_DF_CTRL0__CTE_VL__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000400U) | ((uint32_t)(0) << 10)
#define ATLC_LC_DF_CTRL0__CTE_VL__RESET_VALUE                       0x00000001U
/** @} */

/* macros for field cte_type */
/**
 * @defgroup at_lc_regs_core_cte_type_field cte_type_field
 * @brief macros for field cte_type
 * @details 0 => AoA, 1 => AoD with 1 micro second slot 2 => AoD with 2 micro second slot
 * @{
 */
#define ATLC_LC_DF_CTRL0__CTE_TYPE__SHIFT                                    11
#define ATLC_LC_DF_CTRL0__CTE_TYPE__WIDTH                                     2
#define ATLC_LC_DF_CTRL0__CTE_TYPE__MASK                            0x00001800U
#define ATLC_LC_DF_CTRL0__CTE_TYPE__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00001800U) >> 11)
#define ATLC_LC_DF_CTRL0__CTE_TYPE__WRITE(src) \
                    (((uint32_t)(src)\
                    << 11) & 0x00001800U)
#define ATLC_LC_DF_CTRL0__CTE_TYPE__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00001800U) | (((uint32_t)(src) <<\
                    11) & 0x00001800U)
#define ATLC_LC_DF_CTRL0__CTE_TYPE__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 11) & ~0x00001800U)))
#define ATLC_LC_DF_CTRL0__CTE_TYPE__RESET_VALUE                     0x00000000U
/** @} */

/* macros for field cte_time */
/**
 * @defgroup at_lc_regs_core_cte_time_field cte_time_field
 * @brief macros for field cte_time
 * @details length of CTE field in multiple of 8 micro seconds [2-20]
 * @{
 */
#define ATLC_LC_DF_CTRL0__CTE_TIME__SHIFT                                    13
#define ATLC_LC_DF_CTRL0__CTE_TIME__WIDTH                                     5
#define ATLC_LC_DF_CTRL0__CTE_TIME__MASK                            0x0003e000U
#define ATLC_LC_DF_CTRL0__CTE_TIME__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0003e000U) >> 13)
#define ATLC_LC_DF_CTRL0__CTE_TIME__WRITE(src) \
                    (((uint32_t)(src)\
                    << 13) & 0x0003e000U)
#define ATLC_LC_DF_CTRL0__CTE_TIME__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0003e000U) | (((uint32_t)(src) <<\
                    13) & 0x0003e000U)
#define ATLC_LC_DF_CTRL0__CTE_TIME__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 13) & ~0x0003e000U)))
#define ATLC_LC_DF_CTRL0__CTE_TIME__RESET_VALUE                     0x00000002U
/** @} */

/* macros for field is_conn */
/**
 * @defgroup at_lc_regs_core_is_conn_field is_conn_field
 * @brief macros for field is_conn
 * @details CTE packet is connection based
 * @{
 */
#define ATLC_LC_DF_CTRL0__IS_CONN__SHIFT                                     18
#define ATLC_LC_DF_CTRL0__IS_CONN__WIDTH                                      1
#define ATLC_LC_DF_CTRL0__IS_CONN__MASK                             0x00040000U
#define ATLC_LC_DF_CTRL0__IS_CONN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00040000U) >> 18)
#define ATLC_LC_DF_CTRL0__IS_CONN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 18) & 0x00040000U)
#define ATLC_LC_DF_CTRL0__IS_CONN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00040000U) | (((uint32_t)(src) <<\
                    18) & 0x00040000U)
#define ATLC_LC_DF_CTRL0__IS_CONN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 18) & ~0x00040000U)))
#define ATLC_LC_DF_CTRL0__IS_CONN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00040000U) | ((uint32_t)(1) << 18)
#define ATLC_LC_DF_CTRL0__IS_CONN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00040000U) | ((uint32_t)(0) << 18)
#define ATLC_LC_DF_CTRL0__IS_CONN__RESET_VALUE                      0x00000000U
/** @} */

/* macros for field aoa_2us */
/**
 * @defgroup at_lc_regs_core_aoa_2us_field aoa_2us_field
 * @brief macros for field aoa_2us
 * @details Sample AOA with 2 micro second slot
 * @{
 */
#define ATLC_LC_DF_CTRL0__AOA_2US__SHIFT                                     19
#define ATLC_LC_DF_CTRL0__AOA_2US__WIDTH                                      1
#define ATLC_LC_DF_CTRL0__AOA_2US__MASK                             0x00080000U
#define ATLC_LC_DF_CTRL0__AOA_2US__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00080000U) >> 19)
#define ATLC_LC_DF_CTRL0__AOA_2US__WRITE(src) \
                    (((uint32_t)(src)\
                    << 19) & 0x00080000U)
#define ATLC_LC_DF_CTRL0__AOA_2US__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00080000U) | (((uint32_t)(src) <<\
                    19) & 0x00080000U)
#define ATLC_LC_DF_CTRL0__AOA_2US__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 19) & ~0x00080000U)))
#define ATLC_LC_DF_CTRL0__AOA_2US__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00080000U) | ((uint32_t)(1) << 19)
#define ATLC_LC_DF_CTRL0__AOA_2US__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00080000U) | ((uint32_t)(0) << 19)
#define ATLC_LC_DF_CTRL0__AOA_2US__RESET_VALUE                      0x00000000U
/** @} */

/* macros for field cte_en */
/**
 * @defgroup at_lc_regs_core_cte_en_field cte_en_field
 * @brief macros for field cte_en
 * @details enable CTE decoding during RX and CTE generation during TX
 * @{
 */
#define ATLC_LC_DF_CTRL0__CTE_EN__SHIFT                                      31
#define ATLC_LC_DF_CTRL0__CTE_EN__WIDTH                                       1
#define ATLC_LC_DF_CTRL0__CTE_EN__MASK                              0x80000000U
#define ATLC_LC_DF_CTRL0__CTE_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x80000000U) >> 31)
#define ATLC_LC_DF_CTRL0__CTE_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 31) & 0x80000000U)
#define ATLC_LC_DF_CTRL0__CTE_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x80000000U) | (((uint32_t)(src) <<\
                    31) & 0x80000000U)
#define ATLC_LC_DF_CTRL0__CTE_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 31) & ~0x80000000U)))
#define ATLC_LC_DF_CTRL0__CTE_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x80000000U) | ((uint32_t)(1) << 31)
#define ATLC_LC_DF_CTRL0__CTE_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x80000000U) | ((uint32_t)(0) << 31)
#define ATLC_LC_DF_CTRL0__CTE_EN__RESET_VALUE                       0x00000000U
/** @} */
#define ATLC_LC_DF_CTRL0__TYPE                                         uint32_t
#define ATLC_LC_DF_CTRL0__READ                                      0x800fffffU
#define ATLC_LC_DF_CTRL0__WRITE                                     0x800fffffU
#define ATLC_LC_DF_CTRL0__PRESERVED                                 0x00000000U
#define ATLC_LC_DF_CTRL0__RESET_VALUE                               0x00004444U

#endif /* __ATLC_LC_DF_CTRL0_MACRO__ */

/** @} end of lc_df_ctrl0 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_df_st0 */
/**
 * @defgroup at_lc_regs_core_lc_df_st0 lc_df_st0
 * @brief Contains register fields associated with lc_df_st0. definitions.
 * @{
 */
#ifndef __ATLC_LC_DF_ST0_MACRO__
#define __ATLC_LC_DF_ST0_MACRO__

/* macros for field cte_type */
/**
 * @defgroup at_lc_regs_core_cte_type_field cte_type_field
 * @brief macros for field cte_type
 * @details from received header 0 => AoA, 1 => AoD with 1 micro second slot 2 => AoD with 2 micro second slot
 * @{
 */
#define ATLC_LC_DF_ST0__CTE_TYPE__SHIFT                                       0
#define ATLC_LC_DF_ST0__CTE_TYPE__WIDTH                                       2
#define ATLC_LC_DF_ST0__CTE_TYPE__MASK                              0x00000003U
#define ATLC_LC_DF_ST0__CTE_TYPE__READ(src)     ((uint32_t)(src) & 0x00000003U)
#define ATLC_LC_DF_ST0__CTE_TYPE__RESET_VALUE                       0x00000000U
/** @} */

/* macros for field cte_time */
/**
 * @defgroup at_lc_regs_core_cte_time_field cte_time_field
 * @brief macros for field cte_time
 * @details length of CTE field in multiple of 8 micro seconds from received header
 * @{
 */
#define ATLC_LC_DF_ST0__CTE_TIME__SHIFT                                       8
#define ATLC_LC_DF_ST0__CTE_TIME__WIDTH                                       5
#define ATLC_LC_DF_ST0__CTE_TIME__MASK                              0x00001f00U
#define ATLC_LC_DF_ST0__CTE_TIME__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00001f00U) >> 8)
#define ATLC_LC_DF_ST0__CTE_TIME__RESET_VALUE                       0x00000002U
/** @} */

/* macros for field asw_smpl_cnt */
/**
 * @defgroup at_lc_regs_core_asw_smpl_cnt_field asw_smpl_cnt_field
 * @brief macros for field asw_smpl_cnt
 * @details antenna switch sample count
 * @{
 */
#define ATLC_LC_DF_ST0__ASW_SMPL_CNT__SHIFT                                  16
#define ATLC_LC_DF_ST0__ASW_SMPL_CNT__WIDTH                                   8
#define ATLC_LC_DF_ST0__ASW_SMPL_CNT__MASK                          0x00ff0000U
#define ATLC_LC_DF_ST0__ASW_SMPL_CNT__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_LC_DF_ST0__ASW_SMPL_CNT__RESET_VALUE                   0x00000000U
/** @} */
#define ATLC_LC_DF_ST0__TYPE                                           uint32_t
#define ATLC_LC_DF_ST0__READ                                        0x00ff1f03U
#define ATLC_LC_DF_ST0__PRESERVED                                   0x00000000U
#define ATLC_LC_DF_ST0__RESET_VALUE                                 0x00000200U

#endif /* __ATLC_LC_DF_ST0_MACRO__ */

/** @} end of lc_df_st0 */

/* macros for BlueprintGlobalNameSpace::ATLC_df_asw_ctrl0 */
/**
 * @defgroup at_lc_regs_core_df_asw_ctrl0 df_asw_ctrl0
 * @brief Contains register fields associated with df_asw_ctrl0. definitions.
 * @{
 */
#ifndef __ATLC_DF_ASW_CTRL0_MACRO__
#define __ATLC_DF_ASW_CTRL0_MACRO__

/* macros for field rx_ant0 */
/**
 * @defgroup at_lc_regs_core_rx_ant0_field rx_ant0_field
 * @brief macros for field rx_ant0
 * @details rx start antenna id
 * @{
 */
#define ATLC_DF_ASW_CTRL0__RX_ANT0__SHIFT                                     0
#define ATLC_DF_ASW_CTRL0__RX_ANT0__WIDTH                                     7
#define ATLC_DF_ASW_CTRL0__RX_ANT0__MASK                            0x0000007fU
#define ATLC_DF_ASW_CTRL0__RX_ANT0__READ(src)   ((uint32_t)(src) & 0x0000007fU)
#define ATLC_DF_ASW_CTRL0__RX_ANT0__WRITE(src)  ((uint32_t)(src) & 0x0000007fU)
#define ATLC_DF_ASW_CTRL0__RX_ANT0__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000007fU) | ((uint32_t)(src) &\
                    0x0000007fU)
#define ATLC_DF_ASW_CTRL0__RX_ANT0__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x0000007fU)))
#define ATLC_DF_ASW_CTRL0__RX_ANT0__RESET_VALUE                     0x00000000U
/** @} */

/* macros for field tx_ant0 */
/**
 * @defgroup at_lc_regs_core_tx_ant0_field tx_ant0_field
 * @brief macros for field tx_ant0
 * @details tx start antenna id
 * @{
 */
#define ATLC_DF_ASW_CTRL0__TX_ANT0__SHIFT                                     8
#define ATLC_DF_ASW_CTRL0__TX_ANT0__WIDTH                                     7
#define ATLC_DF_ASW_CTRL0__TX_ANT0__MASK                            0x00007f00U
#define ATLC_DF_ASW_CTRL0__TX_ANT0__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00007f00U) >> 8)
#define ATLC_DF_ASW_CTRL0__TX_ANT0__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00007f00U)
#define ATLC_DF_ASW_CTRL0__TX_ANT0__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00007f00U) | (((uint32_t)(src) <<\
                    8) & 0x00007f00U)
#define ATLC_DF_ASW_CTRL0__TX_ANT0__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00007f00U)))
#define ATLC_DF_ASW_CTRL0__TX_ANT0__RESET_VALUE                     0x00000000U
/** @} */

/* macros for field ant_cnt */
/**
 * @defgroup at_lc_regs_core_ant_cnt_field ant_cnt_field
 * @brief macros for field ant_cnt
 * @details total number of antenna's
 * @{
 */
#define ATLC_DF_ASW_CTRL0__ANT_CNT__SHIFT                                    16
#define ATLC_DF_ASW_CTRL0__ANT_CNT__WIDTH                                     8
#define ATLC_DF_ASW_CTRL0__ANT_CNT__MASK                            0x00ff0000U
#define ATLC_DF_ASW_CTRL0__ANT_CNT__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_DF_ASW_CTRL0__ANT_CNT__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00ff0000U)
#define ATLC_DF_ASW_CTRL0__ANT_CNT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00ff0000U) | (((uint32_t)(src) <<\
                    16) & 0x00ff0000U)
#define ATLC_DF_ASW_CTRL0__ANT_CNT__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00ff0000U)))
#define ATLC_DF_ASW_CTRL0__ANT_CNT__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_DF_ASW_CTRL0__TYPE                                        uint32_t
#define ATLC_DF_ASW_CTRL0__READ                                     0x00ff7f7fU
#define ATLC_DF_ASW_CTRL0__WRITE                                    0x00ff7f7fU
#define ATLC_DF_ASW_CTRL0__PRESERVED                                0x00000000U
#define ATLC_DF_ASW_CTRL0__RESET_VALUE                              0x00000000U

#endif /* __ATLC_DF_ASW_CTRL0_MACRO__ */

/** @} end of df_asw_ctrl0 */

/* macros for BlueprintGlobalNameSpace::ATLC_df_asw_ctrl1 */
/**
 * @defgroup at_lc_regs_core_df_asw_ctrl1 df_asw_ctrl1
 * @brief Contains register fields associated with df_asw_ctrl1. definitions.
 * @{
 */
#ifndef __ATLC_DF_ASW_CTRL1_MACRO__
#define __ATLC_DF_ASW_CTRL1_MACRO__

/* macros for field rx_ant1 */
/**
 * @defgroup at_lc_regs_core_rx_ant1_field rx_ant1_field
 * @brief macros for field rx_ant1
 * @details rx antenna id used during CTE guard and reference period
 * @{
 */
#define ATLC_DF_ASW_CTRL1__RX_ANT1__SHIFT                                     0
#define ATLC_DF_ASW_CTRL1__RX_ANT1__WIDTH                                     7
#define ATLC_DF_ASW_CTRL1__RX_ANT1__MASK                            0x0000007fU
#define ATLC_DF_ASW_CTRL1__RX_ANT1__READ(src)   ((uint32_t)(src) & 0x0000007fU)
#define ATLC_DF_ASW_CTRL1__RX_ANT1__WRITE(src)  ((uint32_t)(src) & 0x0000007fU)
#define ATLC_DF_ASW_CTRL1__RX_ANT1__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000007fU) | ((uint32_t)(src) &\
                    0x0000007fU)
#define ATLC_DF_ASW_CTRL1__RX_ANT1__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x0000007fU)))
#define ATLC_DF_ASW_CTRL1__RX_ANT1__RESET_VALUE                     0x00000000U
/** @} */

/* macros for field tx_ant1 */
/**
 * @defgroup at_lc_regs_core_tx_ant1_field tx_ant1_field
 * @brief macros for field tx_ant1
 * @details tx antenna id used during CTE guard and reference period
 * @{
 */
#define ATLC_DF_ASW_CTRL1__TX_ANT1__SHIFT                                     8
#define ATLC_DF_ASW_CTRL1__TX_ANT1__WIDTH                                     7
#define ATLC_DF_ASW_CTRL1__TX_ANT1__MASK                            0x00007f00U
#define ATLC_DF_ASW_CTRL1__TX_ANT1__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00007f00U) >> 8)
#define ATLC_DF_ASW_CTRL1__TX_ANT1__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00007f00U)
#define ATLC_DF_ASW_CTRL1__TX_ANT1__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00007f00U) | (((uint32_t)(src) <<\
                    8) & 0x00007f00U)
#define ATLC_DF_ASW_CTRL1__TX_ANT1__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00007f00U)))
#define ATLC_DF_ASW_CTRL1__TX_ANT1__RESET_VALUE                     0x00000000U
/** @} */
#define ATLC_DF_ASW_CTRL1__TYPE                                        uint32_t
#define ATLC_DF_ASW_CTRL1__READ                                     0x00007f7fU
#define ATLC_DF_ASW_CTRL1__WRITE                                    0x00007f7fU
#define ATLC_DF_ASW_CTRL1__PRESERVED                                0x00000000U
#define ATLC_DF_ASW_CTRL1__RESET_VALUE                              0x00000000U

#endif /* __ATLC_DF_ASW_CTRL1_MACRO__ */

/** @} end of df_asw_ctrl1 */

/* macros for BlueprintGlobalNameSpace::ATLC_df_ant_id0 */
/**
 * @defgroup at_lc_regs_core_df_ant_id0 df_ant_id0
 * @brief Contains register fields associated with df_ant_id0. definitions.
 * @{
 */
#ifndef __ATLC_DF_ANT_ID0_MACRO__
#define __ATLC_DF_ANT_ID0_MACRO__

/* macros for field ant0 */
/**
 * @defgroup at_lc_regs_core_ant0_field ant0_field
 * @brief macros for field ant0
 * @details antenna id for CTE slot 0
 * @{
 */
#define ATLC_DF_ANT_ID0__ANT0__SHIFT                                          0
#define ATLC_DF_ANT_ID0__ANT0__WIDTH                                          7
#define ATLC_DF_ANT_ID0__ANT0__MASK                                 0x0000007fU
#define ATLC_DF_ANT_ID0__ANT0__READ(src)        ((uint32_t)(src) & 0x0000007fU)
#define ATLC_DF_ANT_ID0__ANT0__WRITE(src)       ((uint32_t)(src) & 0x0000007fU)
#define ATLC_DF_ANT_ID0__ANT0__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000007fU) | ((uint32_t)(src) &\
                    0x0000007fU)
#define ATLC_DF_ANT_ID0__ANT0__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x0000007fU)))
#define ATLC_DF_ANT_ID0__ANT0__RESET_VALUE                          0x00000000U
/** @} */

/* macros for field ant1 */
/**
 * @defgroup at_lc_regs_core_ant1_field ant1_field
 * @brief macros for field ant1
 * @details antenna id for CTE slot 1
 * @{
 */
#define ATLC_DF_ANT_ID0__ANT1__SHIFT                                          8
#define ATLC_DF_ANT_ID0__ANT1__WIDTH                                          7
#define ATLC_DF_ANT_ID0__ANT1__MASK                                 0x00007f00U
#define ATLC_DF_ANT_ID0__ANT1__READ(src) (((uint32_t)(src) & 0x00007f00U) >> 8)
#define ATLC_DF_ANT_ID0__ANT1__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00007f00U)
#define ATLC_DF_ANT_ID0__ANT1__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00007f00U) | (((uint32_t)(src) <<\
                    8) & 0x00007f00U)
#define ATLC_DF_ANT_ID0__ANT1__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00007f00U)))
#define ATLC_DF_ANT_ID0__ANT1__RESET_VALUE                          0x00000001U
/** @} */

/* macros for field ant2 */
/**
 * @defgroup at_lc_regs_core_ant2_field ant2_field
 * @brief macros for field ant2
 * @details antenna id for CTE slot 2
 * @{
 */
#define ATLC_DF_ANT_ID0__ANT2__SHIFT                                         16
#define ATLC_DF_ANT_ID0__ANT2__WIDTH                                          7
#define ATLC_DF_ANT_ID0__ANT2__MASK                                 0x007f0000U
#define ATLC_DF_ANT_ID0__ANT2__READ(src) \
                    (((uint32_t)(src)\
                    & 0x007f0000U) >> 16)
#define ATLC_DF_ANT_ID0__ANT2__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x007f0000U)
#define ATLC_DF_ANT_ID0__ANT2__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x007f0000U) | (((uint32_t)(src) <<\
                    16) & 0x007f0000U)
#define ATLC_DF_ANT_ID0__ANT2__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x007f0000U)))
#define ATLC_DF_ANT_ID0__ANT2__RESET_VALUE                          0x00000002U
/** @} */

/* macros for field ant3 */
/**
 * @defgroup at_lc_regs_core_ant3_field ant3_field
 * @brief macros for field ant3
 * @details antenna id for CTE slot 3
 * @{
 */
#define ATLC_DF_ANT_ID0__ANT3__SHIFT                                         24
#define ATLC_DF_ANT_ID0__ANT3__WIDTH                                          7
#define ATLC_DF_ANT_ID0__ANT3__MASK                                 0x7f000000U
#define ATLC_DF_ANT_ID0__ANT3__READ(src) \
                    (((uint32_t)(src)\
                    & 0x7f000000U) >> 24)
#define ATLC_DF_ANT_ID0__ANT3__WRITE(src) \
                    (((uint32_t)(src)\
                    << 24) & 0x7f000000U)
#define ATLC_DF_ANT_ID0__ANT3__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x7f000000U) | (((uint32_t)(src) <<\
                    24) & 0x7f000000U)
#define ATLC_DF_ANT_ID0__ANT3__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 24) & ~0x7f000000U)))
#define ATLC_DF_ANT_ID0__ANT3__RESET_VALUE                          0x00000003U
/** @} */
#define ATLC_DF_ANT_ID0__TYPE                                          uint32_t
#define ATLC_DF_ANT_ID0__READ                                       0x7f7f7f7fU
#define ATLC_DF_ANT_ID0__WRITE                                      0x7f7f7f7fU
#define ATLC_DF_ANT_ID0__PRESERVED                                  0x00000000U
#define ATLC_DF_ANT_ID0__RESET_VALUE                                0x03020100U

#endif /* __ATLC_DF_ANT_ID0_MACRO__ */

/** @} end of df_ant_id0 */

/* macros for BlueprintGlobalNameSpace::ATLC_df_ant_id1 */
/**
 * @defgroup at_lc_regs_core_df_ant_id1 df_ant_id1
 * @brief Contains register fields associated with df_ant_id1. definitions.
 * @{
 */
#ifndef __ATLC_DF_ANT_ID1_MACRO__
#define __ATLC_DF_ANT_ID1_MACRO__

/* macros for field ant4 */
/**
 * @defgroup at_lc_regs_core_ant4_field ant4_field
 * @brief macros for field ant4
 * @details antenna id for CTE slot 4
 * @{
 */
#define ATLC_DF_ANT_ID1__ANT4__SHIFT                                          0
#define ATLC_DF_ANT_ID1__ANT4__WIDTH                                          7
#define ATLC_DF_ANT_ID1__ANT4__MASK                                 0x0000007fU
#define ATLC_DF_ANT_ID1__ANT4__READ(src)        ((uint32_t)(src) & 0x0000007fU)
#define ATLC_DF_ANT_ID1__ANT4__WRITE(src)       ((uint32_t)(src) & 0x0000007fU)
#define ATLC_DF_ANT_ID1__ANT4__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000007fU) | ((uint32_t)(src) &\
                    0x0000007fU)
#define ATLC_DF_ANT_ID1__ANT4__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x0000007fU)))
#define ATLC_DF_ANT_ID1__ANT4__RESET_VALUE                          0x00000004U
/** @} */

/* macros for field ant5 */
/**
 * @defgroup at_lc_regs_core_ant5_field ant5_field
 * @brief macros for field ant5
 * @details antenna id for CTE slot 5
 * @{
 */
#define ATLC_DF_ANT_ID1__ANT5__SHIFT                                          8
#define ATLC_DF_ANT_ID1__ANT5__WIDTH                                          7
#define ATLC_DF_ANT_ID1__ANT5__MASK                                 0x00007f00U
#define ATLC_DF_ANT_ID1__ANT5__READ(src) (((uint32_t)(src) & 0x00007f00U) >> 8)
#define ATLC_DF_ANT_ID1__ANT5__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00007f00U)
#define ATLC_DF_ANT_ID1__ANT5__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00007f00U) | (((uint32_t)(src) <<\
                    8) & 0x00007f00U)
#define ATLC_DF_ANT_ID1__ANT5__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00007f00U)))
#define ATLC_DF_ANT_ID1__ANT5__RESET_VALUE                          0x00000005U
/** @} */

/* macros for field ant6 */
/**
 * @defgroup at_lc_regs_core_ant6_field ant6_field
 * @brief macros for field ant6
 * @details antenna id for CTE slot 6
 * @{
 */
#define ATLC_DF_ANT_ID1__ANT6__SHIFT                                         16
#define ATLC_DF_ANT_ID1__ANT6__WIDTH                                          7
#define ATLC_DF_ANT_ID1__ANT6__MASK                                 0x007f0000U
#define ATLC_DF_ANT_ID1__ANT6__READ(src) \
                    (((uint32_t)(src)\
                    & 0x007f0000U) >> 16)
#define ATLC_DF_ANT_ID1__ANT6__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x007f0000U)
#define ATLC_DF_ANT_ID1__ANT6__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x007f0000U) | (((uint32_t)(src) <<\
                    16) & 0x007f0000U)
#define ATLC_DF_ANT_ID1__ANT6__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x007f0000U)))
#define ATLC_DF_ANT_ID1__ANT6__RESET_VALUE                          0x00000006U
/** @} */

/* macros for field ant7 */
/**
 * @defgroup at_lc_regs_core_ant7_field ant7_field
 * @brief macros for field ant7
 * @details antenna id for CTE slot 7
 * @{
 */
#define ATLC_DF_ANT_ID1__ANT7__SHIFT                                         24
#define ATLC_DF_ANT_ID1__ANT7__WIDTH                                          7
#define ATLC_DF_ANT_ID1__ANT7__MASK                                 0x7f000000U
#define ATLC_DF_ANT_ID1__ANT7__READ(src) \
                    (((uint32_t)(src)\
                    & 0x7f000000U) >> 24)
#define ATLC_DF_ANT_ID1__ANT7__WRITE(src) \
                    (((uint32_t)(src)\
                    << 24) & 0x7f000000U)
#define ATLC_DF_ANT_ID1__ANT7__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x7f000000U) | (((uint32_t)(src) <<\
                    24) & 0x7f000000U)
#define ATLC_DF_ANT_ID1__ANT7__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 24) & ~0x7f000000U)))
#define ATLC_DF_ANT_ID1__ANT7__RESET_VALUE                          0x00000007U
/** @} */
#define ATLC_DF_ANT_ID1__TYPE                                          uint32_t
#define ATLC_DF_ANT_ID1__READ                                       0x7f7f7f7fU
#define ATLC_DF_ANT_ID1__WRITE                                      0x7f7f7f7fU
#define ATLC_DF_ANT_ID1__PRESERVED                                  0x00000000U
#define ATLC_DF_ANT_ID1__RESET_VALUE                                0x07060504U

#endif /* __ATLC_DF_ANT_ID1_MACRO__ */

/** @} end of df_ant_id1 */

/* macros for BlueprintGlobalNameSpace::ATLC_df_ant_id2 */
/**
 * @defgroup at_lc_regs_core_df_ant_id2 df_ant_id2
 * @brief Contains register fields associated with df_ant_id2. definitions.
 * @{
 */
#ifndef __ATLC_DF_ANT_ID2_MACRO__
#define __ATLC_DF_ANT_ID2_MACRO__

/* macros for field ant8 */
/**
 * @defgroup at_lc_regs_core_ant8_field ant8_field
 * @brief macros for field ant8
 * @details antenna id for CTE slot 8
 * @{
 */
#define ATLC_DF_ANT_ID2__ANT8__SHIFT                                          0
#define ATLC_DF_ANT_ID2__ANT8__WIDTH                                          7
#define ATLC_DF_ANT_ID2__ANT8__MASK                                 0x0000007fU
#define ATLC_DF_ANT_ID2__ANT8__READ(src)        ((uint32_t)(src) & 0x0000007fU)
#define ATLC_DF_ANT_ID2__ANT8__WRITE(src)       ((uint32_t)(src) & 0x0000007fU)
#define ATLC_DF_ANT_ID2__ANT8__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000007fU) | ((uint32_t)(src) &\
                    0x0000007fU)
#define ATLC_DF_ANT_ID2__ANT8__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x0000007fU)))
#define ATLC_DF_ANT_ID2__ANT8__RESET_VALUE                          0x00000008U
/** @} */

/* macros for field ant9 */
/**
 * @defgroup at_lc_regs_core_ant9_field ant9_field
 * @brief macros for field ant9
 * @details antenna id for CTE slot 9
 * @{
 */
#define ATLC_DF_ANT_ID2__ANT9__SHIFT                                          8
#define ATLC_DF_ANT_ID2__ANT9__WIDTH                                          7
#define ATLC_DF_ANT_ID2__ANT9__MASK                                 0x00007f00U
#define ATLC_DF_ANT_ID2__ANT9__READ(src) (((uint32_t)(src) & 0x00007f00U) >> 8)
#define ATLC_DF_ANT_ID2__ANT9__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00007f00U)
#define ATLC_DF_ANT_ID2__ANT9__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00007f00U) | (((uint32_t)(src) <<\
                    8) & 0x00007f00U)
#define ATLC_DF_ANT_ID2__ANT9__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00007f00U)))
#define ATLC_DF_ANT_ID2__ANT9__RESET_VALUE                          0x00000009U
/** @} */

/* macros for field ant10 */
/**
 * @defgroup at_lc_regs_core_ant10_field ant10_field
 * @brief macros for field ant10
 * @details antenna id for CTE slot 10
 * @{
 */
#define ATLC_DF_ANT_ID2__ANT10__SHIFT                                        16
#define ATLC_DF_ANT_ID2__ANT10__WIDTH                                         7
#define ATLC_DF_ANT_ID2__ANT10__MASK                                0x007f0000U
#define ATLC_DF_ANT_ID2__ANT10__READ(src) \
                    (((uint32_t)(src)\
                    & 0x007f0000U) >> 16)
#define ATLC_DF_ANT_ID2__ANT10__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x007f0000U)
#define ATLC_DF_ANT_ID2__ANT10__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x007f0000U) | (((uint32_t)(src) <<\
                    16) & 0x007f0000U)
#define ATLC_DF_ANT_ID2__ANT10__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x007f0000U)))
#define ATLC_DF_ANT_ID2__ANT10__RESET_VALUE                         0x0000000aU
/** @} */

/* macros for field ant11 */
/**
 * @defgroup at_lc_regs_core_ant11_field ant11_field
 * @brief macros for field ant11
 * @details antenna id for CTE slot 11
 * @{
 */
#define ATLC_DF_ANT_ID2__ANT11__SHIFT                                        24
#define ATLC_DF_ANT_ID2__ANT11__WIDTH                                         7
#define ATLC_DF_ANT_ID2__ANT11__MASK                                0x7f000000U
#define ATLC_DF_ANT_ID2__ANT11__READ(src) \
                    (((uint32_t)(src)\
                    & 0x7f000000U) >> 24)
#define ATLC_DF_ANT_ID2__ANT11__WRITE(src) \
                    (((uint32_t)(src)\
                    << 24) & 0x7f000000U)
#define ATLC_DF_ANT_ID2__ANT11__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x7f000000U) | (((uint32_t)(src) <<\
                    24) & 0x7f000000U)
#define ATLC_DF_ANT_ID2__ANT11__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 24) & ~0x7f000000U)))
#define ATLC_DF_ANT_ID2__ANT11__RESET_VALUE                         0x0000000bU
/** @} */
#define ATLC_DF_ANT_ID2__TYPE                                          uint32_t
#define ATLC_DF_ANT_ID2__READ                                       0x7f7f7f7fU
#define ATLC_DF_ANT_ID2__WRITE                                      0x7f7f7f7fU
#define ATLC_DF_ANT_ID2__PRESERVED                                  0x00000000U
#define ATLC_DF_ANT_ID2__RESET_VALUE                                0x0b0a0908U

#endif /* __ATLC_DF_ANT_ID2_MACRO__ */

/** @} end of df_ant_id2 */

/* macros for BlueprintGlobalNameSpace::ATLC_df_ant_id3 */
/**
 * @defgroup at_lc_regs_core_df_ant_id3 df_ant_id3
 * @brief Contains register fields associated with df_ant_id3. definitions.
 * @{
 */
#ifndef __ATLC_DF_ANT_ID3_MACRO__
#define __ATLC_DF_ANT_ID3_MACRO__

/* macros for field ant12 */
/**
 * @defgroup at_lc_regs_core_ant12_field ant12_field
 * @brief macros for field ant12
 * @details antenna id for CTE slot 12
 * @{
 */
#define ATLC_DF_ANT_ID3__ANT12__SHIFT                                         0
#define ATLC_DF_ANT_ID3__ANT12__WIDTH                                         7
#define ATLC_DF_ANT_ID3__ANT12__MASK                                0x0000007fU
#define ATLC_DF_ANT_ID3__ANT12__READ(src)       ((uint32_t)(src) & 0x0000007fU)
#define ATLC_DF_ANT_ID3__ANT12__WRITE(src)      ((uint32_t)(src) & 0x0000007fU)
#define ATLC_DF_ANT_ID3__ANT12__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000007fU) | ((uint32_t)(src) &\
                    0x0000007fU)
#define ATLC_DF_ANT_ID3__ANT12__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x0000007fU)))
#define ATLC_DF_ANT_ID3__ANT12__RESET_VALUE                         0x0000000cU
/** @} */

/* macros for field ant13 */
/**
 * @defgroup at_lc_regs_core_ant13_field ant13_field
 * @brief macros for field ant13
 * @details antenna id for CTE slot 13
 * @{
 */
#define ATLC_DF_ANT_ID3__ANT13__SHIFT                                         8
#define ATLC_DF_ANT_ID3__ANT13__WIDTH                                         7
#define ATLC_DF_ANT_ID3__ANT13__MASK                                0x00007f00U
#define ATLC_DF_ANT_ID3__ANT13__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00007f00U) >> 8)
#define ATLC_DF_ANT_ID3__ANT13__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00007f00U)
#define ATLC_DF_ANT_ID3__ANT13__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00007f00U) | (((uint32_t)(src) <<\
                    8) & 0x00007f00U)
#define ATLC_DF_ANT_ID3__ANT13__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00007f00U)))
#define ATLC_DF_ANT_ID3__ANT13__RESET_VALUE                         0x0000000dU
/** @} */

/* macros for field ant14 */
/**
 * @defgroup at_lc_regs_core_ant14_field ant14_field
 * @brief macros for field ant14
 * @details antenna id for CTE slot 14
 * @{
 */
#define ATLC_DF_ANT_ID3__ANT14__SHIFT                                        16
#define ATLC_DF_ANT_ID3__ANT14__WIDTH                                         7
#define ATLC_DF_ANT_ID3__ANT14__MASK                                0x007f0000U
#define ATLC_DF_ANT_ID3__ANT14__READ(src) \
                    (((uint32_t)(src)\
                    & 0x007f0000U) >> 16)
#define ATLC_DF_ANT_ID3__ANT14__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x007f0000U)
#define ATLC_DF_ANT_ID3__ANT14__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x007f0000U) | (((uint32_t)(src) <<\
                    16) & 0x007f0000U)
#define ATLC_DF_ANT_ID3__ANT14__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x007f0000U)))
#define ATLC_DF_ANT_ID3__ANT14__RESET_VALUE                         0x0000000eU
/** @} */

/* macros for field ant15 */
/**
 * @defgroup at_lc_regs_core_ant15_field ant15_field
 * @brief macros for field ant15
 * @details antenna id for CTE slot 15
 * @{
 */
#define ATLC_DF_ANT_ID3__ANT15__SHIFT                                        24
#define ATLC_DF_ANT_ID3__ANT15__WIDTH                                         7
#define ATLC_DF_ANT_ID3__ANT15__MASK                                0x7f000000U
#define ATLC_DF_ANT_ID3__ANT15__READ(src) \
                    (((uint32_t)(src)\
                    & 0x7f000000U) >> 24)
#define ATLC_DF_ANT_ID3__ANT15__WRITE(src) \
                    (((uint32_t)(src)\
                    << 24) & 0x7f000000U)
#define ATLC_DF_ANT_ID3__ANT15__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x7f000000U) | (((uint32_t)(src) <<\
                    24) & 0x7f000000U)
#define ATLC_DF_ANT_ID3__ANT15__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 24) & ~0x7f000000U)))
#define ATLC_DF_ANT_ID3__ANT15__RESET_VALUE                         0x0000000fU
/** @} */
#define ATLC_DF_ANT_ID3__TYPE                                          uint32_t
#define ATLC_DF_ANT_ID3__READ                                       0x7f7f7f7fU
#define ATLC_DF_ANT_ID3__WRITE                                      0x7f7f7f7fU
#define ATLC_DF_ANT_ID3__PRESERVED                                  0x00000000U
#define ATLC_DF_ANT_ID3__RESET_VALUE                                0x0f0e0d0cU

#endif /* __ATLC_DF_ANT_ID3_MACRO__ */

/** @} end of df_ant_id3 */

/* macros for BlueprintGlobalNameSpace::ATLC_df_i_smpl_addr */
/**
 * @defgroup at_lc_regs_core_df_i_smpl_addr df_i_smpl_addr
 * @brief Contains register fields associated with df_i_smpl_addr. definitions.
 * @{
 */
#ifndef __ATLC_DF_I_SMPL_ADDR_MACRO__
#define __ATLC_DF_I_SMPL_ADDR_MACRO__

/* macros for field st */
/**
 * @defgroup at_lc_regs_core_st_field st_field
 * @brief macros for field st
 * @details i samples buffer start addr
 * @{
 */
#define ATLC_DF_I_SMPL_ADDR__ST__SHIFT                                        0
#define ATLC_DF_I_SMPL_ADDR__ST__WIDTH                                       16
#define ATLC_DF_I_SMPL_ADDR__ST__MASK                               0x0000ffffU
#define ATLC_DF_I_SMPL_ADDR__ST__READ(src)      ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_DF_I_SMPL_ADDR__ST__WRITE(src)     ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_DF_I_SMPL_ADDR__ST__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_DF_I_SMPL_ADDR__ST__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x0000ffffU)))
#define ATLC_DF_I_SMPL_ADDR__ST__RESET_VALUE                        0x00000000U
/** @} */

/* macros for field ed */
/**
 * @defgroup at_lc_regs_core_ed_field ed_field
 * @brief macros for field ed
 * @details i samples buffer end addr
 * @{
 */
#define ATLC_DF_I_SMPL_ADDR__ED__SHIFT                                       16
#define ATLC_DF_I_SMPL_ADDR__ED__WIDTH                                       16
#define ATLC_DF_I_SMPL_ADDR__ED__MASK                               0xffff0000U
#define ATLC_DF_I_SMPL_ADDR__ED__READ(src) \
                    (((uint32_t)(src)\
                    & 0xffff0000U) >> 16)
#define ATLC_DF_I_SMPL_ADDR__ED__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0xffff0000U)
#define ATLC_DF_I_SMPL_ADDR__ED__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffff0000U) | (((uint32_t)(src) <<\
                    16) & 0xffff0000U)
#define ATLC_DF_I_SMPL_ADDR__ED__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0xffff0000U)))
#define ATLC_DF_I_SMPL_ADDR__ED__RESET_VALUE                        0x00000000U
/** @} */
#define ATLC_DF_I_SMPL_ADDR__TYPE                                      uint32_t
#define ATLC_DF_I_SMPL_ADDR__READ                                   0xffffffffU
#define ATLC_DF_I_SMPL_ADDR__WRITE                                  0xffffffffU
#define ATLC_DF_I_SMPL_ADDR__PRESERVED                              0x00000000U
#define ATLC_DF_I_SMPL_ADDR__RESET_VALUE                            0x00000000U

#endif /* __ATLC_DF_I_SMPL_ADDR_MACRO__ */

/** @} end of df_i_smpl_addr */

/* macros for BlueprintGlobalNameSpace::ATLC_df_q_smpl_addr */
/**
 * @defgroup at_lc_regs_core_df_q_smpl_addr df_q_smpl_addr
 * @brief Contains register fields associated with df_q_smpl_addr. definitions.
 * @{
 */
#ifndef __ATLC_DF_Q_SMPL_ADDR_MACRO__
#define __ATLC_DF_Q_SMPL_ADDR_MACRO__

/* macros for field st */
/**
 * @defgroup at_lc_regs_core_st_field st_field
 * @brief macros for field st
 * @details q samples buffer start addr
 * @{
 */
#define ATLC_DF_Q_SMPL_ADDR__ST__SHIFT                                        0
#define ATLC_DF_Q_SMPL_ADDR__ST__WIDTH                                       16
#define ATLC_DF_Q_SMPL_ADDR__ST__MASK                               0x0000ffffU
#define ATLC_DF_Q_SMPL_ADDR__ST__READ(src)      ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_DF_Q_SMPL_ADDR__ST__WRITE(src)     ((uint32_t)(src) & 0x0000ffffU)
#define ATLC_DF_Q_SMPL_ADDR__ST__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ffffU) | ((uint32_t)(src) &\
                    0x0000ffffU)
#define ATLC_DF_Q_SMPL_ADDR__ST__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x0000ffffU)))
#define ATLC_DF_Q_SMPL_ADDR__ST__RESET_VALUE                        0x00000000U
/** @} */

/* macros for field ed */
/**
 * @defgroup at_lc_regs_core_ed_field ed_field
 * @brief macros for field ed
 * @details q samples buffer end addr
 * @{
 */
#define ATLC_DF_Q_SMPL_ADDR__ED__SHIFT                                       16
#define ATLC_DF_Q_SMPL_ADDR__ED__WIDTH                                       16
#define ATLC_DF_Q_SMPL_ADDR__ED__MASK                               0xffff0000U
#define ATLC_DF_Q_SMPL_ADDR__ED__READ(src) \
                    (((uint32_t)(src)\
                    & 0xffff0000U) >> 16)
#define ATLC_DF_Q_SMPL_ADDR__ED__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0xffff0000U)
#define ATLC_DF_Q_SMPL_ADDR__ED__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffff0000U) | (((uint32_t)(src) <<\
                    16) & 0xffff0000U)
#define ATLC_DF_Q_SMPL_ADDR__ED__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0xffff0000U)))
#define ATLC_DF_Q_SMPL_ADDR__ED__RESET_VALUE                        0x00000000U
/** @} */
#define ATLC_DF_Q_SMPL_ADDR__TYPE                                      uint32_t
#define ATLC_DF_Q_SMPL_ADDR__READ                                   0xffffffffU
#define ATLC_DF_Q_SMPL_ADDR__WRITE                                  0xffffffffU
#define ATLC_DF_Q_SMPL_ADDR__PRESERVED                              0x00000000U
#define ATLC_DF_Q_SMPL_ADDR__RESET_VALUE                            0x00000000U

#endif /* __ATLC_DF_Q_SMPL_ADDR_MACRO__ */

/** @} end of df_q_smpl_addr */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_cs_ctrl0 */
/**
 * @defgroup at_lc_regs_core_lc_cs_ctrl0 lc_cs_ctrl0
 * @brief Contains register fields associated with lc_cs_ctrl0. definitions.
 * @{
 */
#ifndef __ATLC_LC_CS_CTRL0_MACRO__
#define __ATLC_LC_CS_CTRL0_MACRO__

/* macros for field cs_en */
/**
 * @defgroup at_lc_regs_core_cs_en_field cs_en_field
 * @brief macros for field cs_en
 * @details enable channel sounding Tx or Rx
 * @{
 */
#define ATLC_LC_CS_CTRL0__CS_EN__SHIFT                                        0
#define ATLC_LC_CS_CTRL0__CS_EN__WIDTH                                        1
#define ATLC_LC_CS_CTRL0__CS_EN__MASK                               0x00000001U
#define ATLC_LC_CS_CTRL0__CS_EN__READ(src)      ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_CS_CTRL0__CS_EN__WRITE(src)     ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_CS_CTRL0__CS_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_LC_CS_CTRL0__CS_EN__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_LC_CS_CTRL0__CS_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_CS_CTRL0__CS_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_CS_CTRL0__CS_EN__RESET_VALUE                        0x00000000U
/** @} */

/* macros for field cs_mode */
/**
 * @defgroup at_lc_regs_core_cs_mode_field cs_mode_field
 * @brief macros for field cs_mode
 * @details 0 => mode_0, 1 => mode_1, 2 => mode_2, 3 => mode_3
 * @{
 */
#define ATLC_LC_CS_CTRL0__CS_MODE__SHIFT                                      1
#define ATLC_LC_CS_CTRL0__CS_MODE__WIDTH                                      2
#define ATLC_LC_CS_CTRL0__CS_MODE__MASK                             0x00000006U
#define ATLC_LC_CS_CTRL0__CS_MODE__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000006U) >> 1)
#define ATLC_LC_CS_CTRL0__CS_MODE__WRITE(src) \
                    (((uint32_t)(src)\
                    << 1) & 0x00000006U)
#define ATLC_LC_CS_CTRL0__CS_MODE__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000006U) | (((uint32_t)(src) <<\
                    1) & 0x00000006U)
#define ATLC_LC_CS_CTRL0__CS_MODE__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 1) & ~0x00000006U)))
#define ATLC_LC_CS_CTRL0__CS_MODE__RESET_VALUE                      0x00000000U
/** @} */

/* macros for field inttr */
/**
 * @defgroup at_lc_regs_core_inttr_field inttr_field
 * @brief macros for field inttr
 * @details 0 => reflector, 1 => initiator
 * @{
 */
#define ATLC_LC_CS_CTRL0__INTTR__SHIFT                                        3
#define ATLC_LC_CS_CTRL0__INTTR__WIDTH                                        1
#define ATLC_LC_CS_CTRL0__INTTR__MASK                               0x00000008U
#define ATLC_LC_CS_CTRL0__INTTR__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000008U) >> 3)
#define ATLC_LC_CS_CTRL0__INTTR__WRITE(src) \
                    (((uint32_t)(src)\
                    << 3) & 0x00000008U)
#define ATLC_LC_CS_CTRL0__INTTR__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | (((uint32_t)(src) <<\
                    3) & 0x00000008U)
#define ATLC_LC_CS_CTRL0__INTTR__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 3) & ~0x00000008U)))
#define ATLC_LC_CS_CTRL0__INTTR__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | ((uint32_t)(1) << 3)
#define ATLC_LC_CS_CTRL0__INTTR__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000008U) | ((uint32_t)(0) << 3)
#define ATLC_LC_CS_CTRL0__INTTR__RESET_VALUE                        0x00000000U
/** @} */

/* macros for field ext_tx_prsnt */
/**
 * @defgroup at_lc_regs_core_ext_tx_prsnt_field ext_tx_prsnt_field
 * @brief macros for field ext_tx_prsnt
 * @details 1 => extention present
 * @{
 */
#define ATLC_LC_CS_CTRL0__EXT_TX_PRSNT__SHIFT                                 4
#define ATLC_LC_CS_CTRL0__EXT_TX_PRSNT__WIDTH                                 1
#define ATLC_LC_CS_CTRL0__EXT_TX_PRSNT__MASK                        0x00000010U
#define ATLC_LC_CS_CTRL0__EXT_TX_PRSNT__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000010U) >> 4)
#define ATLC_LC_CS_CTRL0__EXT_TX_PRSNT__WRITE(src) \
                    (((uint32_t)(src)\
                    << 4) & 0x00000010U)
#define ATLC_LC_CS_CTRL0__EXT_TX_PRSNT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | (((uint32_t)(src) <<\
                    4) & 0x00000010U)
#define ATLC_LC_CS_CTRL0__EXT_TX_PRSNT__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 4) & ~0x00000010U)))
#define ATLC_LC_CS_CTRL0__EXT_TX_PRSNT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | ((uint32_t)(1) << 4)
#define ATLC_LC_CS_CTRL0__EXT_TX_PRSNT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000010U) | ((uint32_t)(0) << 4)
#define ATLC_LC_CS_CTRL0__EXT_TX_PRSNT__RESET_VALUE                 0x00000001U
/** @} */

/* macros for field n_ap */
/**
 * @defgroup at_lc_regs_core_n_ap_field n_ap_field
 * @brief macros for field n_ap
 * @details number of antenna path [1,4]
 * @{
 */
#define ATLC_LC_CS_CTRL0__N_AP__SHIFT                                         5
#define ATLC_LC_CS_CTRL0__N_AP__WIDTH                                         3
#define ATLC_LC_CS_CTRL0__N_AP__MASK                                0x000000e0U
#define ATLC_LC_CS_CTRL0__N_AP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x000000e0U) >> 5)
#define ATLC_LC_CS_CTRL0__N_AP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 5) & 0x000000e0U)
#define ATLC_LC_CS_CTRL0__N_AP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000e0U) | (((uint32_t)(src) <<\
                    5) & 0x000000e0U)
#define ATLC_LC_CS_CTRL0__N_AP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 5) & ~0x000000e0U)))
#define ATLC_LC_CS_CTRL0__N_AP__RESET_VALUE                         0x00000001U
/** @} */

/* macros for field cmmn_lif */
/**
 * @defgroup at_lc_regs_core_cmmn_lif_field cmmn_lif_field
 * @brief macros for field cmmn_lif
 * @details common lowr IF
 * @{
 */
#define ATLC_LC_CS_CTRL0__CMMN_LIF__SHIFT                                     8
#define ATLC_LC_CS_CTRL0__CMMN_LIF__WIDTH                                     1
#define ATLC_LC_CS_CTRL0__CMMN_LIF__MASK                            0x00000100U
#define ATLC_LC_CS_CTRL0__CMMN_LIF__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000100U) >> 8)
#define ATLC_LC_CS_CTRL0__CMMN_LIF__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00000100U)
#define ATLC_LC_CS_CTRL0__CMMN_LIF__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | (((uint32_t)(src) <<\
                    8) & 0x00000100U)
#define ATLC_LC_CS_CTRL0__CMMN_LIF__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00000100U)))
#define ATLC_LC_CS_CTRL0__CMMN_LIF__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | ((uint32_t)(1) << 8)
#define ATLC_LC_CS_CTRL0__CMMN_LIF__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000100U) | ((uint32_t)(0) << 8)
#define ATLC_LC_CS_CTRL0__CMMN_LIF__RESET_VALUE                     0x00000001U
/** @} */

/* macros for field asw_en */
/**
 * @defgroup at_lc_regs_core_asw_en_field asw_en_field
 * @brief macros for field asw_en
 * @details enable antenna switch
 * @{
 */
#define ATLC_LC_CS_CTRL0__ASW_EN__SHIFT                                       9
#define ATLC_LC_CS_CTRL0__ASW_EN__WIDTH                                       1
#define ATLC_LC_CS_CTRL0__ASW_EN__MASK                              0x00000200U
#define ATLC_LC_CS_CTRL0__ASW_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000200U) >> 9)
#define ATLC_LC_CS_CTRL0__ASW_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 9) & 0x00000200U)
#define ATLC_LC_CS_CTRL0__ASW_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000200U) | (((uint32_t)(src) <<\
                    9) & 0x00000200U)
#define ATLC_LC_CS_CTRL0__ASW_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 9) & ~0x00000200U)))
#define ATLC_LC_CS_CTRL0__ASW_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000200U) | ((uint32_t)(1) << 9)
#define ATLC_LC_CS_CTRL0__ASW_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000200U) | ((uint32_t)(0) << 9)
#define ATLC_LC_CS_CTRL0__ASW_EN__RESET_VALUE                       0x00000000U
/** @} */

/* macros for field seq_len */
/**
 * @defgroup at_lc_regs_core_seq_len_field seq_len_field
 * @brief macros for field seq_len
 * @details length of cs sequence 0 => 32, 1 => 64, 2 => 96, 3 => 128 bits
 * @{
 */
#define ATLC_LC_CS_CTRL0__SEQ_LEN__SHIFT                                     12
#define ATLC_LC_CS_CTRL0__SEQ_LEN__WIDTH                                      2
#define ATLC_LC_CS_CTRL0__SEQ_LEN__MASK                             0x00003000U
#define ATLC_LC_CS_CTRL0__SEQ_LEN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00003000U) >> 12)
#define ATLC_LC_CS_CTRL0__SEQ_LEN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 12) & 0x00003000U)
#define ATLC_LC_CS_CTRL0__SEQ_LEN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00003000U) | (((uint32_t)(src) <<\
                    12) & 0x00003000U)
#define ATLC_LC_CS_CTRL0__SEQ_LEN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 12) & ~0x00003000U)))
#define ATLC_LC_CS_CTRL0__SEQ_LEN__RESET_VALUE                      0x00000002U
/** @} */

/* macros for field cs_sync_phs_est */
/**
 * @defgroup at_lc_regs_core_cs_sync_phs_est_field cs_sync_phs_est_field
 * @brief macros for field cs_sync_phs_est
 * @details 0 => cs_sync is not used for phase estimnate, 1 => cs_sync is used for phase estimnate
 * @{
 */
#define ATLC_LC_CS_CTRL0__CS_SYNC_PHS_EST__SHIFT                             23
#define ATLC_LC_CS_CTRL0__CS_SYNC_PHS_EST__WIDTH                              1
#define ATLC_LC_CS_CTRL0__CS_SYNC_PHS_EST__MASK                     0x00800000U
#define ATLC_LC_CS_CTRL0__CS_SYNC_PHS_EST__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00800000U) >> 23)
#define ATLC_LC_CS_CTRL0__CS_SYNC_PHS_EST__WRITE(src) \
                    (((uint32_t)(src)\
                    << 23) & 0x00800000U)
#define ATLC_LC_CS_CTRL0__CS_SYNC_PHS_EST__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00800000U) | (((uint32_t)(src) <<\
                    23) & 0x00800000U)
#define ATLC_LC_CS_CTRL0__CS_SYNC_PHS_EST__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 23) & ~0x00800000U)))
#define ATLC_LC_CS_CTRL0__CS_SYNC_PHS_EST__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00800000U) | ((uint32_t)(1) << 23)
#define ATLC_LC_CS_CTRL0__CS_SYNC_PHS_EST__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00800000U) | ((uint32_t)(0) << 23)
#define ATLC_LC_CS_CTRL0__CS_SYNC_PHS_EST__RESET_VALUE              0x00000000U
/** @} */

/* macros for field cs_sync_tm_est */
/**
 * @defgroup at_lc_regs_core_cs_sync_tm_est_field cs_sync_tm_est_field
 * @brief macros for field cs_sync_tm_est
 * @details 0 => cs_sync is not used for timing estimnate, 1 => cs_sync is used for timing estimnate
 * @{
 */
#define ATLC_LC_CS_CTRL0__CS_SYNC_TM_EST__SHIFT                              24
#define ATLC_LC_CS_CTRL0__CS_SYNC_TM_EST__WIDTH                               1
#define ATLC_LC_CS_CTRL0__CS_SYNC_TM_EST__MASK                      0x01000000U
#define ATLC_LC_CS_CTRL0__CS_SYNC_TM_EST__READ(src) \
                    (((uint32_t)(src)\
                    & 0x01000000U) >> 24)
#define ATLC_LC_CS_CTRL0__CS_SYNC_TM_EST__WRITE(src) \
                    (((uint32_t)(src)\
                    << 24) & 0x01000000U)
#define ATLC_LC_CS_CTRL0__CS_SYNC_TM_EST__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x01000000U) | (((uint32_t)(src) <<\
                    24) & 0x01000000U)
#define ATLC_LC_CS_CTRL0__CS_SYNC_TM_EST__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 24) & ~0x01000000U)))
#define ATLC_LC_CS_CTRL0__CS_SYNC_TM_EST__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x01000000U) | ((uint32_t)(1) << 24)
#define ATLC_LC_CS_CTRL0__CS_SYNC_TM_EST__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x01000000U) | ((uint32_t)(0) << 24)
#define ATLC_LC_CS_CTRL0__CS_SYNC_TM_EST__RESET_VALUE               0x00000000U
/** @} */

/* macros for field cs_tn_cfo_phs_est */
/**
 * @defgroup at_lc_regs_core_cs_tn_cfo_phs_est_field cs_tn_cfo_phs_est_field
 * @brief macros for field cs_tn_cfo_phs_est
 * @details 0 => cs_tone is used for phase estimate, 1 => cs_tone is used for cfo estimate
 * @{
 */
#define ATLC_LC_CS_CTRL0__CS_TN_CFO_PHS_EST__SHIFT                           25
#define ATLC_LC_CS_CTRL0__CS_TN_CFO_PHS_EST__WIDTH                            1
#define ATLC_LC_CS_CTRL0__CS_TN_CFO_PHS_EST__MASK                   0x02000000U
#define ATLC_LC_CS_CTRL0__CS_TN_CFO_PHS_EST__READ(src) \
                    (((uint32_t)(src)\
                    & 0x02000000U) >> 25)
#define ATLC_LC_CS_CTRL0__CS_TN_CFO_PHS_EST__WRITE(src) \
                    (((uint32_t)(src)\
                    << 25) & 0x02000000U)
#define ATLC_LC_CS_CTRL0__CS_TN_CFO_PHS_EST__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x02000000U) | (((uint32_t)(src) <<\
                    25) & 0x02000000U)
#define ATLC_LC_CS_CTRL0__CS_TN_CFO_PHS_EST__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 25) & ~0x02000000U)))
#define ATLC_LC_CS_CTRL0__CS_TN_CFO_PHS_EST__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x02000000U) | ((uint32_t)(1) << 25)
#define ATLC_LC_CS_CTRL0__CS_TN_CFO_PHS_EST__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x02000000U) | ((uint32_t)(0) << 25)
#define ATLC_LC_CS_CTRL0__CS_TN_CFO_PHS_EST__RESET_VALUE            0x00000000U
/** @} */

/* macros for field cs_sync_prsnt */
/**
 * @defgroup at_lc_regs_core_cs_sync_prsnt_field cs_sync_prsnt_field
 * @brief macros for field cs_sync_prsnt
 * @details cs_sync present
 * @{
 */
#define ATLC_LC_CS_CTRL0__CS_SYNC_PRSNT__SHIFT                               26
#define ATLC_LC_CS_CTRL0__CS_SYNC_PRSNT__WIDTH                                1
#define ATLC_LC_CS_CTRL0__CS_SYNC_PRSNT__MASK                       0x04000000U
#define ATLC_LC_CS_CTRL0__CS_SYNC_PRSNT__READ(src) \
                    (((uint32_t)(src)\
                    & 0x04000000U) >> 26)
#define ATLC_LC_CS_CTRL0__CS_SYNC_PRSNT__WRITE(src) \
                    (((uint32_t)(src)\
                    << 26) & 0x04000000U)
#define ATLC_LC_CS_CTRL0__CS_SYNC_PRSNT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x04000000U) | (((uint32_t)(src) <<\
                    26) & 0x04000000U)
#define ATLC_LC_CS_CTRL0__CS_SYNC_PRSNT__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 26) & ~0x04000000U)))
#define ATLC_LC_CS_CTRL0__CS_SYNC_PRSNT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x04000000U) | ((uint32_t)(1) << 26)
#define ATLC_LC_CS_CTRL0__CS_SYNC_PRSNT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x04000000U) | ((uint32_t)(0) << 26)
#define ATLC_LC_CS_CTRL0__CS_SYNC_PRSNT__RESET_VALUE                0x00000000U
/** @} */

/* macros for field seq_prsnt */
/**
 * @defgroup at_lc_regs_core_seq_prsnt_field seq_prsnt_field
 * @brief macros for field seq_prsnt
 * @details random or sounding sequence present
 * @{
 */
#define ATLC_LC_CS_CTRL0__SEQ_PRSNT__SHIFT                                   27
#define ATLC_LC_CS_CTRL0__SEQ_PRSNT__WIDTH                                    1
#define ATLC_LC_CS_CTRL0__SEQ_PRSNT__MASK                           0x08000000U
#define ATLC_LC_CS_CTRL0__SEQ_PRSNT__READ(src) \
                    (((uint32_t)(src)\
                    & 0x08000000U) >> 27)
#define ATLC_LC_CS_CTRL0__SEQ_PRSNT__WRITE(src) \
                    (((uint32_t)(src)\
                    << 27) & 0x08000000U)
#define ATLC_LC_CS_CTRL0__SEQ_PRSNT__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x08000000U) | (((uint32_t)(src) <<\
                    27) & 0x08000000U)
#define ATLC_LC_CS_CTRL0__SEQ_PRSNT__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 27) & ~0x08000000U)))
#define ATLC_LC_CS_CTRL0__SEQ_PRSNT__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x08000000U) | ((uint32_t)(1) << 27)
#define ATLC_LC_CS_CTRL0__SEQ_PRSNT__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x08000000U) | ((uint32_t)(0) << 27)
#define ATLC_LC_CS_CTRL0__SEQ_PRSNT__RESET_VALUE                    0x00000000U
/** @} */

/* macros for field cs_tn_ps */
/**
 * @defgroup at_lc_regs_core_cs_tn_ps_field cs_tn_ps_field
 * @brief macros for field cs_tn_ps
 * @details tone position 0 => pre cs sync, 1 => post cs sync
 * @{
 */
#define ATLC_LC_CS_CTRL0__CS_TN_PS__SHIFT                                    28
#define ATLC_LC_CS_CTRL0__CS_TN_PS__WIDTH                                     1
#define ATLC_LC_CS_CTRL0__CS_TN_PS__MASK                            0x10000000U
#define ATLC_LC_CS_CTRL0__CS_TN_PS__READ(src) \
                    (((uint32_t)(src)\
                    & 0x10000000U) >> 28)
#define ATLC_LC_CS_CTRL0__CS_TN_PS__WRITE(src) \
                    (((uint32_t)(src)\
                    << 28) & 0x10000000U)
#define ATLC_LC_CS_CTRL0__CS_TN_PS__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x10000000U) | (((uint32_t)(src) <<\
                    28) & 0x10000000U)
#define ATLC_LC_CS_CTRL0__CS_TN_PS__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 28) & ~0x10000000U)))
#define ATLC_LC_CS_CTRL0__CS_TN_PS__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x10000000U) | ((uint32_t)(1) << 28)
#define ATLC_LC_CS_CTRL0__CS_TN_PS__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x10000000U) | ((uint32_t)(0) << 28)
#define ATLC_LC_CS_CTRL0__CS_TN_PS__RESET_VALUE                     0x00000000U
/** @} */

/* macros for field auto_en */
/**
 * @defgroup at_lc_regs_core_auto_en_field auto_en_field
 * @brief macros for field auto_en
 * @details enable auto tx/rx command in a cs step
 * @{
 */
#define ATLC_LC_CS_CTRL0__AUTO_EN__SHIFT                                     29
#define ATLC_LC_CS_CTRL0__AUTO_EN__WIDTH                                      1
#define ATLC_LC_CS_CTRL0__AUTO_EN__MASK                             0x20000000U
#define ATLC_LC_CS_CTRL0__AUTO_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x20000000U) >> 29)
#define ATLC_LC_CS_CTRL0__AUTO_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 29) & 0x20000000U)
#define ATLC_LC_CS_CTRL0__AUTO_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x20000000U) | (((uint32_t)(src) <<\
                    29) & 0x20000000U)
#define ATLC_LC_CS_CTRL0__AUTO_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 29) & ~0x20000000U)))
#define ATLC_LC_CS_CTRL0__AUTO_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x20000000U) | ((uint32_t)(1) << 29)
#define ATLC_LC_CS_CTRL0__AUTO_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x20000000U) | ((uint32_t)(0) << 29)
#define ATLC_LC_CS_CTRL0__AUTO_EN__RESET_VALUE                      0x00000000U
/** @} */

/* macros for field endianness_seq */
/**
 * @defgroup at_lc_regs_core_endianness_seq_field endianness_seq_field
 * @brief macros for field endianness_seq
 * @details for sequence 0 => lsb of each byte LSB is transmitted first, 1 => msb of each byte MSB is transmitted first
 * @{
 */
#define ATLC_LC_CS_CTRL0__ENDIANNESS_SEQ__SHIFT                              30
#define ATLC_LC_CS_CTRL0__ENDIANNESS_SEQ__WIDTH                               1
#define ATLC_LC_CS_CTRL0__ENDIANNESS_SEQ__MASK                      0x40000000U
#define ATLC_LC_CS_CTRL0__ENDIANNESS_SEQ__READ(src) \
                    (((uint32_t)(src)\
                    & 0x40000000U) >> 30)
#define ATLC_LC_CS_CTRL0__ENDIANNESS_SEQ__WRITE(src) \
                    (((uint32_t)(src)\
                    << 30) & 0x40000000U)
#define ATLC_LC_CS_CTRL0__ENDIANNESS_SEQ__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x40000000U) | (((uint32_t)(src) <<\
                    30) & 0x40000000U)
#define ATLC_LC_CS_CTRL0__ENDIANNESS_SEQ__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 30) & ~0x40000000U)))
#define ATLC_LC_CS_CTRL0__ENDIANNESS_SEQ__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x40000000U) | ((uint32_t)(1) << 30)
#define ATLC_LC_CS_CTRL0__ENDIANNESS_SEQ__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x40000000U) | ((uint32_t)(0) << 30)
#define ATLC_LC_CS_CTRL0__ENDIANNESS_SEQ__RESET_VALUE               0x00000001U
/** @} */

/* macros for field endianness_sw */
/**
 * @defgroup at_lc_regs_core_endianness_sw_field endianness_sw_field
 * @brief macros for field endianness_sw
 * @details for sync word 0 => lsb of each byte LSB is transmitted first, 1 => msb of each byte MSB is transmitted first
 * @{
 */
#define ATLC_LC_CS_CTRL0__ENDIANNESS_SW__SHIFT                               31
#define ATLC_LC_CS_CTRL0__ENDIANNESS_SW__WIDTH                                1
#define ATLC_LC_CS_CTRL0__ENDIANNESS_SW__MASK                       0x80000000U
#define ATLC_LC_CS_CTRL0__ENDIANNESS_SW__READ(src) \
                    (((uint32_t)(src)\
                    & 0x80000000U) >> 31)
#define ATLC_LC_CS_CTRL0__ENDIANNESS_SW__WRITE(src) \
                    (((uint32_t)(src)\
                    << 31) & 0x80000000U)
#define ATLC_LC_CS_CTRL0__ENDIANNESS_SW__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x80000000U) | (((uint32_t)(src) <<\
                    31) & 0x80000000U)
#define ATLC_LC_CS_CTRL0__ENDIANNESS_SW__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 31) & ~0x80000000U)))
#define ATLC_LC_CS_CTRL0__ENDIANNESS_SW__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x80000000U) | ((uint32_t)(1) << 31)
#define ATLC_LC_CS_CTRL0__ENDIANNESS_SW__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x80000000U) | ((uint32_t)(0) << 31)
#define ATLC_LC_CS_CTRL0__ENDIANNESS_SW__RESET_VALUE                0x00000001U
/** @} */
#define ATLC_LC_CS_CTRL0__TYPE                                         uint32_t
#define ATLC_LC_CS_CTRL0__READ                                      0xff8033ffU
#define ATLC_LC_CS_CTRL0__WRITE                                     0xff8033ffU
#define ATLC_LC_CS_CTRL0__PRESERVED                                 0x00000000U
#define ATLC_LC_CS_CTRL0__RESET_VALUE                               0xc0002130U

#endif /* __ATLC_LC_CS_CTRL0_MACRO__ */

/** @} end of lc_cs_ctrl0 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_cs_tm_ctrl0 */
/**
 * @defgroup at_lc_regs_core_lc_cs_tm_ctrl0 lc_cs_tm_ctrl0
 * @brief Contains register fields associated with lc_cs_tm_ctrl0. definitions.
 * @{
 */
#ifndef __ATLC_LC_CS_TM_CTRL0_MACRO__
#define __ATLC_LC_CS_TM_CTRL0_MACRO__

/* macros for field t_tn */
/**
 * @defgroup at_lc_regs_core_t_tn_field t_tn_field
 * @brief macros for field t_tn
 * @details time for cs tone in us
 * @{
 */
#define ATLC_LC_CS_TM_CTRL0__T_TN__SHIFT                                      0
#define ATLC_LC_CS_TM_CTRL0__T_TN__WIDTH                                     10
#define ATLC_LC_CS_TM_CTRL0__T_TN__MASK                             0x000003ffU
#define ATLC_LC_CS_TM_CTRL0__T_TN__READ(src)    ((uint32_t)(src) & 0x000003ffU)
#define ATLC_LC_CS_TM_CTRL0__T_TN__WRITE(src)   ((uint32_t)(src) & 0x000003ffU)
#define ATLC_LC_CS_TM_CTRL0__T_TN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000003ffU) | ((uint32_t)(src) &\
                    0x000003ffU)
#define ATLC_LC_CS_TM_CTRL0__T_TN__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000003ffU)))
#define ATLC_LC_CS_TM_CTRL0__T_TN__RESET_VALUE                      0x00000050U
/** @} */

/* macros for field t_phs_est */
/**
 * @defgroup at_lc_regs_core_t_phs_est_field t_phs_est_field
 * @brief macros for field t_phs_est
 * @details time for initial phase estimate in us
 * @{
 */
#define ATLC_LC_CS_TM_CTRL0__T_PHS_EST__SHIFT                                16
#define ATLC_LC_CS_TM_CTRL0__T_PHS_EST__WIDTH                                 7
#define ATLC_LC_CS_TM_CTRL0__T_PHS_EST__MASK                        0x007f0000U
#define ATLC_LC_CS_TM_CTRL0__T_PHS_EST__READ(src) \
                    (((uint32_t)(src)\
                    & 0x007f0000U) >> 16)
#define ATLC_LC_CS_TM_CTRL0__T_PHS_EST__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x007f0000U)
#define ATLC_LC_CS_TM_CTRL0__T_PHS_EST__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x007f0000U) | (((uint32_t)(src) <<\
                    16) & 0x007f0000U)
#define ATLC_LC_CS_TM_CTRL0__T_PHS_EST__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x007f0000U)))
#define ATLC_LC_CS_TM_CTRL0__T_PHS_EST__RESET_VALUE                 0x0000005fU
/** @} */
#define ATLC_LC_CS_TM_CTRL0__TYPE                                      uint32_t
#define ATLC_LC_CS_TM_CTRL0__READ                                   0x007f03ffU
#define ATLC_LC_CS_TM_CTRL0__WRITE                                  0x007f03ffU
#define ATLC_LC_CS_TM_CTRL0__PRESERVED                              0x00000000U
#define ATLC_LC_CS_TM_CTRL0__RESET_VALUE                            0x005f0050U

#endif /* __ATLC_LC_CS_TM_CTRL0_MACRO__ */

/** @} end of lc_cs_tm_ctrl0 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_cs_tm_ctrl1 */
/**
 * @defgroup at_lc_regs_core_lc_cs_tm_ctrl1 lc_cs_tm_ctrl1
 * @brief Contains register fields associated with lc_cs_tm_ctrl1. definitions.
 * @{
 */
#ifndef __ATLC_LC_CS_TM_CTRL1_MACRO__
#define __ATLC_LC_CS_TM_CTRL1_MACRO__

/* macros for field t_rd */
/**
 * @defgroup at_lc_regs_core_t_rd_field t_rd_field
 * @brief macros for field t_rd
 * @details time for ramp down 1 in us
 * @{
 */
#define ATLC_LC_CS_TM_CTRL1__T_RD__SHIFT                                      0
#define ATLC_LC_CS_TM_CTRL1__T_RD__WIDTH                                      8
#define ATLC_LC_CS_TM_CTRL1__T_RD__MASK                             0x000000ffU
#define ATLC_LC_CS_TM_CTRL1__T_RD__READ(src)    ((uint32_t)(src) & 0x000000ffU)
#define ATLC_LC_CS_TM_CTRL1__T_RD__WRITE(src)   ((uint32_t)(src) & 0x000000ffU)
#define ATLC_LC_CS_TM_CTRL1__T_RD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_LC_CS_TM_CTRL1__T_RD__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_LC_CS_TM_CTRL1__T_RD__RESET_VALUE                      0x00000005U
/** @} */

/* macros for field t_gd */
/**
 * @defgroup at_lc_regs_core_t_gd_field t_gd_field
 * @brief macros for field t_gd
 * @details time for guard period in us
 * @{
 */
#define ATLC_LC_CS_TM_CTRL1__T_GD__SHIFT                                      8
#define ATLC_LC_CS_TM_CTRL1__T_GD__WIDTH                                      4
#define ATLC_LC_CS_TM_CTRL1__T_GD__MASK                             0x00000f00U
#define ATLC_LC_CS_TM_CTRL1__T_GD__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000f00U) >> 8)
#define ATLC_LC_CS_TM_CTRL1__T_GD__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00000f00U)
#define ATLC_LC_CS_TM_CTRL1__T_GD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000f00U) | (((uint32_t)(src) <<\
                    8) & 0x00000f00U)
#define ATLC_LC_CS_TM_CTRL1__T_GD__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00000f00U)))
#define ATLC_LC_CS_TM_CTRL1__T_GD__RESET_VALUE                      0x0000000aU
/** @} */

/* macros for field t_sw */
/**
 * @defgroup at_lc_regs_core_t_sw_field t_sw_field
 * @brief macros for field t_sw
 * @details time for antenna switch in us
 * @{
 */
#define ATLC_LC_CS_TM_CTRL1__T_SW__SHIFT                                     12
#define ATLC_LC_CS_TM_CTRL1__T_SW__WIDTH                                      4
#define ATLC_LC_CS_TM_CTRL1__T_SW__MASK                             0x0000f000U
#define ATLC_LC_CS_TM_CTRL1__T_SW__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000f000U) >> 12)
#define ATLC_LC_CS_TM_CTRL1__T_SW__WRITE(src) \
                    (((uint32_t)(src)\
                    << 12) & 0x0000f000U)
#define ATLC_LC_CS_TM_CTRL1__T_SW__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000f000U) | (((uint32_t)(src) <<\
                    12) & 0x0000f000U)
#define ATLC_LC_CS_TM_CTRL1__T_SW__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 12) & ~0x0000f000U)))
#define ATLC_LC_CS_TM_CTRL1__T_SW__RESET_VALUE                      0x00000000U
/** @} */
#define ATLC_LC_CS_TM_CTRL1__TYPE                                      uint32_t
#define ATLC_LC_CS_TM_CTRL1__READ                                   0x0000ffffU
#define ATLC_LC_CS_TM_CTRL1__WRITE                                  0x0000ffffU
#define ATLC_LC_CS_TM_CTRL1__PRESERVED                              0x00000000U
#define ATLC_LC_CS_TM_CTRL1__RESET_VALUE                            0x00000a05U

#endif /* __ATLC_LC_CS_TM_CTRL1_MACRO__ */

/** @} end of lc_cs_tm_ctrl1 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_cs_tm_ctrl2 */
/**
 * @defgroup at_lc_regs_core_lc_cs_tm_ctrl2 lc_cs_tm_ctrl2
 * @brief Contains register fields associated with lc_cs_tm_ctrl2. definitions.
 * @{
 */
#ifndef __ATLC_LC_CS_TM_CTRL2_MACRO__
#define __ATLC_LC_CS_TM_CTRL2_MACRO__

/* macros for field t_ip1 */
/**
 * @defgroup at_lc_regs_core_t_ip1_field t_ip1_field
 * @brief macros for field t_ip1
 * @details time of interlude period 1 in us
 * @{
 */
#define ATLC_LC_CS_TM_CTRL2__T_IP1__SHIFT                                     0
#define ATLC_LC_CS_TM_CTRL2__T_IP1__WIDTH                                     8
#define ATLC_LC_CS_TM_CTRL2__T_IP1__MASK                            0x000000ffU
#define ATLC_LC_CS_TM_CTRL2__T_IP1__READ(src)   ((uint32_t)(src) & 0x000000ffU)
#define ATLC_LC_CS_TM_CTRL2__T_IP1__WRITE(src)  ((uint32_t)(src) & 0x000000ffU)
#define ATLC_LC_CS_TM_CTRL2__T_IP1__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_LC_CS_TM_CTRL2__T_IP1__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_LC_CS_TM_CTRL2__T_IP1__RESET_VALUE                     0x00000091U
/** @} */

/* macros for field t_ip2 */
/**
 * @defgroup at_lc_regs_core_t_ip2_field t_ip2_field
 * @brief macros for field t_ip2
 * @details time of interlude period 2 in us
 * @{
 */
#define ATLC_LC_CS_TM_CTRL2__T_IP2__SHIFT                                     8
#define ATLC_LC_CS_TM_CTRL2__T_IP2__WIDTH                                     8
#define ATLC_LC_CS_TM_CTRL2__T_IP2__MASK                            0x0000ff00U
#define ATLC_LC_CS_TM_CTRL2__T_IP2__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_LC_CS_TM_CTRL2__T_IP2__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_LC_CS_TM_CTRL2__T_IP2__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_LC_CS_TM_CTRL2__T_IP2__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_LC_CS_TM_CTRL2__T_IP2__RESET_VALUE                     0x00000091U
/** @} */
#define ATLC_LC_CS_TM_CTRL2__TYPE                                      uint32_t
#define ATLC_LC_CS_TM_CTRL2__READ                                   0x0000ffffU
#define ATLC_LC_CS_TM_CTRL2__WRITE                                  0x0000ffffU
#define ATLC_LC_CS_TM_CTRL2__PRESERVED                              0x00000000U
#define ATLC_LC_CS_TM_CTRL2__RESET_VALUE                            0x00009191U

#endif /* __ATLC_LC_CS_TM_CTRL2_MACRO__ */

/** @} end of lc_cs_tm_ctrl2 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_cs_tm_offst_crrct */
/**
 * @defgroup at_lc_regs_core_lc_cs_tm_offst_crrct lc_cs_tm_offst_crrct
 * @brief Contains register fields associated with lc_cs_tm_offst_crrct. definitions.
 * @{
 */
#ifndef __ATLC_LC_CS_TM_OFFST_CRRCT_MACRO__
#define __ATLC_LC_CS_TM_OFFST_CRRCT_MACRO__

/* macros for field rx_tm_offst */
/**
 * @defgroup at_lc_regs_core_rx_tm_offst_field rx_tm_offst_field
 * @brief macros for field rx_tm_offst
 * @details rx timing offset correction in 16 MHz cycles [-15, 15]
 * @{
 */
#define ATLC_LC_CS_TM_OFFST_CRRCT__RX_TM_OFFST__SHIFT                         0
#define ATLC_LC_CS_TM_OFFST_CRRCT__RX_TM_OFFST__WIDTH                         5
#define ATLC_LC_CS_TM_OFFST_CRRCT__RX_TM_OFFST__MASK                0x0000001fU
#define ATLC_LC_CS_TM_OFFST_CRRCT__RX_TM_OFFST__READ(src) \
                    ((uint32_t)(src)\
                    & 0x0000001fU)
#define ATLC_LC_CS_TM_OFFST_CRRCT__RX_TM_OFFST__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x0000001fU)
#define ATLC_LC_CS_TM_OFFST_CRRCT__RX_TM_OFFST__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000001fU) | ((uint32_t)(src) &\
                    0x0000001fU)
#define ATLC_LC_CS_TM_OFFST_CRRCT__RX_TM_OFFST__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x0000001fU)))
#define ATLC_LC_CS_TM_OFFST_CRRCT__RX_TM_OFFST__RESET_VALUE         0x00000000U
/** @} */

/* macros for field tx_tm_offst */
/**
 * @defgroup at_lc_regs_core_tx_tm_offst_field tx_tm_offst_field
 * @brief macros for field tx_tm_offst
 * @details tx timing offset correction in 16 MHz cycles [-15, 15]
 * @{
 */
#define ATLC_LC_CS_TM_OFFST_CRRCT__TX_TM_OFFST__SHIFT                         8
#define ATLC_LC_CS_TM_OFFST_CRRCT__TX_TM_OFFST__WIDTH                         5
#define ATLC_LC_CS_TM_OFFST_CRRCT__TX_TM_OFFST__MASK                0x00001f00U
#define ATLC_LC_CS_TM_OFFST_CRRCT__TX_TM_OFFST__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00001f00U) >> 8)
#define ATLC_LC_CS_TM_OFFST_CRRCT__TX_TM_OFFST__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00001f00U)
#define ATLC_LC_CS_TM_OFFST_CRRCT__TX_TM_OFFST__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00001f00U) | (((uint32_t)(src) <<\
                    8) & 0x00001f00U)
#define ATLC_LC_CS_TM_OFFST_CRRCT__TX_TM_OFFST__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00001f00U)))
#define ATLC_LC_CS_TM_OFFST_CRRCT__TX_TM_OFFST__RESET_VALUE         0x00000000U
/** @} */

/* macros for field rx_vld_tm_offst0 */
/**
 * @defgroup at_lc_regs_core_rx_vld_tm_offst0_field rx_vld_tm_offst0_field
 * @brief macros for field rx_vld_tm_offst0
 * @details rx vld timing offset correction in 16 MHz cycles [0, 7]
 * @{
 */
#define ATLC_LC_CS_TM_OFFST_CRRCT__RX_VLD_TM_OFFST0__SHIFT                   16
#define ATLC_LC_CS_TM_OFFST_CRRCT__RX_VLD_TM_OFFST0__WIDTH                    3
#define ATLC_LC_CS_TM_OFFST_CRRCT__RX_VLD_TM_OFFST0__MASK           0x00070000U
#define ATLC_LC_CS_TM_OFFST_CRRCT__RX_VLD_TM_OFFST0__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00070000U) >> 16)
#define ATLC_LC_CS_TM_OFFST_CRRCT__RX_VLD_TM_OFFST0__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00070000U)
#define ATLC_LC_CS_TM_OFFST_CRRCT__RX_VLD_TM_OFFST0__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00070000U) | (((uint32_t)(src) <<\
                    16) & 0x00070000U)
#define ATLC_LC_CS_TM_OFFST_CRRCT__RX_VLD_TM_OFFST0__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00070000U)))
#define ATLC_LC_CS_TM_OFFST_CRRCT__RX_VLD_TM_OFFST0__RESET_VALUE    0x00000002U
/** @} */

/* macros for field rx_vld_tm_offst1 */
/**
 * @defgroup at_lc_regs_core_rx_vld_tm_offst1_field rx_vld_tm_offst1_field
 * @brief macros for field rx_vld_tm_offst1
 * @details rx vld timing offset correction in 16 MHz cycles [0, 7]
 * @{
 */
#define ATLC_LC_CS_TM_OFFST_CRRCT__RX_VLD_TM_OFFST1__SHIFT                   20
#define ATLC_LC_CS_TM_OFFST_CRRCT__RX_VLD_TM_OFFST1__WIDTH                    3
#define ATLC_LC_CS_TM_OFFST_CRRCT__RX_VLD_TM_OFFST1__MASK           0x00700000U
#define ATLC_LC_CS_TM_OFFST_CRRCT__RX_VLD_TM_OFFST1__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00700000U) >> 20)
#define ATLC_LC_CS_TM_OFFST_CRRCT__RX_VLD_TM_OFFST1__WRITE(src) \
                    (((uint32_t)(src)\
                    << 20) & 0x00700000U)
#define ATLC_LC_CS_TM_OFFST_CRRCT__RX_VLD_TM_OFFST1__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00700000U) | (((uint32_t)(src) <<\
                    20) & 0x00700000U)
#define ATLC_LC_CS_TM_OFFST_CRRCT__RX_VLD_TM_OFFST1__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 20) & ~0x00700000U)))
#define ATLC_LC_CS_TM_OFFST_CRRCT__RX_VLD_TM_OFFST1__RESET_VALUE    0x00000003U
/** @} */

/* macros for field auto_en */
/**
 * @defgroup at_lc_regs_core_auto_en_field auto_en_field
 * @brief macros for field auto_en
 * @details enable auto timing correction
 * @{
 */
#define ATLC_LC_CS_TM_OFFST_CRRCT__AUTO_EN__SHIFT                            31
#define ATLC_LC_CS_TM_OFFST_CRRCT__AUTO_EN__WIDTH                             1
#define ATLC_LC_CS_TM_OFFST_CRRCT__AUTO_EN__MASK                    0x80000000U
#define ATLC_LC_CS_TM_OFFST_CRRCT__AUTO_EN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x80000000U) >> 31)
#define ATLC_LC_CS_TM_OFFST_CRRCT__AUTO_EN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 31) & 0x80000000U)
#define ATLC_LC_CS_TM_OFFST_CRRCT__AUTO_EN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x80000000U) | (((uint32_t)(src) <<\
                    31) & 0x80000000U)
#define ATLC_LC_CS_TM_OFFST_CRRCT__AUTO_EN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 31) & ~0x80000000U)))
#define ATLC_LC_CS_TM_OFFST_CRRCT__AUTO_EN__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x80000000U) | ((uint32_t)(1) << 31)
#define ATLC_LC_CS_TM_OFFST_CRRCT__AUTO_EN__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x80000000U) | ((uint32_t)(0) << 31)
#define ATLC_LC_CS_TM_OFFST_CRRCT__AUTO_EN__RESET_VALUE             0x00000000U
/** @} */
#define ATLC_LC_CS_TM_OFFST_CRRCT__TYPE                                uint32_t
#define ATLC_LC_CS_TM_OFFST_CRRCT__READ                             0x80771f1fU
#define ATLC_LC_CS_TM_OFFST_CRRCT__WRITE                            0x80771f1fU
#define ATLC_LC_CS_TM_OFFST_CRRCT__PRESERVED                        0x00000000U
#define ATLC_LC_CS_TM_OFFST_CRRCT__RESET_VALUE                      0x00320000U

#endif /* __ATLC_LC_CS_TM_OFFST_CRRCT_MACRO__ */

/** @} end of lc_cs_tm_offst_crrct */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_cs_itx_rrx_sync_wrd */
/**
 * @defgroup at_lc_regs_core_lc_cs_itx_rrx_sync_wrd lc_cs_itx_rrx_sync_wrd
 * @brief Contains register fields associated with lc_cs_itx_rrx_sync_wrd. definitions.
 * @{
 */
#ifndef __ATLC_LC_CS_ITX_RRX_SYNC_WRD_MACRO__
#define __ATLC_LC_CS_ITX_RRX_SYNC_WRD_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details cs synchronization word for tx command of an event
 * @{
 */
#define ATLC_LC_CS_ITX_RRX_SYNC_WRD__VL__SHIFT                                0
#define ATLC_LC_CS_ITX_RRX_SYNC_WRD__VL__WIDTH                               32
#define ATLC_LC_CS_ITX_RRX_SYNC_WRD__VL__MASK                       0xffffffffU
#define ATLC_LC_CS_ITX_RRX_SYNC_WRD__VL__READ(src) \
                    ((uint32_t)(src)\
                    & 0xffffffffU)
#define ATLC_LC_CS_ITX_RRX_SYNC_WRD__VL__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0xffffffffU)
#define ATLC_LC_CS_ITX_RRX_SYNC_WRD__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_LC_CS_ITX_RRX_SYNC_WRD__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_LC_CS_ITX_RRX_SYNC_WRD__VL__RESET_VALUE                0x8e89bed6U
/** @} */
#define ATLC_LC_CS_ITX_RRX_SYNC_WRD__TYPE                              uint32_t
#define ATLC_LC_CS_ITX_RRX_SYNC_WRD__READ                           0xffffffffU
#define ATLC_LC_CS_ITX_RRX_SYNC_WRD__WRITE                          0xffffffffU
#define ATLC_LC_CS_ITX_RRX_SYNC_WRD__PRESERVED                      0x00000000U
#define ATLC_LC_CS_ITX_RRX_SYNC_WRD__RESET_VALUE                    0x8e89bed6U

#endif /* __ATLC_LC_CS_ITX_RRX_SYNC_WRD_MACRO__ */

/** @} end of lc_cs_itx_rrx_sync_wrd */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_cs_itx_rrx_seq0 */
/**
 * @defgroup at_lc_regs_core_lc_cs_itx_rrx_seq0 lc_cs_itx_rrx_seq0
 * @brief Contains register fields associated with lc_cs_itx_rrx_seq0. definitions.
 * @{
 */
#ifndef __ATLC_LC_CS_ITX_RRX_SEQ0_MACRO__
#define __ATLC_LC_CS_ITX_RRX_SEQ0_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details cs sounding or random sequence for tx command of an event
 * @{
 */
#define ATLC_LC_CS_ITX_RRX_SEQ0__VL__SHIFT                                    0
#define ATLC_LC_CS_ITX_RRX_SEQ0__VL__WIDTH                                   32
#define ATLC_LC_CS_ITX_RRX_SEQ0__VL__MASK                           0xffffffffU
#define ATLC_LC_CS_ITX_RRX_SEQ0__VL__READ(src)  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_CS_ITX_RRX_SEQ0__VL__WRITE(src) ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_CS_ITX_RRX_SEQ0__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_LC_CS_ITX_RRX_SEQ0__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_LC_CS_ITX_RRX_SEQ0__VL__RESET_VALUE                    0x55555555U
/** @} */
#define ATLC_LC_CS_ITX_RRX_SEQ0__TYPE                                  uint32_t
#define ATLC_LC_CS_ITX_RRX_SEQ0__READ                               0xffffffffU
#define ATLC_LC_CS_ITX_RRX_SEQ0__WRITE                              0xffffffffU
#define ATLC_LC_CS_ITX_RRX_SEQ0__PRESERVED                          0x00000000U
#define ATLC_LC_CS_ITX_RRX_SEQ0__RESET_VALUE                        0x55555555U

#endif /* __ATLC_LC_CS_ITX_RRX_SEQ0_MACRO__ */

/** @} end of lc_cs_itx_rrx_seq0 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_cs_itx_rrx_seq1 */
/**
 * @defgroup at_lc_regs_core_lc_cs_itx_rrx_seq1 lc_cs_itx_rrx_seq1
 * @brief Contains register fields associated with lc_cs_itx_rrx_seq1. definitions.
 * @{
 */
#ifndef __ATLC_LC_CS_ITX_RRX_SEQ1_MACRO__
#define __ATLC_LC_CS_ITX_RRX_SEQ1_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details cs sounding or random sequence for tx command of an event
 * @{
 */
#define ATLC_LC_CS_ITX_RRX_SEQ1__VL__SHIFT                                    0
#define ATLC_LC_CS_ITX_RRX_SEQ1__VL__WIDTH                                   32
#define ATLC_LC_CS_ITX_RRX_SEQ1__VL__MASK                           0xffffffffU
#define ATLC_LC_CS_ITX_RRX_SEQ1__VL__READ(src)  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_CS_ITX_RRX_SEQ1__VL__WRITE(src) ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_CS_ITX_RRX_SEQ1__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_LC_CS_ITX_RRX_SEQ1__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_LC_CS_ITX_RRX_SEQ1__VL__RESET_VALUE                    0x55555555U
/** @} */
#define ATLC_LC_CS_ITX_RRX_SEQ1__TYPE                                  uint32_t
#define ATLC_LC_CS_ITX_RRX_SEQ1__READ                               0xffffffffU
#define ATLC_LC_CS_ITX_RRX_SEQ1__WRITE                              0xffffffffU
#define ATLC_LC_CS_ITX_RRX_SEQ1__PRESERVED                          0x00000000U
#define ATLC_LC_CS_ITX_RRX_SEQ1__RESET_VALUE                        0x55555555U

#endif /* __ATLC_LC_CS_ITX_RRX_SEQ1_MACRO__ */

/** @} end of lc_cs_itx_rrx_seq1 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_cs_itx_rrx_seq2 */
/**
 * @defgroup at_lc_regs_core_lc_cs_itx_rrx_seq2 lc_cs_itx_rrx_seq2
 * @brief Contains register fields associated with lc_cs_itx_rrx_seq2. definitions.
 * @{
 */
#ifndef __ATLC_LC_CS_ITX_RRX_SEQ2_MACRO__
#define __ATLC_LC_CS_ITX_RRX_SEQ2_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details cs sounding or random sequence for tx command of an event
 * @{
 */
#define ATLC_LC_CS_ITX_RRX_SEQ2__VL__SHIFT                                    0
#define ATLC_LC_CS_ITX_RRX_SEQ2__VL__WIDTH                                   32
#define ATLC_LC_CS_ITX_RRX_SEQ2__VL__MASK                           0xffffffffU
#define ATLC_LC_CS_ITX_RRX_SEQ2__VL__READ(src)  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_CS_ITX_RRX_SEQ2__VL__WRITE(src) ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_CS_ITX_RRX_SEQ2__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_LC_CS_ITX_RRX_SEQ2__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_LC_CS_ITX_RRX_SEQ2__VL__RESET_VALUE                    0x55555555U
/** @} */
#define ATLC_LC_CS_ITX_RRX_SEQ2__TYPE                                  uint32_t
#define ATLC_LC_CS_ITX_RRX_SEQ2__READ                               0xffffffffU
#define ATLC_LC_CS_ITX_RRX_SEQ2__WRITE                              0xffffffffU
#define ATLC_LC_CS_ITX_RRX_SEQ2__PRESERVED                          0x00000000U
#define ATLC_LC_CS_ITX_RRX_SEQ2__RESET_VALUE                        0x55555555U

#endif /* __ATLC_LC_CS_ITX_RRX_SEQ2_MACRO__ */

/** @} end of lc_cs_itx_rrx_seq2 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_cs_itx_rrx_seq3 */
/**
 * @defgroup at_lc_regs_core_lc_cs_itx_rrx_seq3 lc_cs_itx_rrx_seq3
 * @brief Contains register fields associated with lc_cs_itx_rrx_seq3. definitions.
 * @{
 */
#ifndef __ATLC_LC_CS_ITX_RRX_SEQ3_MACRO__
#define __ATLC_LC_CS_ITX_RRX_SEQ3_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details cs sounding or random sequence for tx command of an event
 * @{
 */
#define ATLC_LC_CS_ITX_RRX_SEQ3__VL__SHIFT                                    0
#define ATLC_LC_CS_ITX_RRX_SEQ3__VL__WIDTH                                   32
#define ATLC_LC_CS_ITX_RRX_SEQ3__VL__MASK                           0xffffffffU
#define ATLC_LC_CS_ITX_RRX_SEQ3__VL__READ(src)  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_CS_ITX_RRX_SEQ3__VL__WRITE(src) ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_CS_ITX_RRX_SEQ3__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_LC_CS_ITX_RRX_SEQ3__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_LC_CS_ITX_RRX_SEQ3__VL__RESET_VALUE                    0x55555555U
/** @} */
#define ATLC_LC_CS_ITX_RRX_SEQ3__TYPE                                  uint32_t
#define ATLC_LC_CS_ITX_RRX_SEQ3__READ                               0xffffffffU
#define ATLC_LC_CS_ITX_RRX_SEQ3__WRITE                              0xffffffffU
#define ATLC_LC_CS_ITX_RRX_SEQ3__PRESERVED                          0x00000000U
#define ATLC_LC_CS_ITX_RRX_SEQ3__RESET_VALUE                        0x55555555U

#endif /* __ATLC_LC_CS_ITX_RRX_SEQ3_MACRO__ */

/** @} end of lc_cs_itx_rrx_seq3 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_cs_irx_rtx_sync_wrd */
/**
 * @defgroup at_lc_regs_core_lc_cs_irx_rtx_sync_wrd lc_cs_irx_rtx_sync_wrd
 * @brief Contains register fields associated with lc_cs_irx_rtx_sync_wrd. definitions.
 * @{
 */
#ifndef __ATLC_LC_CS_IRX_RTX_SYNC_WRD_MACRO__
#define __ATLC_LC_CS_IRX_RTX_SYNC_WRD_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details cs synchronization word for rx command of an event
 * @{
 */
#define ATLC_LC_CS_IRX_RTX_SYNC_WRD__VL__SHIFT                                0
#define ATLC_LC_CS_IRX_RTX_SYNC_WRD__VL__WIDTH                               32
#define ATLC_LC_CS_IRX_RTX_SYNC_WRD__VL__MASK                       0xffffffffU
#define ATLC_LC_CS_IRX_RTX_SYNC_WRD__VL__READ(src) \
                    ((uint32_t)(src)\
                    & 0xffffffffU)
#define ATLC_LC_CS_IRX_RTX_SYNC_WRD__VL__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0xffffffffU)
#define ATLC_LC_CS_IRX_RTX_SYNC_WRD__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_LC_CS_IRX_RTX_SYNC_WRD__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_LC_CS_IRX_RTX_SYNC_WRD__VL__RESET_VALUE                0x5367a431U
/** @} */
#define ATLC_LC_CS_IRX_RTX_SYNC_WRD__TYPE                              uint32_t
#define ATLC_LC_CS_IRX_RTX_SYNC_WRD__READ                           0xffffffffU
#define ATLC_LC_CS_IRX_RTX_SYNC_WRD__WRITE                          0xffffffffU
#define ATLC_LC_CS_IRX_RTX_SYNC_WRD__PRESERVED                      0x00000000U
#define ATLC_LC_CS_IRX_RTX_SYNC_WRD__RESET_VALUE                    0x5367a431U

#endif /* __ATLC_LC_CS_IRX_RTX_SYNC_WRD_MACRO__ */

/** @} end of lc_cs_irx_rtx_sync_wrd */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_cs_irx_rtx_seq0 */
/**
 * @defgroup at_lc_regs_core_lc_cs_irx_rtx_seq0 lc_cs_irx_rtx_seq0
 * @brief Contains register fields associated with lc_cs_irx_rtx_seq0. definitions.
 * @{
 */
#ifndef __ATLC_LC_CS_IRX_RTX_SEQ0_MACRO__
#define __ATLC_LC_CS_IRX_RTX_SEQ0_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details cs sounding or random sequence for rx command of an event
 * @{
 */
#define ATLC_LC_CS_IRX_RTX_SEQ0__VL__SHIFT                                    0
#define ATLC_LC_CS_IRX_RTX_SEQ0__VL__WIDTH                                   32
#define ATLC_LC_CS_IRX_RTX_SEQ0__VL__MASK                           0xffffffffU
#define ATLC_LC_CS_IRX_RTX_SEQ0__VL__READ(src)  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_CS_IRX_RTX_SEQ0__VL__WRITE(src) ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_CS_IRX_RTX_SEQ0__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_LC_CS_IRX_RTX_SEQ0__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_LC_CS_IRX_RTX_SEQ0__VL__RESET_VALUE                    0xaaaaaaaaU
/** @} */
#define ATLC_LC_CS_IRX_RTX_SEQ0__TYPE                                  uint32_t
#define ATLC_LC_CS_IRX_RTX_SEQ0__READ                               0xffffffffU
#define ATLC_LC_CS_IRX_RTX_SEQ0__WRITE                              0xffffffffU
#define ATLC_LC_CS_IRX_RTX_SEQ0__PRESERVED                          0x00000000U
#define ATLC_LC_CS_IRX_RTX_SEQ0__RESET_VALUE                        0xaaaaaaaaU

#endif /* __ATLC_LC_CS_IRX_RTX_SEQ0_MACRO__ */

/** @} end of lc_cs_irx_rtx_seq0 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_cs_irx_rtx_seq1 */
/**
 * @defgroup at_lc_regs_core_lc_cs_irx_rtx_seq1 lc_cs_irx_rtx_seq1
 * @brief Contains register fields associated with lc_cs_irx_rtx_seq1. definitions.
 * @{
 */
#ifndef __ATLC_LC_CS_IRX_RTX_SEQ1_MACRO__
#define __ATLC_LC_CS_IRX_RTX_SEQ1_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details cs sounding or random sequence for rx command of an event
 * @{
 */
#define ATLC_LC_CS_IRX_RTX_SEQ1__VL__SHIFT                                    0
#define ATLC_LC_CS_IRX_RTX_SEQ1__VL__WIDTH                                   32
#define ATLC_LC_CS_IRX_RTX_SEQ1__VL__MASK                           0xffffffffU
#define ATLC_LC_CS_IRX_RTX_SEQ1__VL__READ(src)  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_CS_IRX_RTX_SEQ1__VL__WRITE(src) ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_CS_IRX_RTX_SEQ1__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_LC_CS_IRX_RTX_SEQ1__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_LC_CS_IRX_RTX_SEQ1__VL__RESET_VALUE                    0xaaaaaaaaU
/** @} */
#define ATLC_LC_CS_IRX_RTX_SEQ1__TYPE                                  uint32_t
#define ATLC_LC_CS_IRX_RTX_SEQ1__READ                               0xffffffffU
#define ATLC_LC_CS_IRX_RTX_SEQ1__WRITE                              0xffffffffU
#define ATLC_LC_CS_IRX_RTX_SEQ1__PRESERVED                          0x00000000U
#define ATLC_LC_CS_IRX_RTX_SEQ1__RESET_VALUE                        0xaaaaaaaaU

#endif /* __ATLC_LC_CS_IRX_RTX_SEQ1_MACRO__ */

/** @} end of lc_cs_irx_rtx_seq1 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_cs_irx_rtx_seq2 */
/**
 * @defgroup at_lc_regs_core_lc_cs_irx_rtx_seq2 lc_cs_irx_rtx_seq2
 * @brief Contains register fields associated with lc_cs_irx_rtx_seq2. definitions.
 * @{
 */
#ifndef __ATLC_LC_CS_IRX_RTX_SEQ2_MACRO__
#define __ATLC_LC_CS_IRX_RTX_SEQ2_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details cs sounding or random sequence for rx command of an event
 * @{
 */
#define ATLC_LC_CS_IRX_RTX_SEQ2__VL__SHIFT                                    0
#define ATLC_LC_CS_IRX_RTX_SEQ2__VL__WIDTH                                   32
#define ATLC_LC_CS_IRX_RTX_SEQ2__VL__MASK                           0xffffffffU
#define ATLC_LC_CS_IRX_RTX_SEQ2__VL__READ(src)  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_CS_IRX_RTX_SEQ2__VL__WRITE(src) ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_CS_IRX_RTX_SEQ2__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_LC_CS_IRX_RTX_SEQ2__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_LC_CS_IRX_RTX_SEQ2__VL__RESET_VALUE                    0xaaaaaaaaU
/** @} */
#define ATLC_LC_CS_IRX_RTX_SEQ2__TYPE                                  uint32_t
#define ATLC_LC_CS_IRX_RTX_SEQ2__READ                               0xffffffffU
#define ATLC_LC_CS_IRX_RTX_SEQ2__WRITE                              0xffffffffU
#define ATLC_LC_CS_IRX_RTX_SEQ2__PRESERVED                          0x00000000U
#define ATLC_LC_CS_IRX_RTX_SEQ2__RESET_VALUE                        0xaaaaaaaaU

#endif /* __ATLC_LC_CS_IRX_RTX_SEQ2_MACRO__ */

/** @} end of lc_cs_irx_rtx_seq2 */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_cs_irx_rtx_seq3 */
/**
 * @defgroup at_lc_regs_core_lc_cs_irx_rtx_seq3 lc_cs_irx_rtx_seq3
 * @brief Contains register fields associated with lc_cs_irx_rtx_seq3. definitions.
 * @{
 */
#ifndef __ATLC_LC_CS_IRX_RTX_SEQ3_MACRO__
#define __ATLC_LC_CS_IRX_RTX_SEQ3_MACRO__

/* macros for field vl */
/**
 * @defgroup at_lc_regs_core_vl_field vl_field
 * @brief macros for field vl
 * @details cs sounding or random sequence for rx command of an event
 * @{
 */
#define ATLC_LC_CS_IRX_RTX_SEQ3__VL__SHIFT                                    0
#define ATLC_LC_CS_IRX_RTX_SEQ3__VL__WIDTH                                   32
#define ATLC_LC_CS_IRX_RTX_SEQ3__VL__MASK                           0xffffffffU
#define ATLC_LC_CS_IRX_RTX_SEQ3__VL__READ(src)  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_CS_IRX_RTX_SEQ3__VL__WRITE(src) ((uint32_t)(src) & 0xffffffffU)
#define ATLC_LC_CS_IRX_RTX_SEQ3__VL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_LC_CS_IRX_RTX_SEQ3__VL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0xffffffffU)))
#define ATLC_LC_CS_IRX_RTX_SEQ3__VL__RESET_VALUE                    0xaaaaaaaaU
/** @} */
#define ATLC_LC_CS_IRX_RTX_SEQ3__TYPE                                  uint32_t
#define ATLC_LC_CS_IRX_RTX_SEQ3__READ                               0xffffffffU
#define ATLC_LC_CS_IRX_RTX_SEQ3__WRITE                              0xffffffffU
#define ATLC_LC_CS_IRX_RTX_SEQ3__PRESERVED                          0x00000000U
#define ATLC_LC_CS_IRX_RTX_SEQ3__RESET_VALUE                        0xaaaaaaaaU

#endif /* __ATLC_LC_CS_IRX_RTX_SEQ3_MACRO__ */

/** @} end of lc_cs_irx_rtx_seq3 */

/* macros for BlueprintGlobalNameSpace::ATLC_cs_st0 */
/**
 * @defgroup at_lc_regs_core_cs_st0 cs_st0
 * @brief Contains register fields associated with cs_st0. definitions.
 * @{
 */
#ifndef __ATLC_CS_ST0_MACRO__
#define __ATLC_CS_ST0_MACRO__

/* macros for field fr_62p5ns_cntr */
/**
 * @defgroup at_lc_regs_core_fr_62p5ns_cntr_field fr_62p5ns_cntr_field
 * @brief macros for field fr_62p5ns_cntr
 * @details free running 62.5 ns counter
 * @{
 */
#define ATLC_CS_ST0__FR_62P5NS_CNTR__SHIFT                                    0
#define ATLC_CS_ST0__FR_62P5NS_CNTR__WIDTH                                   32
#define ATLC_CS_ST0__FR_62P5NS_CNTR__MASK                           0xffffffffU
#define ATLC_CS_ST0__FR_62P5NS_CNTR__READ(src)  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_CS_ST0__FR_62P5NS_CNTR__RESET_VALUE                    0x00000000U
/** @} */
#define ATLC_CS_ST0__TYPE                                              uint32_t
#define ATLC_CS_ST0__READ                                           0xffffffffU
#define ATLC_CS_ST0__PRESERVED                                      0x00000000U
#define ATLC_CS_ST0__RESET_VALUE                                    0x00000000U

#endif /* __ATLC_CS_ST0_MACRO__ */

/** @} end of cs_st0 */

/* macros for BlueprintGlobalNameSpace::ATLC_cs_st1 */
/**
 * @defgroup at_lc_regs_core_cs_st1 cs_st1
 * @brief Contains register fields associated with cs_st1. definitions.
 * @{
 */
#ifndef __ATLC_CS_ST1_MACRO__
#define __ATLC_CS_ST1_MACRO__

/* macros for field cs_rx_stat_cnt */
/**
 * @defgroup at_lc_regs_core_cs_rx_stat_cnt_field cs_rx_stat_cnt_field
 * @brief macros for field cs_rx_stat_cnt
 * @details cs rx status byte count
 * @{
 */
#define ATLC_CS_ST1__CS_RX_STAT_CNT__SHIFT                                    0
#define ATLC_CS_ST1__CS_RX_STAT_CNT__WIDTH                                    7
#define ATLC_CS_ST1__CS_RX_STAT_CNT__MASK                           0x0000007fU
#define ATLC_CS_ST1__CS_RX_STAT_CNT__READ(src)  ((uint32_t)(src) & 0x0000007fU)
#define ATLC_CS_ST1__CS_RX_STAT_CNT__RESET_VALUE                    0x00000000U
/** @} */

/* macros for field rx_stat_cnt */
/**
 * @defgroup at_lc_regs_core_rx_stat_cnt_field rx_stat_cnt_field
 * @brief macros for field rx_stat_cnt
 * @details rx status byte count
 * @{
 */
#define ATLC_CS_ST1__RX_STAT_CNT__SHIFT                                       8
#define ATLC_CS_ST1__RX_STAT_CNT__WIDTH                                       2
#define ATLC_CS_ST1__RX_STAT_CNT__MASK                              0x00000300U
#define ATLC_CS_ST1__RX_STAT_CNT__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000300U) >> 8)
#define ATLC_CS_ST1__RX_STAT_CNT__RESET_VALUE                       0x00000000U
/** @} */
#define ATLC_CS_ST1__TYPE                                              uint32_t
#define ATLC_CS_ST1__READ                                           0x0000037fU
#define ATLC_CS_ST1__PRESERVED                                      0x00000000U
#define ATLC_CS_ST1__RESET_VALUE                                    0x00000000U

#endif /* __ATLC_CS_ST1_MACRO__ */

/** @} end of cs_st1 */

/* macros for BlueprintGlobalNameSpace::ATLC_pthdly_df_1us_1mbps_ble */
/**
 * @defgroup at_lc_regs_core_pthdly_df_1us_1mbps_ble pthdly_df_1us_1mbps_ble
 * @brief Contains register fields associated with pthdly_df_1us_1mbps_ble. definitions.
 * @{
 */
#ifndef __ATLC_PTHDLY_DF_1US_1MBPS_BLE_MACRO__
#define __ATLC_PTHDLY_DF_1US_1MBPS_BLE_MACRO__

/* macros for field rx_smpl */
/**
 * @defgroup at_lc_regs_core_rx_smpl_field rx_smpl_field
 * @brief macros for field rx_smpl
 * @details rx antanna switch sample time in 8 MHz period or 0.125 micro seconds
 * @{
 */
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__RX_SMPL__SHIFT                          0
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__RX_SMPL__WIDTH                          8
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__RX_SMPL__MASK                 0x000000ffU
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__RX_SMPL__READ(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__RX_SMPL__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__RX_SMPL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__RX_SMPL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__RX_SMPL__RESET_VALUE          0x00000000U
/** @} */

/* macros for field rx_asw */
/**
 * @defgroup at_lc_regs_core_rx_asw_field rx_asw_field
 * @brief macros for field rx_asw
 * @details rx antenna switch time in 8 MHz period or 0.125 micro seconds
 * @{
 */
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__RX_ASW__SHIFT                           8
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__RX_ASW__WIDTH                           8
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__RX_ASW__MASK                  0x0000ff00U
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__RX_ASW__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__RX_ASW__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__RX_ASW__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__RX_ASW__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__RX_ASW__RESET_VALUE           0x00000060U
/** @} */

/* macros for field tx_asw */
/**
 * @defgroup at_lc_regs_core_tx_asw_field tx_asw_field
 * @brief macros for field tx_asw
 * @details tx antenna switch time in 8 MHz period or 0.125 micro seconds
 * @{
 */
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__TX_ASW__SHIFT                          16
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__TX_ASW__WIDTH                           8
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__TX_ASW__MASK                  0x00ff0000U
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__TX_ASW__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__TX_ASW__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00ff0000U)
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__TX_ASW__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00ff0000U) | (((uint32_t)(src) <<\
                    16) & 0x00ff0000U)
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__TX_ASW__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00ff0000U)))
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__TX_ASW__RESET_VALUE           0x00000060U
/** @} */
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__TYPE                             uint32_t
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__READ                          0x00ffffffU
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__WRITE                         0x00ffffffU
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__PRESERVED                     0x00000000U
#define ATLC_PTHDLY_DF_1US_1MBPS_BLE__RESET_VALUE                   0x00606000U

#endif /* __ATLC_PTHDLY_DF_1US_1MBPS_BLE_MACRO__ */

/** @} end of pthdly_df_1us_1mbps_ble */

/* macros for BlueprintGlobalNameSpace::ATLC_pthdly_df_2us_1mbps_ble */
/**
 * @defgroup at_lc_regs_core_pthdly_df_2us_1mbps_ble pthdly_df_2us_1mbps_ble
 * @brief Contains register fields associated with pthdly_df_2us_1mbps_ble. definitions.
 * @{
 */
#ifndef __ATLC_PTHDLY_DF_2US_1MBPS_BLE_MACRO__
#define __ATLC_PTHDLY_DF_2US_1MBPS_BLE_MACRO__

/* macros for field rx_smpl */
/**
 * @defgroup at_lc_regs_core_rx_smpl_field rx_smpl_field
 * @brief macros for field rx_smpl
 * @details rx antanna switch sample time in 8 MHz period or 0.125 micro seconds
 * @{
 */
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__RX_SMPL__SHIFT                          0
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__RX_SMPL__WIDTH                          8
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__RX_SMPL__MASK                 0x000000ffU
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__RX_SMPL__READ(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__RX_SMPL__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__RX_SMPL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__RX_SMPL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__RX_SMPL__RESET_VALUE          0x00000000U
/** @} */

/* macros for field rx_asw */
/**
 * @defgroup at_lc_regs_core_rx_asw_field rx_asw_field
 * @brief macros for field rx_asw
 * @details rx antenna switch time in 8 MHz period or 0.125 micro seconds
 * @{
 */
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__RX_ASW__SHIFT                           8
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__RX_ASW__WIDTH                           8
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__RX_ASW__MASK                  0x0000ff00U
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__RX_ASW__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__RX_ASW__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__RX_ASW__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__RX_ASW__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__RX_ASW__RESET_VALUE           0x00000060U
/** @} */

/* macros for field tx_asw */
/**
 * @defgroup at_lc_regs_core_tx_asw_field tx_asw_field
 * @brief macros for field tx_asw
 * @details tx antenna switch time in 8 MHz period or 0.125 micro seconds
 * @{
 */
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__TX_ASW__SHIFT                          16
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__TX_ASW__WIDTH                           8
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__TX_ASW__MASK                  0x00ff0000U
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__TX_ASW__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__TX_ASW__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00ff0000U)
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__TX_ASW__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00ff0000U) | (((uint32_t)(src) <<\
                    16) & 0x00ff0000U)
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__TX_ASW__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00ff0000U)))
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__TX_ASW__RESET_VALUE           0x00000060U
/** @} */
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__TYPE                             uint32_t
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__READ                          0x00ffffffU
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__WRITE                         0x00ffffffU
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__PRESERVED                     0x00000000U
#define ATLC_PTHDLY_DF_2US_1MBPS_BLE__RESET_VALUE                   0x00606000U

#endif /* __ATLC_PTHDLY_DF_2US_1MBPS_BLE_MACRO__ */

/** @} end of pthdly_df_2us_1mbps_ble */

/* macros for BlueprintGlobalNameSpace::ATLC_pthdly_df_1us_2mbps_ble */
/**
 * @defgroup at_lc_regs_core_pthdly_df_1us_2mbps_ble pthdly_df_1us_2mbps_ble
 * @brief Contains register fields associated with pthdly_df_1us_2mbps_ble. definitions.
 * @{
 */
#ifndef __ATLC_PTHDLY_DF_1US_2MBPS_BLE_MACRO__
#define __ATLC_PTHDLY_DF_1US_2MBPS_BLE_MACRO__

/* macros for field rx_smpl */
/**
 * @defgroup at_lc_regs_core_rx_smpl_field rx_smpl_field
 * @brief macros for field rx_smpl
 * @details rx antanna switch sample time in 8 MHz period or 0.125 micro seconds
 * @{
 */
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__RX_SMPL__SHIFT                          0
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__RX_SMPL__WIDTH                          8
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__RX_SMPL__MASK                 0x000000ffU
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__RX_SMPL__READ(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__RX_SMPL__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__RX_SMPL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__RX_SMPL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__RX_SMPL__RESET_VALUE          0x00000000U
/** @} */

/* macros for field rx_asw */
/**
 * @defgroup at_lc_regs_core_rx_asw_field rx_asw_field
 * @brief macros for field rx_asw
 * @details rx antenna switch time in 8 MHz period or 0.125 micro seconds
 * @{
 */
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__RX_ASW__SHIFT                           8
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__RX_ASW__WIDTH                           8
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__RX_ASW__MASK                  0x0000ff00U
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__RX_ASW__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__RX_ASW__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__RX_ASW__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__RX_ASW__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__RX_ASW__RESET_VALUE           0x00000060U
/** @} */

/* macros for field tx_asw */
/**
 * @defgroup at_lc_regs_core_tx_asw_field tx_asw_field
 * @brief macros for field tx_asw
 * @details tx antenna switch time in 8 MHz period or 0.125 micro seconds
 * @{
 */
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__TX_ASW__SHIFT                          16
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__TX_ASW__WIDTH                           8
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__TX_ASW__MASK                  0x00ff0000U
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__TX_ASW__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__TX_ASW__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00ff0000U)
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__TX_ASW__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00ff0000U) | (((uint32_t)(src) <<\
                    16) & 0x00ff0000U)
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__TX_ASW__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00ff0000U)))
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__TX_ASW__RESET_VALUE           0x00000060U
/** @} */
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__TYPE                             uint32_t
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__READ                          0x00ffffffU
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__WRITE                         0x00ffffffU
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__PRESERVED                     0x00000000U
#define ATLC_PTHDLY_DF_1US_2MBPS_BLE__RESET_VALUE                   0x00606000U

#endif /* __ATLC_PTHDLY_DF_1US_2MBPS_BLE_MACRO__ */

/** @} end of pthdly_df_1us_2mbps_ble */

/* macros for BlueprintGlobalNameSpace::ATLC_pthdly_df_2us_2mbps_ble */
/**
 * @defgroup at_lc_regs_core_pthdly_df_2us_2mbps_ble pthdly_df_2us_2mbps_ble
 * @brief Contains register fields associated with pthdly_df_2us_2mbps_ble. definitions.
 * @{
 */
#ifndef __ATLC_PTHDLY_DF_2US_2MBPS_BLE_MACRO__
#define __ATLC_PTHDLY_DF_2US_2MBPS_BLE_MACRO__

/* macros for field rx_smpl */
/**
 * @defgroup at_lc_regs_core_rx_smpl_field rx_smpl_field
 * @brief macros for field rx_smpl
 * @details rx antanna switch sample time in 8 MHz period or 0.125 micro seconds
 * @{
 */
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__RX_SMPL__SHIFT                          0
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__RX_SMPL__WIDTH                          8
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__RX_SMPL__MASK                 0x000000ffU
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__RX_SMPL__READ(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__RX_SMPL__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__RX_SMPL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__RX_SMPL__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__RX_SMPL__RESET_VALUE          0x00000000U
/** @} */

/* macros for field rx_asw */
/**
 * @defgroup at_lc_regs_core_rx_asw_field rx_asw_field
 * @brief macros for field rx_asw
 * @details rx antenna switch time in 8 MHz period or 0.125 micro seconds
 * @{
 */
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__RX_ASW__SHIFT                           8
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__RX_ASW__WIDTH                           8
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__RX_ASW__MASK                  0x0000ff00U
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__RX_ASW__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__RX_ASW__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__RX_ASW__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__RX_ASW__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__RX_ASW__RESET_VALUE           0x00000060U
/** @} */

/* macros for field tx_asw */
/**
 * @defgroup at_lc_regs_core_tx_asw_field tx_asw_field
 * @brief macros for field tx_asw
 * @details tx antenna switch time in 8 MHz period or 0.125 micro seconds
 * @{
 */
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__TX_ASW__SHIFT                          16
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__TX_ASW__WIDTH                           8
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__TX_ASW__MASK                  0x00ff0000U
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__TX_ASW__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__TX_ASW__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00ff0000U)
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__TX_ASW__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00ff0000U) | (((uint32_t)(src) <<\
                    16) & 0x00ff0000U)
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__TX_ASW__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00ff0000U)))
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__TX_ASW__RESET_VALUE           0x00000060U
/** @} */
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__TYPE                             uint32_t
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__READ                          0x00ffffffU
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__WRITE                         0x00ffffffU
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__PRESERVED                     0x00000000U
#define ATLC_PTHDLY_DF_2US_2MBPS_BLE__RESET_VALUE                   0x00606000U

#endif /* __ATLC_PTHDLY_DF_2US_2MBPS_BLE_MACRO__ */

/** @} end of pthdly_df_2us_2mbps_ble */

/* macros for BlueprintGlobalNameSpace::ATLC_pthdly_1mbps_ble_cs_tn */
/**
 * @defgroup at_lc_regs_core_pthdly_1mbps_ble_cs_tn pthdly_1mbps_ble_cs_tn
 * @brief Contains register fields associated with pthdly_1mbps_ble_cs_tn. definitions.
 * @{
 */
#ifndef __ATLC_PTHDLY_1MBPS_BLE_CS_TN_MACRO__
#define __ATLC_PTHDLY_1MBPS_BLE_CS_TN_MACRO__

/* macros for field rx */
/**
 * @defgroup at_lc_regs_core_rx_field rx_field
 * @brief macros for field rx
 * @details rx path delay in 62.5 ns
 * @{
 */
#define ATLC_PTHDLY_1MBPS_BLE_CS_TN__RX__SHIFT                                0
#define ATLC_PTHDLY_1MBPS_BLE_CS_TN__RX__WIDTH                               12
#define ATLC_PTHDLY_1MBPS_BLE_CS_TN__RX__MASK                       0x00000fffU
#define ATLC_PTHDLY_1MBPS_BLE_CS_TN__RX__READ(src) \
                    ((uint32_t)(src)\
                    & 0x00000fffU)
#define ATLC_PTHDLY_1MBPS_BLE_CS_TN__RX__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x00000fffU)
#define ATLC_PTHDLY_1MBPS_BLE_CS_TN__RX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000fffU) | ((uint32_t)(src) &\
                    0x00000fffU)
#define ATLC_PTHDLY_1MBPS_BLE_CS_TN__RX__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000fffU)))
#define ATLC_PTHDLY_1MBPS_BLE_CS_TN__RX__RESET_VALUE                0x00000020U
/** @} */

/* macros for field tx */
/**
 * @defgroup at_lc_regs_core_tx_field tx_field
 * @brief macros for field tx
 * @details tx path delay in 62.5 ns
 * @{
 */
#define ATLC_PTHDLY_1MBPS_BLE_CS_TN__TX__SHIFT                               15
#define ATLC_PTHDLY_1MBPS_BLE_CS_TN__TX__WIDTH                               12
#define ATLC_PTHDLY_1MBPS_BLE_CS_TN__TX__MASK                       0x07ff8000U
#define ATLC_PTHDLY_1MBPS_BLE_CS_TN__TX__READ(src) \
                    (((uint32_t)(src)\
                    & 0x07ff8000U) >> 15)
#define ATLC_PTHDLY_1MBPS_BLE_CS_TN__TX__WRITE(src) \
                    (((uint32_t)(src)\
                    << 15) & 0x07ff8000U)
#define ATLC_PTHDLY_1MBPS_BLE_CS_TN__TX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x07ff8000U) | (((uint32_t)(src) <<\
                    15) & 0x07ff8000U)
#define ATLC_PTHDLY_1MBPS_BLE_CS_TN__TX__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 15) & ~0x07ff8000U)))
#define ATLC_PTHDLY_1MBPS_BLE_CS_TN__TX__RESET_VALUE                0x00000000U
/** @} */
#define ATLC_PTHDLY_1MBPS_BLE_CS_TN__TYPE                              uint32_t
#define ATLC_PTHDLY_1MBPS_BLE_CS_TN__READ                           0x07ff8fffU
#define ATLC_PTHDLY_1MBPS_BLE_CS_TN__WRITE                          0x07ff8fffU
#define ATLC_PTHDLY_1MBPS_BLE_CS_TN__PRESERVED                      0x00000000U
#define ATLC_PTHDLY_1MBPS_BLE_CS_TN__RESET_VALUE                    0x00000020U

#endif /* __ATLC_PTHDLY_1MBPS_BLE_CS_TN_MACRO__ */

/** @} end of pthdly_1mbps_ble_cs_tn */

/* macros for BlueprintGlobalNameSpace::ATLC_pthdly_2mbps_ble_cs_tn */
/**
 * @defgroup at_lc_regs_core_pthdly_2mbps_ble_cs_tn pthdly_2mbps_ble_cs_tn
 * @brief Contains register fields associated with pthdly_2mbps_ble_cs_tn. definitions.
 * @{
 */
#ifndef __ATLC_PTHDLY_2MBPS_BLE_CS_TN_MACRO__
#define __ATLC_PTHDLY_2MBPS_BLE_CS_TN_MACRO__

/* macros for field rx */
/**
 * @defgroup at_lc_regs_core_rx_field rx_field
 * @brief macros for field rx
 * @details rx path delay in 62.5 ns
 * @{
 */
#define ATLC_PTHDLY_2MBPS_BLE_CS_TN__RX__SHIFT                                0
#define ATLC_PTHDLY_2MBPS_BLE_CS_TN__RX__WIDTH                               12
#define ATLC_PTHDLY_2MBPS_BLE_CS_TN__RX__MASK                       0x00000fffU
#define ATLC_PTHDLY_2MBPS_BLE_CS_TN__RX__READ(src) \
                    ((uint32_t)(src)\
                    & 0x00000fffU)
#define ATLC_PTHDLY_2MBPS_BLE_CS_TN__RX__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x00000fffU)
#define ATLC_PTHDLY_2MBPS_BLE_CS_TN__RX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000fffU) | ((uint32_t)(src) &\
                    0x00000fffU)
#define ATLC_PTHDLY_2MBPS_BLE_CS_TN__RX__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000fffU)))
#define ATLC_PTHDLY_2MBPS_BLE_CS_TN__RX__RESET_VALUE                0x00000010U
/** @} */

/* macros for field tx */
/**
 * @defgroup at_lc_regs_core_tx_field tx_field
 * @brief macros for field tx
 * @details tx path delay in 62.5 ns
 * @{
 */
#define ATLC_PTHDLY_2MBPS_BLE_CS_TN__TX__SHIFT                               15
#define ATLC_PTHDLY_2MBPS_BLE_CS_TN__TX__WIDTH                               12
#define ATLC_PTHDLY_2MBPS_BLE_CS_TN__TX__MASK                       0x07ff8000U
#define ATLC_PTHDLY_2MBPS_BLE_CS_TN__TX__READ(src) \
                    (((uint32_t)(src)\
                    & 0x07ff8000U) >> 15)
#define ATLC_PTHDLY_2MBPS_BLE_CS_TN__TX__WRITE(src) \
                    (((uint32_t)(src)\
                    << 15) & 0x07ff8000U)
#define ATLC_PTHDLY_2MBPS_BLE_CS_TN__TX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x07ff8000U) | (((uint32_t)(src) <<\
                    15) & 0x07ff8000U)
#define ATLC_PTHDLY_2MBPS_BLE_CS_TN__TX__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 15) & ~0x07ff8000U)))
#define ATLC_PTHDLY_2MBPS_BLE_CS_TN__TX__RESET_VALUE                0x00000000U
/** @} */
#define ATLC_PTHDLY_2MBPS_BLE_CS_TN__TYPE                              uint32_t
#define ATLC_PTHDLY_2MBPS_BLE_CS_TN__READ                           0x07ff8fffU
#define ATLC_PTHDLY_2MBPS_BLE_CS_TN__WRITE                          0x07ff8fffU
#define ATLC_PTHDLY_2MBPS_BLE_CS_TN__PRESERVED                      0x00000000U
#define ATLC_PTHDLY_2MBPS_BLE_CS_TN__RESET_VALUE                    0x00000010U

#endif /* __ATLC_PTHDLY_2MBPS_BLE_CS_TN_MACRO__ */

/** @} end of pthdly_2mbps_ble_cs_tn */

/* macros for BlueprintGlobalNameSpace::ATLC_pthdly_1mbps_ble_cs */
/**
 * @defgroup at_lc_regs_core_pthdly_1mbps_ble_cs pthdly_1mbps_ble_cs
 * @brief Contains register fields associated with pthdly_1mbps_ble_cs. definitions.
 * @{
 */
#ifndef __ATLC_PTHDLY_1MBPS_BLE_CS_MACRO__
#define __ATLC_PTHDLY_1MBPS_BLE_CS_MACRO__

/* macros for field rx */
/**
 * @defgroup at_lc_regs_core_rx_field rx_field
 * @brief macros for field rx
 * @details rx path delay in 62.5 ns
 * @{
 */
#define ATLC_PTHDLY_1MBPS_BLE_CS__RX__SHIFT                                   0
#define ATLC_PTHDLY_1MBPS_BLE_CS__RX__WIDTH                                  12
#define ATLC_PTHDLY_1MBPS_BLE_CS__RX__MASK                          0x00000fffU
#define ATLC_PTHDLY_1MBPS_BLE_CS__RX__READ(src) ((uint32_t)(src) & 0x00000fffU)
#define ATLC_PTHDLY_1MBPS_BLE_CS__RX__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x00000fffU)
#define ATLC_PTHDLY_1MBPS_BLE_CS__RX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000fffU) | ((uint32_t)(src) &\
                    0x00000fffU)
#define ATLC_PTHDLY_1MBPS_BLE_CS__RX__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000fffU)))
#define ATLC_PTHDLY_1MBPS_BLE_CS__RX__RESET_VALUE                   0x00000039U
/** @} */

/* macros for field tx */
/**
 * @defgroup at_lc_regs_core_tx_field tx_field
 * @brief macros for field tx
 * @details tx path delay in 62.5 ns
 * @{
 */
#define ATLC_PTHDLY_1MBPS_BLE_CS__TX__SHIFT                                  15
#define ATLC_PTHDLY_1MBPS_BLE_CS__TX__WIDTH                                  12
#define ATLC_PTHDLY_1MBPS_BLE_CS__TX__MASK                          0x07ff8000U
#define ATLC_PTHDLY_1MBPS_BLE_CS__TX__READ(src) \
                    (((uint32_t)(src)\
                    & 0x07ff8000U) >> 15)
#define ATLC_PTHDLY_1MBPS_BLE_CS__TX__WRITE(src) \
                    (((uint32_t)(src)\
                    << 15) & 0x07ff8000U)
#define ATLC_PTHDLY_1MBPS_BLE_CS__TX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x07ff8000U) | (((uint32_t)(src) <<\
                    15) & 0x07ff8000U)
#define ATLC_PTHDLY_1MBPS_BLE_CS__TX__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 15) & ~0x07ff8000U)))
#define ATLC_PTHDLY_1MBPS_BLE_CS__TX__RESET_VALUE                   0x0000001fU
/** @} */
#define ATLC_PTHDLY_1MBPS_BLE_CS__TYPE                                 uint32_t
#define ATLC_PTHDLY_1MBPS_BLE_CS__READ                              0x07ff8fffU
#define ATLC_PTHDLY_1MBPS_BLE_CS__WRITE                             0x07ff8fffU
#define ATLC_PTHDLY_1MBPS_BLE_CS__PRESERVED                         0x00000000U
#define ATLC_PTHDLY_1MBPS_BLE_CS__RESET_VALUE                       0x000f8039U

#endif /* __ATLC_PTHDLY_1MBPS_BLE_CS_MACRO__ */

/** @} end of pthdly_1mbps_ble_cs */

/* macros for BlueprintGlobalNameSpace::ATLC_pthdly_2mbps_ble_cs */
/**
 * @defgroup at_lc_regs_core_pthdly_2mbps_ble_cs pthdly_2mbps_ble_cs
 * @brief Contains register fields associated with pthdly_2mbps_ble_cs. definitions.
 * @{
 */
#ifndef __ATLC_PTHDLY_2MBPS_BLE_CS_MACRO__
#define __ATLC_PTHDLY_2MBPS_BLE_CS_MACRO__

/* macros for field rx */
/**
 * @defgroup at_lc_regs_core_rx_field rx_field
 * @brief macros for field rx
 * @details rx path delay in 62.5 ns
 * @{
 */
#define ATLC_PTHDLY_2MBPS_BLE_CS__RX__SHIFT                                   0
#define ATLC_PTHDLY_2MBPS_BLE_CS__RX__WIDTH                                  12
#define ATLC_PTHDLY_2MBPS_BLE_CS__RX__MASK                          0x00000fffU
#define ATLC_PTHDLY_2MBPS_BLE_CS__RX__READ(src) ((uint32_t)(src) & 0x00000fffU)
#define ATLC_PTHDLY_2MBPS_BLE_CS__RX__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x00000fffU)
#define ATLC_PTHDLY_2MBPS_BLE_CS__RX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000fffU) | ((uint32_t)(src) &\
                    0x00000fffU)
#define ATLC_PTHDLY_2MBPS_BLE_CS__RX__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000fffU)))
#define ATLC_PTHDLY_2MBPS_BLE_CS__RX__RESET_VALUE                   0x00000026U
/** @} */

/* macros for field tx */
/**
 * @defgroup at_lc_regs_core_tx_field tx_field
 * @brief macros for field tx
 * @details tx path delay in 62.5 ns
 * @{
 */
#define ATLC_PTHDLY_2MBPS_BLE_CS__TX__SHIFT                                  15
#define ATLC_PTHDLY_2MBPS_BLE_CS__TX__WIDTH                                  12
#define ATLC_PTHDLY_2MBPS_BLE_CS__TX__MASK                          0x07ff8000U
#define ATLC_PTHDLY_2MBPS_BLE_CS__TX__READ(src) \
                    (((uint32_t)(src)\
                    & 0x07ff8000U) >> 15)
#define ATLC_PTHDLY_2MBPS_BLE_CS__TX__WRITE(src) \
                    (((uint32_t)(src)\
                    << 15) & 0x07ff8000U)
#define ATLC_PTHDLY_2MBPS_BLE_CS__TX__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x07ff8000U) | (((uint32_t)(src) <<\
                    15) & 0x07ff8000U)
#define ATLC_PTHDLY_2MBPS_BLE_CS__TX__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 15) & ~0x07ff8000U)))
#define ATLC_PTHDLY_2MBPS_BLE_CS__TX__RESET_VALUE                   0x0000000eU
/** @} */
#define ATLC_PTHDLY_2MBPS_BLE_CS__TYPE                                 uint32_t
#define ATLC_PTHDLY_2MBPS_BLE_CS__READ                              0x07ff8fffU
#define ATLC_PTHDLY_2MBPS_BLE_CS__WRITE                             0x07ff8fffU
#define ATLC_PTHDLY_2MBPS_BLE_CS__PRESERVED                         0x00000000U
#define ATLC_PTHDLY_2MBPS_BLE_CS__RESET_VALUE                       0x00070026U

#endif /* __ATLC_PTHDLY_2MBPS_BLE_CS_MACRO__ */

/** @} end of pthdly_2mbps_ble_cs */

/* macros for BlueprintGlobalNameSpace::ATLC_tx_st_fn */
/**
 * @defgroup at_lc_regs_core_tx_st_fn tx_st_fn
 * @brief Contains register fields associated with tx_st_fn. definitions.
 * @{
 */
#ifndef __ATLC_TX_ST_FN_MACRO__
#define __ATLC_TX_ST_FN_MACRO__

/* macros for field tm_stmp */
/**
 * @defgroup at_lc_regs_core_tm_stmp_field tm_stmp_field
 * @brief macros for field tm_stmp
 * @details tx start packet (1st bit of preamble) fine time stamp in 62.5 ns supported for all protocols.
 * @{
 */
#define ATLC_TX_ST_FN__TM_STMP__SHIFT                                         0
#define ATLC_TX_ST_FN__TM_STMP__WIDTH                                        32
#define ATLC_TX_ST_FN__TM_STMP__MASK                                0xffffffffU
#define ATLC_TX_ST_FN__TM_STMP__READ(src)       ((uint32_t)(src) & 0xffffffffU)
#define ATLC_TX_ST_FN__TM_STMP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_TX_ST_FN__TYPE                                            uint32_t
#define ATLC_TX_ST_FN__READ                                         0xffffffffU
#define ATLC_TX_ST_FN__PRESERVED                                    0x00000000U
#define ATLC_TX_ST_FN__RESET_VALUE                                  0x00000000U

#endif /* __ATLC_TX_ST_FN_MACRO__ */

/** @} end of tx_st_fn */

/* macros for BlueprintGlobalNameSpace::ATLC_tx_ed_fn */
/**
 * @defgroup at_lc_regs_core_tx_ed_fn tx_ed_fn
 * @brief Contains register fields associated with tx_ed_fn. definitions.
 * @{
 */
#ifndef __ATLC_TX_ED_FN_MACRO__
#define __ATLC_TX_ED_FN_MACRO__

/* macros for field tm_stmp */
/**
 * @defgroup at_lc_regs_core_tm_stmp_field tm_stmp_field
 * @brief macros for field tm_stmp
 * @details tx end packet (last bit of crc) fine time stamp in 62.5 ns supported for all protocols.
 * @{
 */
#define ATLC_TX_ED_FN__TM_STMP__SHIFT                                         0
#define ATLC_TX_ED_FN__TM_STMP__WIDTH                                        32
#define ATLC_TX_ED_FN__TM_STMP__MASK                                0xffffffffU
#define ATLC_TX_ED_FN__TM_STMP__READ(src)       ((uint32_t)(src) & 0xffffffffU)
#define ATLC_TX_ED_FN__TM_STMP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_TX_ED_FN__TYPE                                            uint32_t
#define ATLC_TX_ED_FN__READ                                         0xffffffffU
#define ATLC_TX_ED_FN__PRESERVED                                    0x00000000U
#define ATLC_TX_ED_FN__RESET_VALUE                                  0x00000000U

#endif /* __ATLC_TX_ED_FN_MACRO__ */

/** @} end of tx_ed_fn */

/* macros for BlueprintGlobalNameSpace::ATLC_rx_st_fn */
/**
 * @defgroup at_lc_regs_core_rx_st_fn rx_st_fn
 * @brief Contains register fields associated with rx_st_fn. definitions.
 * @{
 */
#ifndef __ATLC_RX_ST_FN_MACRO__
#define __ATLC_RX_ST_FN_MACRO__

/* macros for field tm_stmp */
/**
 * @defgroup at_lc_regs_core_tm_stmp_field tm_stmp_field
 * @brief macros for field tm_stmp
 * @details rx start packet (1st bit after access address found) fine time stamp in 62.5 ns supported for all protocols.
 * @{
 */
#define ATLC_RX_ST_FN__TM_STMP__SHIFT                                         0
#define ATLC_RX_ST_FN__TM_STMP__WIDTH                                        32
#define ATLC_RX_ST_FN__TM_STMP__MASK                                0xffffffffU
#define ATLC_RX_ST_FN__TM_STMP__READ(src)       ((uint32_t)(src) & 0xffffffffU)
#define ATLC_RX_ST_FN__TM_STMP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_RX_ST_FN__TYPE                                            uint32_t
#define ATLC_RX_ST_FN__READ                                         0xffffffffU
#define ATLC_RX_ST_FN__PRESERVED                                    0x00000000U
#define ATLC_RX_ST_FN__RESET_VALUE                                  0x00000000U

#endif /* __ATLC_RX_ST_FN_MACRO__ */

/** @} end of rx_st_fn */

/* macros for BlueprintGlobalNameSpace::ATLC_rx_prmbl_st_fn */
/**
 * @defgroup at_lc_regs_core_rx_prmbl_st_fn rx_prmbl_st_fn
 * @brief Contains register fields associated with rx_prmbl_st_fn. definitions.
 * @{
 */
#ifndef __ATLC_RX_PRMBL_ST_FN_MACRO__
#define __ATLC_RX_PRMBL_ST_FN_MACRO__

/* macros for field tm_stmp */
/**
 * @defgroup at_lc_regs_core_tm_stmp_field tm_stmp_field
 * @brief macros for field tm_stmp
 * @details rx start preamble fine time stamp in 62.5 ns supported for BLE and 15.4.
 * @{
 */
#define ATLC_RX_PRMBL_ST_FN__TM_STMP__SHIFT                                   0
#define ATLC_RX_PRMBL_ST_FN__TM_STMP__WIDTH                                  32
#define ATLC_RX_PRMBL_ST_FN__TM_STMP__MASK                          0xffffffffU
#define ATLC_RX_PRMBL_ST_FN__TM_STMP__READ(src) ((uint32_t)(src) & 0xffffffffU)
#define ATLC_RX_PRMBL_ST_FN__TM_STMP__RESET_VALUE                   0x00000000U
/** @} */
#define ATLC_RX_PRMBL_ST_FN__TYPE                                      uint32_t
#define ATLC_RX_PRMBL_ST_FN__READ                                   0xffffffffU
#define ATLC_RX_PRMBL_ST_FN__PRESERVED                              0x00000000U
#define ATLC_RX_PRMBL_ST_FN__RESET_VALUE                            0x00000000U

#endif /* __ATLC_RX_PRMBL_ST_FN_MACRO__ */

/** @} end of rx_prmbl_st_fn */

/* macros for BlueprintGlobalNameSpace::ATLC_rx_ed_fn */
/**
 * @defgroup at_lc_regs_core_rx_ed_fn rx_ed_fn
 * @brief Contains register fields associated with rx_ed_fn. definitions.
 * @{
 */
#ifndef __ATLC_RX_ED_FN_MACRO__
#define __ATLC_RX_ED_FN_MACRO__

/* macros for field tm_stmp */
/**
 * @defgroup at_lc_regs_core_tm_stmp_field tm_stmp_field
 * @brief macros for field tm_stmp
 * @details rx end packet (last bit of crc) fine time stamp in 62.5 ns supported for all protocols.
 * @{
 */
#define ATLC_RX_ED_FN__TM_STMP__SHIFT                                         0
#define ATLC_RX_ED_FN__TM_STMP__WIDTH                                        32
#define ATLC_RX_ED_FN__TM_STMP__MASK                                0xffffffffU
#define ATLC_RX_ED_FN__TM_STMP__READ(src)       ((uint32_t)(src) & 0xffffffffU)
#define ATLC_RX_ED_FN__TM_STMP__RESET_VALUE                         0x00000000U
/** @} */
#define ATLC_RX_ED_FN__TYPE                                            uint32_t
#define ATLC_RX_ED_FN__READ                                         0xffffffffU
#define ATLC_RX_ED_FN__PRESERVED                                    0x00000000U
#define ATLC_RX_ED_FN__RESET_VALUE                                  0x00000000U

#endif /* __ATLC_RX_ED_FN_MACRO__ */

/** @} end of rx_ed_fn */

/* macros for BlueprintGlobalNameSpace::ATLC_dtop */
/**
 * @defgroup at_lc_regs_core_dtop dtop
 * @brief dtop related controls definitions.
 * @{
 */
#ifndef __ATLC_DTOP_MACRO__
#define __ATLC_DTOP_MACRO__

/* macros for field cmmn_lif_p */
/**
 * @defgroup at_lc_regs_core_cmmn_lif_p_field cmmn_lif_p_field
 * @brief macros for field cmmn_lif_p
 * @details trigger common low if related register programming (__SELF_CLEARING__)
 * @{
 */
#define ATLC_DTOP__CMMN_LIF_P__SHIFT                                          0
#define ATLC_DTOP__CMMN_LIF_P__WIDTH                                          1
#define ATLC_DTOP__CMMN_LIF_P__MASK                                 0x00000001U
#define ATLC_DTOP__CMMN_LIF_P__READ(src)        ((uint32_t)(src) & 0x00000001U)
#define ATLC_DTOP__CMMN_LIF_P__WRITE(src)       ((uint32_t)(src) & 0x00000001U)
#define ATLC_DTOP__CMMN_LIF_P__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_DTOP__CMMN_LIF_P__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_DTOP__CMMN_LIF_P__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_DTOP__CMMN_LIF_P__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_DTOP__CMMN_LIF_P__RESET_VALUE                          0x00000000U
/** @} */

/* macros for field cmmn_lif_n */
/**
 * @defgroup at_lc_regs_core_cmmn_lif_n_field cmmn_lif_n_field
 * @brief macros for field cmmn_lif_n
 * @details trigger common low if related register programming (__SELF_CLEARING__)
 * @{
 */
#define ATLC_DTOP__CMMN_LIF_N__SHIFT                                          1
#define ATLC_DTOP__CMMN_LIF_N__WIDTH                                          1
#define ATLC_DTOP__CMMN_LIF_N__MASK                                 0x00000002U
#define ATLC_DTOP__CMMN_LIF_N__READ(src) (((uint32_t)(src) & 0x00000002U) >> 1)
#define ATLC_DTOP__CMMN_LIF_N__WRITE(src) \
                    (((uint32_t)(src)\
                    << 1) & 0x00000002U)
#define ATLC_DTOP__CMMN_LIF_N__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | (((uint32_t)(src) <<\
                    1) & 0x00000002U)
#define ATLC_DTOP__CMMN_LIF_N__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 1) & ~0x00000002U)))
#define ATLC_DTOP__CMMN_LIF_N__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(1) << 1)
#define ATLC_DTOP__CMMN_LIF_N__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000002U) | ((uint32_t)(0) << 1)
#define ATLC_DTOP__CMMN_LIF_N__RESET_VALUE                          0x00000000U
/** @} */

/* macros for field cmmn_lif_wvld */
/**
 * @defgroup at_lc_regs_core_cmmn_lif_wvld_field cmmn_lif_wvld_field
 * @brief macros for field cmmn_lif_wvld
 * @details which of the 4 register writes should be triggered
 * @{
 */
#define ATLC_DTOP__CMMN_LIF_WVLD__SHIFT                                       2
#define ATLC_DTOP__CMMN_LIF_WVLD__WIDTH                                       4
#define ATLC_DTOP__CMMN_LIF_WVLD__MASK                              0x0000003cU
#define ATLC_DTOP__CMMN_LIF_WVLD__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000003cU) >> 2)
#define ATLC_DTOP__CMMN_LIF_WVLD__WRITE(src) \
                    (((uint32_t)(src)\
                    << 2) & 0x0000003cU)
#define ATLC_DTOP__CMMN_LIF_WVLD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000003cU) | (((uint32_t)(src) <<\
                    2) & 0x0000003cU)
#define ATLC_DTOP__CMMN_LIF_WVLD__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 2) & ~0x0000003cU)))
#define ATLC_DTOP__CMMN_LIF_WVLD__RESET_VALUE                       0x00000007U
/** @} */

/* macros for field chnl_idx_vld */
/**
 * @defgroup at_lc_regs_core_chnl_idx_vld_field chnl_idx_vld_field
 * @brief macros for field chnl_idx_vld
 * @details which of the 4 register writes is write to channel index
 * @{
 */
#define ATLC_DTOP__CHNL_IDX_VLD__SHIFT                                        8
#define ATLC_DTOP__CHNL_IDX_VLD__WIDTH                                        4
#define ATLC_DTOP__CHNL_IDX_VLD__MASK                               0x00000f00U
#define ATLC_DTOP__CHNL_IDX_VLD__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00000f00U) >> 8)
#define ATLC_DTOP__CHNL_IDX_VLD__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x00000f00U)
#define ATLC_DTOP__CHNL_IDX_VLD__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000f00U) | (((uint32_t)(src) <<\
                    8) & 0x00000f00U)
#define ATLC_DTOP__CHNL_IDX_VLD__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x00000f00U)))
#define ATLC_DTOP__CHNL_IDX_VLD__RESET_VALUE                        0x00000000U
/** @} */
#define ATLC_DTOP__TYPE                                                uint32_t
#define ATLC_DTOP__READ                                             0x00000f3fU
#define ATLC_DTOP__WRITE                                            0x00000f3fU
#define ATLC_DTOP__PRESERVED                                        0x00000000U
#define ATLC_DTOP__RESET_VALUE                                      0x0000001cU

#endif /* __ATLC_DTOP_MACRO__ */

/** @} end of dtop */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_cs_irq */
/**
 * @defgroup at_lc_regs_core_lc_cs_irq lc_cs_irq
 * @brief Contains register fields associated with lc_cs_irq. definitions.
 * @{
 */
#ifndef __ATLC_LC_CS_IRQ_MACRO__
#define __ATLC_LC_CS_IRQ_MACRO__

/* macros for field rx_drdy */
/**
 * @defgroup at_lc_regs_core_rx_drdy_field rx_drdy_field
 * @brief macros for field rx_drdy
 * @details interrupt for receive data ready
 * @{
 */
#define ATLC_LC_CS_IRQ__RX_DRDY__SHIFT                                        0
#define ATLC_LC_CS_IRQ__RX_DRDY__WIDTH                                        1
#define ATLC_LC_CS_IRQ__RX_DRDY__MASK                               0x00000001U
#define ATLC_LC_CS_IRQ__RX_DRDY__READ(src)      ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_CS_IRQ__RX_DRDY__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_CS_IRQ__RX_DRDY__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_CS_IRQ__RX_DRDY__RESET_VALUE                        0x00000000U
/** @} */
#define ATLC_LC_CS_IRQ__TYPE                                           uint32_t
#define ATLC_LC_CS_IRQ__READ                                        0x00000001U
#define ATLC_LC_CS_IRQ__PRESERVED                                   0x00000000U
#define ATLC_LC_CS_IRQ__RESET_VALUE                                 0x00000000U

#endif /* __ATLC_LC_CS_IRQ_MACRO__ */

/** @} end of lc_cs_irq */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_cs_irqm */
/**
 * @defgroup at_lc_regs_core_lc_cs_irqm lc_cs_irqm
 * @brief _RETENTION_ definitions.
 * @{
 */
#ifndef __ATLC_LC_CS_IRQM_MACRO__
#define __ATLC_LC_CS_IRQM_MACRO__

/* macros for field rx_drdy */
/**
 * @defgroup at_lc_regs_core_rx_drdy_field rx_drdy_field
 * @brief macros for field rx_drdy
 * @details interrupt mask for receive data ready
 * @{
 */
#define ATLC_LC_CS_IRQM__RX_DRDY__SHIFT                                       0
#define ATLC_LC_CS_IRQM__RX_DRDY__WIDTH                                       1
#define ATLC_LC_CS_IRQM__RX_DRDY__MASK                              0x00000001U
#define ATLC_LC_CS_IRQM__RX_DRDY__READ(src)     ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_CS_IRQM__RX_DRDY__WRITE(src)    ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_CS_IRQM__RX_DRDY__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_LC_CS_IRQM__RX_DRDY__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_LC_CS_IRQM__RX_DRDY__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_CS_IRQM__RX_DRDY__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_CS_IRQM__RX_DRDY__RESET_VALUE                       0x00000000U
/** @} */
#define ATLC_LC_CS_IRQM__TYPE                                          uint32_t
#define ATLC_LC_CS_IRQM__READ                                       0x00000001U
#define ATLC_LC_CS_IRQM__WRITE                                      0x00000001U
#define ATLC_LC_CS_IRQM__PRESERVED                                  0x00000000U
#define ATLC_LC_CS_IRQM__RESET_VALUE                                0x00000000U

#endif /* __ATLC_LC_CS_IRQM_MACRO__ */

/** @} end of lc_cs_irqm */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_cs_irqs */
/**
 * @defgroup at_lc_regs_core_lc_cs_irqs lc_cs_irqs
 * @brief Contains register fields associated with lc_cs_irqs. definitions.
 * @{
 */
#ifndef __ATLC_LC_CS_IRQS_MACRO__
#define __ATLC_LC_CS_IRQS_MACRO__

/* macros for field rx_drdy */
/**
 * @defgroup at_lc_regs_core_rx_drdy_field rx_drdy_field
 * @brief macros for field rx_drdy
 * @details interrupt for receive data ready, write 1 to set. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_CS_IRQS__RX_DRDY__SHIFT                                       0
#define ATLC_LC_CS_IRQS__RX_DRDY__WIDTH                                       1
#define ATLC_LC_CS_IRQS__RX_DRDY__MASK                              0x00000001U
#define ATLC_LC_CS_IRQS__RX_DRDY__READ(src)     ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_CS_IRQS__RX_DRDY__WRITE(src)    ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_CS_IRQS__RX_DRDY__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_LC_CS_IRQS__RX_DRDY__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_LC_CS_IRQS__RX_DRDY__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_CS_IRQS__RX_DRDY__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_CS_IRQS__RX_DRDY__RESET_VALUE                       0x00000000U
/** @} */
#define ATLC_LC_CS_IRQS__TYPE                                          uint32_t
#define ATLC_LC_CS_IRQS__READ                                       0x00000001U
#define ATLC_LC_CS_IRQS__WRITE                                      0x00000001U
#define ATLC_LC_CS_IRQS__PRESERVED                                  0x00000000U
#define ATLC_LC_CS_IRQS__RESET_VALUE                                0x00000000U

#endif /* __ATLC_LC_CS_IRQS_MACRO__ */

/** @} end of lc_cs_irqs */

/* macros for BlueprintGlobalNameSpace::ATLC_lc_cs_irqc */
/**
 * @defgroup at_lc_regs_core_lc_cs_irqc lc_cs_irqc
 * @brief Contains register fields associated with lc_cs_irqc. definitions.
 * @{
 */
#ifndef __ATLC_LC_CS_IRQC_MACRO__
#define __ATLC_LC_CS_IRQC_MACRO__

/* macros for field rx_drdy */
/**
 * @defgroup at_lc_regs_core_rx_drdy_field rx_drdy_field
 * @brief macros for field rx_drdy
 * @details interrupt for receive data ready, write 1 to clear. (__SELF_CLEARING__)
 * @{
 */
#define ATLC_LC_CS_IRQC__RX_DRDY__SHIFT                                       0
#define ATLC_LC_CS_IRQC__RX_DRDY__WIDTH                                       1
#define ATLC_LC_CS_IRQC__RX_DRDY__MASK                              0x00000001U
#define ATLC_LC_CS_IRQC__RX_DRDY__READ(src)     ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_CS_IRQC__RX_DRDY__WRITE(src)    ((uint32_t)(src) & 0x00000001U)
#define ATLC_LC_CS_IRQC__RX_DRDY__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | ((uint32_t)(src) &\
                    0x00000001U)
#define ATLC_LC_CS_IRQC__RX_DRDY__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x00000001U)))
#define ATLC_LC_CS_IRQC__RX_DRDY__SET(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(1)
#define ATLC_LC_CS_IRQC__RX_DRDY__CLR(dst) \
                    (dst) = ((dst) &\
                    ~0x00000001U) | (uint32_t)(0)
#define ATLC_LC_CS_IRQC__RX_DRDY__RESET_VALUE                       0x00000000U
/** @} */
#define ATLC_LC_CS_IRQC__TYPE                                          uint32_t
#define ATLC_LC_CS_IRQC__READ                                       0x00000001U
#define ATLC_LC_CS_IRQC__WRITE                                      0x00000001U
#define ATLC_LC_CS_IRQC__PRESERVED                                  0x00000000U
#define ATLC_LC_CS_IRQC__RESET_VALUE                                0x00000000U

#endif /* __ATLC_LC_CS_IRQC_MACRO__ */

/** @} end of lc_cs_irqc */

/* macros for BlueprintGlobalNameSpace::ATLC_pwrud_1mbps_ble_cs_tn */
/**
 * @defgroup at_lc_regs_core_pwrud_1mbps_ble_cs_tn pwrud_1mbps_ble_cs_tn
 * @brief Contains register fields associated with pwrud_1mbps_ble_cs_tn. definitions.
 * @{
 */
#ifndef __ATLC_PWRUD_1MBPS_BLE_CS_TN_MACRO__
#define __ATLC_PWRUD_1MBPS_BLE_CS_TN_MACRO__

/* macros for field rx_pwrup */
/**
 * @defgroup at_lc_regs_core_rx_pwrup_field rx_pwrup_field
 * @brief macros for field rx_pwrup
 * @details rx powerup time in micro seconds
 * @{
 */
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__RX_PWRUP__SHIFT                           0
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__RX_PWRUP__WIDTH                           8
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__RX_PWRUP__MASK                  0x000000ffU
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__RX_PWRUP__READ(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__RX_PWRUP__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__RX_PWRUP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__RX_PWRUP__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__RX_PWRUP__RESET_VALUE           0x0000004bU
/** @} */

/* macros for field tx_pwrup */
/**
 * @defgroup at_lc_regs_core_tx_pwrup_field tx_pwrup_field
 * @brief macros for field tx_pwrup
 * @details tx powerup time in micro seconds used when cs_tn only or cs_tn comes before cs_sync
 * @{
 */
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__TX_PWRUP__SHIFT                           8
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__TX_PWRUP__WIDTH                           8
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__TX_PWRUP__MASK                  0x0000ff00U
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__TX_PWRUP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__TX_PWRUP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__TX_PWRUP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__TX_PWRUP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__TX_PWRUP__RESET_VALUE           0x00000038U
/** @} */

/* macros for field tx_pwrdn */
/**
 * @defgroup at_lc_regs_core_tx_pwrdn_field tx_pwrdn_field
 * @brief macros for field tx_pwrdn
 * @details tx powerdn time in micro seconds used when cs_tn only or cs_tn comes after cs_sync
 * @{
 */
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__TX_PWRDN__SHIFT                          16
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__TX_PWRDN__WIDTH                           8
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__TX_PWRDN__MASK                  0x00ff0000U
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__TX_PWRDN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__TX_PWRDN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00ff0000U)
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__TX_PWRDN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00ff0000U) | (((uint32_t)(src) <<\
                    16) & 0x00ff0000U)
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__TX_PWRDN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00ff0000U)))
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__TX_PWRDN__RESET_VALUE           0x00000000U
/** @} */
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__TYPE                               uint32_t
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__READ                            0x00ffffffU
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__WRITE                           0x00ffffffU
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__PRESERVED                       0x00000000U
#define ATLC_PWRUD_1MBPS_BLE_CS_TN__RESET_VALUE                     0x0000384bU

#endif /* __ATLC_PWRUD_1MBPS_BLE_CS_TN_MACRO__ */

/** @} end of pwrud_1mbps_ble_cs_tn */

/* macros for BlueprintGlobalNameSpace::ATLC_pwrud_2mbps_ble_cs_tn */
/**
 * @defgroup at_lc_regs_core_pwrud_2mbps_ble_cs_tn pwrud_2mbps_ble_cs_tn
 * @brief Contains register fields associated with pwrud_2mbps_ble_cs_tn. definitions.
 * @{
 */
#ifndef __ATLC_PWRUD_2MBPS_BLE_CS_TN_MACRO__
#define __ATLC_PWRUD_2MBPS_BLE_CS_TN_MACRO__

/* macros for field rx_pwrup */
/**
 * @defgroup at_lc_regs_core_rx_pwrup_field rx_pwrup_field
 * @brief macros for field rx_pwrup
 * @details rx powerup time in micro seconds
 * @{
 */
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__RX_PWRUP__SHIFT                           0
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__RX_PWRUP__WIDTH                           8
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__RX_PWRUP__MASK                  0x000000ffU
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__RX_PWRUP__READ(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__RX_PWRUP__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__RX_PWRUP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__RX_PWRUP__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__RX_PWRUP__RESET_VALUE           0x0000004bU
/** @} */

/* macros for field tx_pwrup */
/**
 * @defgroup at_lc_regs_core_tx_pwrup_field tx_pwrup_field
 * @brief macros for field tx_pwrup
 * @details tx powerup time in micro seconds used when cs_tn only or cs_tn comes before cs_sync
 * @{
 */
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__TX_PWRUP__SHIFT                           8
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__TX_PWRUP__WIDTH                           8
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__TX_PWRUP__MASK                  0x0000ff00U
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__TX_PWRUP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__TX_PWRUP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__TX_PWRUP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__TX_PWRUP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__TX_PWRUP__RESET_VALUE           0x00000038U
/** @} */

/* macros for field tx_pwrdn */
/**
 * @defgroup at_lc_regs_core_tx_pwrdn_field tx_pwrdn_field
 * @brief macros for field tx_pwrdn
 * @details tx powerdn time in micro seconds used when cs_tn only or cs_tn comes after cs_sync
 * @{
 */
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__TX_PWRDN__SHIFT                          16
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__TX_PWRDN__WIDTH                           8
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__TX_PWRDN__MASK                  0x00ff0000U
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__TX_PWRDN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__TX_PWRDN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00ff0000U)
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__TX_PWRDN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00ff0000U) | (((uint32_t)(src) <<\
                    16) & 0x00ff0000U)
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__TX_PWRDN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00ff0000U)))
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__TX_PWRDN__RESET_VALUE           0x00000000U
/** @} */
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__TYPE                               uint32_t
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__READ                            0x00ffffffU
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__WRITE                           0x00ffffffU
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__PRESERVED                       0x00000000U
#define ATLC_PWRUD_2MBPS_BLE_CS_TN__RESET_VALUE                     0x0000384bU

#endif /* __ATLC_PWRUD_2MBPS_BLE_CS_TN_MACRO__ */

/** @} end of pwrud_2mbps_ble_cs_tn */

/* macros for BlueprintGlobalNameSpace::ATLC_pwrud_1mbps_ble_cs */
/**
 * @defgroup at_lc_regs_core_pwrud_1mbps_ble_cs pwrud_1mbps_ble_cs
 * @brief Contains register fields associated with pwrud_1mbps_ble_cs. definitions.
 * @{
 */
#ifndef __ATLC_PWRUD_1MBPS_BLE_CS_MACRO__
#define __ATLC_PWRUD_1MBPS_BLE_CS_MACRO__

/* macros for field rx_pwrup */
/**
 * @defgroup at_lc_regs_core_rx_pwrup_field rx_pwrup_field
 * @brief macros for field rx_pwrup
 * @details rx powerup time in micro seconds
 * @{
 */
#define ATLC_PWRUD_1MBPS_BLE_CS__RX_PWRUP__SHIFT                              0
#define ATLC_PWRUD_1MBPS_BLE_CS__RX_PWRUP__WIDTH                              8
#define ATLC_PWRUD_1MBPS_BLE_CS__RX_PWRUP__MASK                     0x000000ffU
#define ATLC_PWRUD_1MBPS_BLE_CS__RX_PWRUP__READ(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PWRUD_1MBPS_BLE_CS__RX_PWRUP__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PWRUD_1MBPS_BLE_CS__RX_PWRUP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_PWRUD_1MBPS_BLE_CS__RX_PWRUP__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_PWRUD_1MBPS_BLE_CS__RX_PWRUP__RESET_VALUE              0x0000004bU
/** @} */

/* macros for field tx_pwrup */
/**
 * @defgroup at_lc_regs_core_tx_pwrup_field tx_pwrup_field
 * @brief macros for field tx_pwrup
 * @details tx powerup time in micro seconds used when cs_sync only or cs_sync comes before cs_tn
 * @{
 */
#define ATLC_PWRUD_1MBPS_BLE_CS__TX_PWRUP__SHIFT                              8
#define ATLC_PWRUD_1MBPS_BLE_CS__TX_PWRUP__WIDTH                              8
#define ATLC_PWRUD_1MBPS_BLE_CS__TX_PWRUP__MASK                     0x0000ff00U
#define ATLC_PWRUD_1MBPS_BLE_CS__TX_PWRUP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_PWRUD_1MBPS_BLE_CS__TX_PWRUP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_PWRUD_1MBPS_BLE_CS__TX_PWRUP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_PWRUD_1MBPS_BLE_CS__TX_PWRUP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_PWRUD_1MBPS_BLE_CS__TX_PWRUP__RESET_VALUE              0x00000033U
/** @} */

/* macros for field tx_pwrdn */
/**
 * @defgroup at_lc_regs_core_tx_pwrdn_field tx_pwrdn_field
 * @brief macros for field tx_pwrdn
 * @details tx powerdn time in micro seconds used when cs_tn only or cs_tn comes after cs_sync
 * @{
 */
#define ATLC_PWRUD_1MBPS_BLE_CS__TX_PWRDN__SHIFT                             16
#define ATLC_PWRUD_1MBPS_BLE_CS__TX_PWRDN__WIDTH                              8
#define ATLC_PWRUD_1MBPS_BLE_CS__TX_PWRDN__MASK                     0x00ff0000U
#define ATLC_PWRUD_1MBPS_BLE_CS__TX_PWRDN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_PWRUD_1MBPS_BLE_CS__TX_PWRDN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00ff0000U)
#define ATLC_PWRUD_1MBPS_BLE_CS__TX_PWRDN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00ff0000U) | (((uint32_t)(src) <<\
                    16) & 0x00ff0000U)
#define ATLC_PWRUD_1MBPS_BLE_CS__TX_PWRDN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00ff0000U)))
#define ATLC_PWRUD_1MBPS_BLE_CS__TX_PWRDN__RESET_VALUE              0x00000002U
/** @} */
#define ATLC_PWRUD_1MBPS_BLE_CS__TYPE                                  uint32_t
#define ATLC_PWRUD_1MBPS_BLE_CS__READ                               0x00ffffffU
#define ATLC_PWRUD_1MBPS_BLE_CS__WRITE                              0x00ffffffU
#define ATLC_PWRUD_1MBPS_BLE_CS__PRESERVED                          0x00000000U
#define ATLC_PWRUD_1MBPS_BLE_CS__RESET_VALUE                        0x0002334bU

#endif /* __ATLC_PWRUD_1MBPS_BLE_CS_MACRO__ */

/** @} end of pwrud_1mbps_ble_cs */

/* macros for BlueprintGlobalNameSpace::ATLC_pwrud_2mbps_ble_cs */
/**
 * @defgroup at_lc_regs_core_pwrud_2mbps_ble_cs pwrud_2mbps_ble_cs
 * @brief Contains register fields associated with pwrud_2mbps_ble_cs. definitions.
 * @{
 */
#ifndef __ATLC_PWRUD_2MBPS_BLE_CS_MACRO__
#define __ATLC_PWRUD_2MBPS_BLE_CS_MACRO__

/* macros for field rx_pwrup */
/**
 * @defgroup at_lc_regs_core_rx_pwrup_field rx_pwrup_field
 * @brief macros for field rx_pwrup
 * @details rx powerup time in micro seconds
 * @{
 */
#define ATLC_PWRUD_2MBPS_BLE_CS__RX_PWRUP__SHIFT                              0
#define ATLC_PWRUD_2MBPS_BLE_CS__RX_PWRUP__WIDTH                              8
#define ATLC_PWRUD_2MBPS_BLE_CS__RX_PWRUP__MASK                     0x000000ffU
#define ATLC_PWRUD_2MBPS_BLE_CS__RX_PWRUP__READ(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PWRUD_2MBPS_BLE_CS__RX_PWRUP__WRITE(src) \
                    ((uint32_t)(src)\
                    & 0x000000ffU)
#define ATLC_PWRUD_2MBPS_BLE_CS__RX_PWRUP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x000000ffU) | ((uint32_t)(src) &\
                    0x000000ffU)
#define ATLC_PWRUD_2MBPS_BLE_CS__RX_PWRUP__VERIFY(src) \
                    (!(((uint32_t)(src)\
                    & ~0x000000ffU)))
#define ATLC_PWRUD_2MBPS_BLE_CS__RX_PWRUP__RESET_VALUE              0x0000004bU
/** @} */

/* macros for field tx_pwrup */
/**
 * @defgroup at_lc_regs_core_tx_pwrup_field tx_pwrup_field
 * @brief macros for field tx_pwrup
 * @details tx powerup time in micro seconds used when cs_sync only or cs_sync comes before cs_tn
 * @{
 */
#define ATLC_PWRUD_2MBPS_BLE_CS__TX_PWRUP__SHIFT                              8
#define ATLC_PWRUD_2MBPS_BLE_CS__TX_PWRUP__WIDTH                              8
#define ATLC_PWRUD_2MBPS_BLE_CS__TX_PWRUP__MASK                     0x0000ff00U
#define ATLC_PWRUD_2MBPS_BLE_CS__TX_PWRUP__READ(src) \
                    (((uint32_t)(src)\
                    & 0x0000ff00U) >> 8)
#define ATLC_PWRUD_2MBPS_BLE_CS__TX_PWRUP__WRITE(src) \
                    (((uint32_t)(src)\
                    << 8) & 0x0000ff00U)
#define ATLC_PWRUD_2MBPS_BLE_CS__TX_PWRUP__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x0000ff00U) | (((uint32_t)(src) <<\
                    8) & 0x0000ff00U)
#define ATLC_PWRUD_2MBPS_BLE_CS__TX_PWRUP__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 8) & ~0x0000ff00U)))
#define ATLC_PWRUD_2MBPS_BLE_CS__TX_PWRUP__RESET_VALUE              0x00000033U
/** @} */

/* macros for field tx_pwrdn */
/**
 * @defgroup at_lc_regs_core_tx_pwrdn_field tx_pwrdn_field
 * @brief macros for field tx_pwrdn
 * @details tx powerdn time in micro seconds used when cs_tn only or cs_tn comes after cs_sync
 * @{
 */
#define ATLC_PWRUD_2MBPS_BLE_CS__TX_PWRDN__SHIFT                             16
#define ATLC_PWRUD_2MBPS_BLE_CS__TX_PWRDN__WIDTH                              8
#define ATLC_PWRUD_2MBPS_BLE_CS__TX_PWRDN__MASK                     0x00ff0000U
#define ATLC_PWRUD_2MBPS_BLE_CS__TX_PWRDN__READ(src) \
                    (((uint32_t)(src)\
                    & 0x00ff0000U) >> 16)
#define ATLC_PWRUD_2MBPS_BLE_CS__TX_PWRDN__WRITE(src) \
                    (((uint32_t)(src)\
                    << 16) & 0x00ff0000U)
#define ATLC_PWRUD_2MBPS_BLE_CS__TX_PWRDN__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0x00ff0000U) | (((uint32_t)(src) <<\
                    16) & 0x00ff0000U)
#define ATLC_PWRUD_2MBPS_BLE_CS__TX_PWRDN__VERIFY(src) \
                    (!((((uint32_t)(src)\
                    << 16) & ~0x00ff0000U)))
#define ATLC_PWRUD_2MBPS_BLE_CS__TX_PWRDN__RESET_VALUE              0x00000002U
/** @} */
#define ATLC_PWRUD_2MBPS_BLE_CS__TYPE                                  uint32_t
#define ATLC_PWRUD_2MBPS_BLE_CS__READ                               0x00ffffffU
#define ATLC_PWRUD_2MBPS_BLE_CS__WRITE                              0x00ffffffU
#define ATLC_PWRUD_2MBPS_BLE_CS__PRESERVED                          0x00000000U
#define ATLC_PWRUD_2MBPS_BLE_CS__RESET_VALUE                        0x0002334bU

#endif /* __ATLC_PWRUD_2MBPS_BLE_CS_MACRO__ */

/** @} end of pwrud_2mbps_ble_cs */

/* macros for BlueprintGlobalNameSpace::ATLC_spare0 */
/**
 * @defgroup at_lc_regs_core_spare0 spare0
 * @brief spare register 0 definitions.
 * @{
 */
#ifndef __ATLC_SPARE0_MACRO__
#define __ATLC_SPARE0_MACRO__

/* macros for field val */
/**
 * @defgroup at_lc_regs_core_val_field val_field
 * @brief macros for field val
 * @details spare bits
 * @{
 */
#define ATLC_SPARE0__VAL__SHIFT                                               0
#define ATLC_SPARE0__VAL__WIDTH                                              32
#define ATLC_SPARE0__VAL__MASK                                      0xffffffffU
#define ATLC_SPARE0__VAL__READ(src)             ((uint32_t)(src) & 0xffffffffU)
#define ATLC_SPARE0__VAL__WRITE(src)            ((uint32_t)(src) & 0xffffffffU)
#define ATLC_SPARE0__VAL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_SPARE0__VAL__VERIFY(src)     (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_SPARE0__VAL__RESET_VALUE                               0x0000000fU
/** @} */
#define ATLC_SPARE0__TYPE                                              uint32_t
#define ATLC_SPARE0__READ                                           0xffffffffU
#define ATLC_SPARE0__WRITE                                          0xffffffffU
#define ATLC_SPARE0__PRESERVED                                      0x00000000U
#define ATLC_SPARE0__RESET_VALUE                                    0x0000000fU

#endif /* __ATLC_SPARE0_MACRO__ */

/** @} end of spare0 */

/* macros for BlueprintGlobalNameSpace::ATLC_spare1 */
/**
 * @defgroup at_lc_regs_core_spare1 spare1
 * @brief spare register 1 definitions.
 * @{
 */
#ifndef __ATLC_SPARE1_MACRO__
#define __ATLC_SPARE1_MACRO__

/* macros for field val */
/**
 * @defgroup at_lc_regs_core_val_field val_field
 * @brief macros for field val
 * @details spare bits
 * @{
 */
#define ATLC_SPARE1__VAL__SHIFT                                               0
#define ATLC_SPARE1__VAL__WIDTH                                              32
#define ATLC_SPARE1__VAL__MASK                                      0xffffffffU
#define ATLC_SPARE1__VAL__READ(src)             ((uint32_t)(src) & 0xffffffffU)
#define ATLC_SPARE1__VAL__WRITE(src)            ((uint32_t)(src) & 0xffffffffU)
#define ATLC_SPARE1__VAL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_SPARE1__VAL__VERIFY(src)     (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_SPARE1__VAL__RESET_VALUE                               0x0000000fU
/** @} */
#define ATLC_SPARE1__TYPE                                              uint32_t
#define ATLC_SPARE1__READ                                           0xffffffffU
#define ATLC_SPARE1__WRITE                                          0xffffffffU
#define ATLC_SPARE1__PRESERVED                                      0x00000000U
#define ATLC_SPARE1__RESET_VALUE                                    0x0000000fU

#endif /* __ATLC_SPARE1_MACRO__ */

/** @} end of spare1 */

/* macros for BlueprintGlobalNameSpace::ATLC_spare2 */
/**
 * @defgroup at_lc_regs_core_spare2 spare2
 * @brief spare register 2 definitions.
 * @{
 */
#ifndef __ATLC_SPARE2_MACRO__
#define __ATLC_SPARE2_MACRO__

/* macros for field val */
/**
 * @defgroup at_lc_regs_core_val_field val_field
 * @brief macros for field val
 * @details spare bits
 * @{
 */
#define ATLC_SPARE2__VAL__SHIFT                                               0
#define ATLC_SPARE2__VAL__WIDTH                                              32
#define ATLC_SPARE2__VAL__MASK                                      0xffffffffU
#define ATLC_SPARE2__VAL__READ(src)             ((uint32_t)(src) & 0xffffffffU)
#define ATLC_SPARE2__VAL__WRITE(src)            ((uint32_t)(src) & 0xffffffffU)
#define ATLC_SPARE2__VAL__MODIFY(dst, src) \
                    (dst) = ((dst) &\
                    ~0xffffffffU) | ((uint32_t)(src) &\
                    0xffffffffU)
#define ATLC_SPARE2__VAL__VERIFY(src)     (!(((uint32_t)(src) & ~0xffffffffU)))
#define ATLC_SPARE2__VAL__RESET_VALUE                               0x0000000fU
/** @} */
#define ATLC_SPARE2__TYPE                                              uint32_t
#define ATLC_SPARE2__READ                                           0xffffffffU
#define ATLC_SPARE2__WRITE                                          0xffffffffU
#define ATLC_SPARE2__PRESERVED                                      0x00000000U
#define ATLC_SPARE2__RESET_VALUE                                    0x0000000fU

#endif /* __ATLC_SPARE2_MACRO__ */

/** @} end of spare2 */

/* macros for BlueprintGlobalNameSpace::ATLC_id */
/**
 * @defgroup at_lc_regs_core_id id
 * @brief Contains register fields associated with id. definitions.
 * @{
 */
#ifndef __ATLC_ID_MACRO__
#define __ATLC_ID_MACRO__

/* macros for field id */
/**
 * @defgroup at_lc_regs_core_id_field id_field
 * @brief macros for field id
 * @details 'ATLC' in ASCII
 * @{
 */
#define ATLC_ID__ID__SHIFT                                                    0
#define ATLC_ID__ID__WIDTH                                                   32
#define ATLC_ID__ID__MASK                                           0xffffffffU
#define ATLC_ID__ID__READ(src)                  ((uint32_t)(src) & 0xffffffffU)
#define ATLC_ID__ID__RESET_VALUE                                    0x41544c43U
/** @} */
#define ATLC_ID__TYPE                                                  uint32_t
#define ATLC_ID__READ                                               0xffffffffU
#define ATLC_ID__PRESERVED                                          0x00000000U
#define ATLC_ID__RESET_VALUE                                        0x41544c43U

#endif /* __ATLC_ID_MACRO__ */

/** @} end of id */

/* macros for BlueprintGlobalNameSpace::ATLC_rev_hash */
/**
 * @defgroup at_lc_regs_core_rev_hash rev_hash
 * @brief Contains register fields associated with rev_hash. definitions.
 * @{
 */
#ifndef __ATLC_REV_HASH_MACRO__
#define __ATLC_REV_HASH_MACRO__

/* macros for field id */
/**
 * @defgroup at_lc_regs_core_id_field id_field
 * @brief macros for field id
 * @details crc32 of this document; don't change value to anything other than 32'h00000000; scripts will fill it out in the verilog
 * @{
 */
#define ATLC_REV_HASH__ID__SHIFT                                              0
#define ATLC_REV_HASH__ID__WIDTH                                             32
#define ATLC_REV_HASH__ID__MASK                                     0xffffffffU
#define ATLC_REV_HASH__ID__READ(src)            ((uint32_t)(src) & 0xffffffffU)
#define ATLC_REV_HASH__ID__RESET_VALUE                              0xcae7dae1U
/** @} */
#define ATLC_REV_HASH__TYPE                                            uint32_t
#define ATLC_REV_HASH__READ                                         0xffffffffU
#define ATLC_REV_HASH__PRESERVED                                    0x00000000U
#define ATLC_REV_HASH__RESET_VALUE                                  0xcae7dae1U

#endif /* __ATLC_REV_HASH_MACRO__ */

/** @} end of rev_hash */

/* macros for BlueprintGlobalNameSpace::ATLC_rev_key */
/**
 * @defgroup at_lc_regs_core_rev_key rev_key
 * @brief Contains register fields associated with rev_key. definitions.
 * @{
 */
#ifndef __ATLC_REV_KEY_MACRO__
#define __ATLC_REV_KEY_MACRO__

/* macros for field id */
/**
 * @defgroup at_lc_regs_core_id_field id_field
 * @brief macros for field id
 * @details REV in ASCII
 * @{
 */
#define ATLC_REV_KEY__ID__SHIFT                                               0
#define ATLC_REV_KEY__ID__WIDTH                                              32
#define ATLC_REV_KEY__ID__MASK                                      0xffffffffU
#define ATLC_REV_KEY__ID__READ(src)             ((uint32_t)(src) & 0xffffffffU)
#define ATLC_REV_KEY__ID__RESET_VALUE                               0x52455620U
/** @} */
#define ATLC_REV_KEY__TYPE                                             uint32_t
#define ATLC_REV_KEY__READ                                          0xffffffffU
#define ATLC_REV_KEY__PRESERVED                                     0x00000000U
#define ATLC_REV_KEY__RESET_VALUE                                   0x52455620U

#endif /* __ATLC_REV_KEY_MACRO__ */

/** @} end of rev_key */

/** @} end of AT_LC_REGS_CORE */
#endif /* __REG_AT_LC_REGS_CORE_H__ */
